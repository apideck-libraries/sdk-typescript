/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { Apideck } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Connectionconsents Vault Connection Consents All", async () => {
  const testHttpClient = createTestHTTPClient("vault.connectionConsentsAll");

  const apideck = new Apideck({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKey: process.env["APIDECK_API_KEY"] ?? "value",
  });

  const result = await apideck.vault.connectionConsents.list({
    consumerId: "test-consumer",
    appId: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX",
    serviceId: "pipedrive",
    unifiedApi: "crm",
  });
  expect(result.httpMeta.response.status).toBe(200);
  expect(result.getConsentRecordsResponse).toBeDefined();
  expect(result.getConsentRecordsResponse).toEqual({
    statusCode: 200,
    status: "OK",
    data: [],
  });
});
