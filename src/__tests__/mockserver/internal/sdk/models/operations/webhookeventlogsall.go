// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type WebhookEventLogsAllGlobals struct {
	// The ID of your Unify application
	AppID *string `header:"style=simple,explode=false,name=x-apideck-app-id"`
}

func (o *WebhookEventLogsAllGlobals) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

type WebhookEventLogsAllRequest struct {
	// The ID of your Unify application
	AppID *string `header:"style=simple,explode=false,name=x-apideck-app-id"`
	// Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// Number of results to return. Minimum 1, Maximum 200, Default 20
	Limit *int64 `default:"20" queryParam:"style=form,explode=true,name=limit"`
	// Filter results
	Filter *components.WebhookEventLogsFilter `queryParam:"style=deepObject,explode=true,name=filter"`
}

func (w WebhookEventLogsAllRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WebhookEventLogsAllRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WebhookEventLogsAllRequest) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *WebhookEventLogsAllRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *WebhookEventLogsAllRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *WebhookEventLogsAllRequest) GetFilter() *components.WebhookEventLogsFilter {
	if o == nil {
		return nil
	}
	return o.Filter
}

type WebhookEventLogsAllResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// EventLogs
	GetWebhookEventLogsResponse *components.GetWebhookEventLogsResponse
	// Unexpected error
	UnexpectedErrorResponse *components.UnexpectedErrorResponse

	Next func() (*WebhookEventLogsAllResponse, error)
}

func (o *WebhookEventLogsAllResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *WebhookEventLogsAllResponse) GetGetWebhookEventLogsResponse() *components.GetWebhookEventLogsResponse {
	if o == nil {
		return nil
	}
	return o.GetWebhookEventLogsResponse
}

func (o *WebhookEventLogsAllResponse) GetUnexpectedErrorResponse() *components.UnexpectedErrorResponse {
	if o == nil {
		return nil
	}
	return o.UnexpectedErrorResponse
}
