// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type VaultConnectionsAllGlobals struct {
	// ID of the consumer which you want to get or push data from
	ConsumerID *string `header:"style=simple,explode=false,name=x-apideck-consumer-id"`
	// The ID of your Unify application
	AppID *string `header:"style=simple,explode=false,name=x-apideck-app-id"`
}

func (o *VaultConnectionsAllGlobals) GetConsumerID() *string {
	if o == nil {
		return nil
	}
	return o.ConsumerID
}

func (o *VaultConnectionsAllGlobals) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

type VaultConnectionsAllRequest struct {
	// ID of the consumer which you want to get or push data from
	ConsumerID *string `header:"style=simple,explode=false,name=x-apideck-consumer-id"`
	// The ID of your Unify application
	AppID *string `header:"style=simple,explode=false,name=x-apideck-app-id"`
	// Scope results to Unified API
	API *string `queryParam:"style=form,explode=true,name=api"`
	// Scopes results to connections that have been configured or not
	Configured *bool `queryParam:"style=form,explode=true,name=configured"`
}

func (o *VaultConnectionsAllRequest) GetConsumerID() *string {
	if o == nil {
		return nil
	}
	return o.ConsumerID
}

func (o *VaultConnectionsAllRequest) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *VaultConnectionsAllRequest) GetAPI() *string {
	if o == nil {
		return nil
	}
	return o.API
}

func (o *VaultConnectionsAllRequest) GetConfigured() *bool {
	if o == nil {
		return nil
	}
	return o.Configured
}

type VaultConnectionsAllResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Connections
	GetConnectionsResponse *components.GetConnectionsResponse
	// Unexpected error
	UnexpectedErrorResponse *components.UnexpectedErrorResponse
}

func (o *VaultConnectionsAllResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *VaultConnectionsAllResponse) GetGetConnectionsResponse() *components.GetConnectionsResponse {
	if o == nil {
		return nil
	}
	return o.GetConnectionsResponse
}

func (o *VaultConnectionsAllResponse) GetUnexpectedErrorResponse() *components.UnexpectedErrorResponse {
	if o == nil {
		return nil
	}
	return o.UnexpectedErrorResponse
}
