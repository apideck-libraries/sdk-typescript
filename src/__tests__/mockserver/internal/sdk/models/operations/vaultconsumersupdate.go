// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type VaultConsumersUpdateGlobals struct {
	// The ID of your Unify application
	AppID *string `header:"style=simple,explode=false,name=x-apideck-app-id"`
}

func (o *VaultConsumersUpdateGlobals) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

type VaultConsumersUpdateRequest struct {
	// The ID of your Unify application
	AppID *string `header:"style=simple,explode=false,name=x-apideck-app-id"`
	// ID of the consumer to return
	ConsumerID            string                           `pathParam:"style=simple,explode=false,name=consumer_id"`
	UpdateConsumerRequest components.UpdateConsumerRequest `request:"mediaType=application/json"`
}

func (o *VaultConsumersUpdateRequest) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *VaultConsumersUpdateRequest) GetConsumerID() string {
	if o == nil {
		return ""
	}
	return o.ConsumerID
}

func (o *VaultConsumersUpdateRequest) GetUpdateConsumerRequest() components.UpdateConsumerRequest {
	if o == nil {
		return components.UpdateConsumerRequest{}
	}
	return o.UpdateConsumerRequest
}

type VaultConsumersUpdateResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Consumer updated
	UpdateConsumerResponse *components.UpdateConsumerResponse
	// Unexpected error
	UnexpectedErrorResponse *components.UnexpectedErrorResponse
}

func (o *VaultConsumersUpdateResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *VaultConsumersUpdateResponse) GetUpdateConsumerResponse() *components.UpdateConsumerResponse {
	if o == nil {
		return nil
	}
	return o.UpdateConsumerResponse
}

func (o *VaultConsumersUpdateResponse) GetUnexpectedErrorResponse() *components.UnexpectedErrorResponse {
	if o == nil {
		return nil
	}
	return o.UnexpectedErrorResponse
}
