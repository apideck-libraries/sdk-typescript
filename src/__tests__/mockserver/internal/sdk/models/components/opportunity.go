// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/types"
	"mockserver/internal/sdk/utils"
	"time"
)

type Opportunity struct {
	// A unique identifier for the opportunity.
	ID *string `json:"id,omitempty"`
	// The title or name of the opportunity.
	Title string `json:"title"`
	// The unique identifier of the primary contact associated with the opportunity.
	PrimaryContactID *string `json:"primary_contact_id,omitempty"`
	// A description of the opportunity.
	Description *string `json:"description,omitempty"`
	// The type of the opportunity
	Type *string `json:"type,omitempty"`
	// The monetary value associated with the opportunity
	MonetaryAmount *float64 `json:"monetary_amount,omitempty"`
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency *Currency `json:"currency,omitempty"`
	// The probability of winning the opportunity, expressed as a percentage.
	WinProbability *float64 `json:"win_probability,omitempty"`
	// The expected revenue from the opportunity
	ExpectedRevenue *float64 `json:"expected_revenue,omitempty"`
	// The actual closing date for the opportunity. If close_date is null, the opportunity is not closed yet.
	CloseDate *types.Date `json:"close_date,omitempty"`
	// The unique identifier of the reason why the opportunity was lost.
	LossReasonID *string `json:"loss_reason_id,omitempty"`
	// The reason why the opportunity was lost.
	LossReason *string `json:"loss_reason,omitempty"`
	// The unique identifier of the reason why the opportunity was won.
	WonReasonID *string `json:"won_reason_id,omitempty"`
	// The reason why the opportunity was won.
	WonReason *string `json:"won_reason,omitempty"`
	// The unique identifier of the pipeline associated with the opportunity
	PipelineID *string `json:"pipeline_id,omitempty"`
	// The unique identifier of the stage in the pipeline associated with the opportunity.
	PipelineStageID *string `json:"pipeline_stage_id,omitempty"`
	// The unique identifier of the source of the opportunity.
	SourceID *string `json:"source_id,omitempty"`
	// The unique identifier of the lead associated with the opportunity.
	LeadID *string `json:"lead_id,omitempty"`
	// The source of the lead associated with the opportunity.
	LeadSource *string `json:"lead_source,omitempty"`
	// The unique identifier of the contact associated with the opportunity.
	ContactID *string `json:"contact_id,omitempty"`
	// An array of unique identifiers of all contacts associated with the opportunity.
	ContactIds []string `json:"contact_ids,omitempty"`
	// The unique identifier of the company associated with the opportunity.
	CompanyID *string `json:"company_id,omitempty"`
	// The name of the company associated with the opportunity.
	CompanyName *string `json:"company_name,omitempty"`
	// The unique identifier of the user who owns the opportunity.
	OwnerID *string `json:"owner_id,omitempty"`
	// The priority level of the opportunity.
	Priority *string `json:"priority,omitempty"`
	// The current status of the opportunity.
	Status *string `json:"status,omitempty"`
	// The unique identifier of the current status of the opportunity.
	StatusID *string  `json:"status_id,omitempty"`
	Tags     []string `json:"tags,omitempty"`
	// The number of interactions with the opportunity.
	InteractionCount *float64      `json:"interaction_count,omitempty"`
	CustomFields     []CustomField `json:"custom_fields,omitempty"`
	// The date and time when the stage of the opportunity was last changed.
	StageLastChangedAt *time.Time `json:"stage_last_changed_at,omitempty"`
	// The date and time of the last activity associated with the opportunity.
	LastActivityAt *string `json:"last_activity_at,omitempty"`
	// Indicates whether the opportunity has been deleted.
	Deleted *bool `json:"deleted,omitempty"`
	// The date and time when the stage of the opportunity was last changed.
	DateStageChanged *time.Time `json:"date_stage_changed,omitempty"`
	// The date and time when the opportunity was last contacted.
	DateLastContacted *time.Time `json:"date_last_contacted,omitempty"`
	// The date and time when the lead associated with the opportunity was created.
	DateLeadCreated *time.Time `json:"date_lead_created,omitempty"`
	// When custom mappings are configured on the resource, the result is included here.
	CustomMappings map[string]any `json:"custom_mappings,omitempty"`
	// The unique identifier of the user who last updated the opportunity.
	UpdatedBy *string `json:"updated_by,omitempty"`
	// The unique identifier of the user who created the opportunity.
	CreatedBy *string `json:"created_by,omitempty"`
	// The date and time when the opportunity was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The date and time when the opportunity was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
	PassThrough []PassThroughBody `json:"pass_through,omitempty"`
}

func (o Opportunity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *Opportunity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Opportunity) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Opportunity) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *Opportunity) GetPrimaryContactID() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryContactID
}

func (o *Opportunity) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *Opportunity) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *Opportunity) GetMonetaryAmount() *float64 {
	if o == nil {
		return nil
	}
	return o.MonetaryAmount
}

func (o *Opportunity) GetCurrency() *Currency {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *Opportunity) GetWinProbability() *float64 {
	if o == nil {
		return nil
	}
	return o.WinProbability
}

func (o *Opportunity) GetExpectedRevenue() *float64 {
	if o == nil {
		return nil
	}
	return o.ExpectedRevenue
}

func (o *Opportunity) GetCloseDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.CloseDate
}

func (o *Opportunity) GetLossReasonID() *string {
	if o == nil {
		return nil
	}
	return o.LossReasonID
}

func (o *Opportunity) GetLossReason() *string {
	if o == nil {
		return nil
	}
	return o.LossReason
}

func (o *Opportunity) GetWonReasonID() *string {
	if o == nil {
		return nil
	}
	return o.WonReasonID
}

func (o *Opportunity) GetWonReason() *string {
	if o == nil {
		return nil
	}
	return o.WonReason
}

func (o *Opportunity) GetPipelineID() *string {
	if o == nil {
		return nil
	}
	return o.PipelineID
}

func (o *Opportunity) GetPipelineStageID() *string {
	if o == nil {
		return nil
	}
	return o.PipelineStageID
}

func (o *Opportunity) GetSourceID() *string {
	if o == nil {
		return nil
	}
	return o.SourceID
}

func (o *Opportunity) GetLeadID() *string {
	if o == nil {
		return nil
	}
	return o.LeadID
}

func (o *Opportunity) GetLeadSource() *string {
	if o == nil {
		return nil
	}
	return o.LeadSource
}

func (o *Opportunity) GetContactID() *string {
	if o == nil {
		return nil
	}
	return o.ContactID
}

func (o *Opportunity) GetContactIds() []string {
	if o == nil {
		return nil
	}
	return o.ContactIds
}

func (o *Opportunity) GetCompanyID() *string {
	if o == nil {
		return nil
	}
	return o.CompanyID
}

func (o *Opportunity) GetCompanyName() *string {
	if o == nil {
		return nil
	}
	return o.CompanyName
}

func (o *Opportunity) GetOwnerID() *string {
	if o == nil {
		return nil
	}
	return o.OwnerID
}

func (o *Opportunity) GetPriority() *string {
	if o == nil {
		return nil
	}
	return o.Priority
}

func (o *Opportunity) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *Opportunity) GetStatusID() *string {
	if o == nil {
		return nil
	}
	return o.StatusID
}

func (o *Opportunity) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *Opportunity) GetInteractionCount() *float64 {
	if o == nil {
		return nil
	}
	return o.InteractionCount
}

func (o *Opportunity) GetCustomFields() []CustomField {
	if o == nil {
		return nil
	}
	return o.CustomFields
}

func (o *Opportunity) GetStageLastChangedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.StageLastChangedAt
}

func (o *Opportunity) GetLastActivityAt() *string {
	if o == nil {
		return nil
	}
	return o.LastActivityAt
}

func (o *Opportunity) GetDeleted() *bool {
	if o == nil {
		return nil
	}
	return o.Deleted
}

func (o *Opportunity) GetDateStageChanged() *time.Time {
	if o == nil {
		return nil
	}
	return o.DateStageChanged
}

func (o *Opportunity) GetDateLastContacted() *time.Time {
	if o == nil {
		return nil
	}
	return o.DateLastContacted
}

func (o *Opportunity) GetDateLeadCreated() *time.Time {
	if o == nil {
		return nil
	}
	return o.DateLeadCreated
}

func (o *Opportunity) GetCustomMappings() map[string]any {
	if o == nil {
		return nil
	}
	return o.CustomMappings
}

func (o *Opportunity) GetUpdatedBy() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *Opportunity) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *Opportunity) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *Opportunity) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *Opportunity) GetPassThrough() []PassThroughBody {
	if o == nil {
		return nil
	}
	return o.PassThrough
}
