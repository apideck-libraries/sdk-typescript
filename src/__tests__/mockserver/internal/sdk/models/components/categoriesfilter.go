// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// CategoriesFilterType - The type of the category.
type CategoriesFilterType string

const (
	CategoriesFilterTypeSupplier CategoriesFilterType = "supplier"
	CategoriesFilterTypeExpense  CategoriesFilterType = "expense"
	CategoriesFilterTypeRevenue  CategoriesFilterType = "revenue"
)

func (e CategoriesFilterType) ToPointer() *CategoriesFilterType {
	return &e
}
func (e *CategoriesFilterType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "supplier":
		fallthrough
	case "expense":
		fallthrough
	case "revenue":
		*e = CategoriesFilterType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CategoriesFilterType: %v", v)
	}
}

type CategoriesFilter struct {
	// The type of the category.
	Type *CategoriesFilterType `queryParam:"name=type"`
}

func (o *CategoriesFilter) GetType() *CategoriesFilterType {
	if o == nil {
		return nil
	}
	return o.Type
}
