// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// FlsaStatus - The FLSA status for this compensation.
type FlsaStatus string

const (
	FlsaStatusExempt            FlsaStatus = "exempt"
	FlsaStatusSalariedNonexempt FlsaStatus = "salaried-nonexempt"
	FlsaStatusNonexempt         FlsaStatus = "nonexempt"
	FlsaStatusOwner             FlsaStatus = "owner"
	FlsaStatusOther             FlsaStatus = "other"
)

func (e FlsaStatus) ToPointer() *FlsaStatus {
	return &e
}
func (e *FlsaStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "exempt":
		fallthrough
	case "salaried-nonexempt":
		fallthrough
	case "nonexempt":
		fallthrough
	case "owner":
		fallthrough
	case "other":
		*e = FlsaStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FlsaStatus: %v", v)
	}
}

type EmployeeCompensation struct {
	// A unique identifier for an object.
	ID *string `json:"id,omitempty"`
	// The ID of the job to which the compensation belongs.
	JobID *string `json:"job_id,omitempty"`
	// The amount paid per payment unit.
	Rate *float64 `json:"rate,omitempty"`
	// Unit of measurement for employee compensation.
	PaymentUnit *PaymentUnit `json:"payment_unit,omitempty"`
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency *Currency `json:"currency,omitempty"`
	// The FLSA status for this compensation.
	FlsaStatus *FlsaStatus `json:"flsa_status,omitempty"`
	// The date on which a change to an employee's compensation takes effect.
	EffectiveDate *string `json:"effective_date,omitempty"`
	// Frequency of employee compensation.
	PaymentFrequency *PaymentFrequency `json:"payment_frequency,omitempty"`
}

func (o *EmployeeCompensation) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *EmployeeCompensation) GetJobID() *string {
	if o == nil {
		return nil
	}
	return o.JobID
}

func (o *EmployeeCompensation) GetRate() *float64 {
	if o == nil {
		return nil
	}
	return o.Rate
}

func (o *EmployeeCompensation) GetPaymentUnit() *PaymentUnit {
	if o == nil {
		return nil
	}
	return o.PaymentUnit
}

func (o *EmployeeCompensation) GetCurrency() *Currency {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *EmployeeCompensation) GetFlsaStatus() *FlsaStatus {
	if o == nil {
		return nil
	}
	return o.FlsaStatus
}

func (o *EmployeeCompensation) GetEffectiveDate() *string {
	if o == nil {
		return nil
	}
	return o.EffectiveDate
}

func (o *EmployeeCompensation) GetPaymentFrequency() *PaymentFrequency {
	if o == nil {
		return nil
	}
	return o.PaymentFrequency
}

type EmployeeCompensationInput struct {
	// The amount paid per payment unit.
	Rate *float64 `json:"rate,omitempty"`
	// Unit of measurement for employee compensation.
	PaymentUnit *PaymentUnit `json:"payment_unit,omitempty"`
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency *Currency `json:"currency,omitempty"`
	// The FLSA status for this compensation.
	FlsaStatus *FlsaStatus `json:"flsa_status,omitempty"`
	// The date on which a change to an employee's compensation takes effect.
	EffectiveDate *string `json:"effective_date,omitempty"`
	// Frequency of employee compensation.
	PaymentFrequency *PaymentFrequency `json:"payment_frequency,omitempty"`
}

func (o *EmployeeCompensationInput) GetRate() *float64 {
	if o == nil {
		return nil
	}
	return o.Rate
}

func (o *EmployeeCompensationInput) GetPaymentUnit() *PaymentUnit {
	if o == nil {
		return nil
	}
	return o.PaymentUnit
}

func (o *EmployeeCompensationInput) GetCurrency() *Currency {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *EmployeeCompensationInput) GetFlsaStatus() *FlsaStatus {
	if o == nil {
		return nil
	}
	return o.FlsaStatus
}

func (o *EmployeeCompensationInput) GetEffectiveDate() *string {
	if o == nil {
		return nil
	}
	return o.EffectiveDate
}

func (o *EmployeeCompensationInput) GetPaymentFrequency() *PaymentFrequency {
	if o == nil {
		return nil
	}
	return o.PaymentFrequency
}
