// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type OddWeeks struct {
	HoursMonday    *float64 `json:"hours_monday,omitempty"`
	HoursTuesday   *float64 `json:"hours_tuesday,omitempty"`
	HoursWednesday *float64 `json:"hours_wednesday,omitempty"`
	HoursThursday  *float64 `json:"hours_thursday,omitempty"`
	HoursFriday    *float64 `json:"hours_friday,omitempty"`
	HoursSaturday  *float64 `json:"hours_saturday,omitempty"`
	HoursSunday    *float64 `json:"hours_sunday,omitempty"`
}

func (o *OddWeeks) GetHoursMonday() *float64 {
	if o == nil {
		return nil
	}
	return o.HoursMonday
}

func (o *OddWeeks) GetHoursTuesday() *float64 {
	if o == nil {
		return nil
	}
	return o.HoursTuesday
}

func (o *OddWeeks) GetHoursWednesday() *float64 {
	if o == nil {
		return nil
	}
	return o.HoursWednesday
}

func (o *OddWeeks) GetHoursThursday() *float64 {
	if o == nil {
		return nil
	}
	return o.HoursThursday
}

func (o *OddWeeks) GetHoursFriday() *float64 {
	if o == nil {
		return nil
	}
	return o.HoursFriday
}

func (o *OddWeeks) GetHoursSaturday() *float64 {
	if o == nil {
		return nil
	}
	return o.HoursSaturday
}

func (o *OddWeeks) GetHoursSunday() *float64 {
	if o == nil {
		return nil
	}
	return o.HoursSunday
}

type EvenWeeks struct {
	HoursMonday    *float64 `json:"hours_monday,omitempty"`
	HoursTuesday   *float64 `json:"hours_tuesday,omitempty"`
	HoursWednesday *float64 `json:"hours_wednesday,omitempty"`
	HoursThursday  *float64 `json:"hours_thursday,omitempty"`
	HoursFriday    *float64 `json:"hours_friday,omitempty"`
	HoursSaturday  *float64 `json:"hours_saturday,omitempty"`
	HoursSunday    *float64 `json:"hours_sunday,omitempty"`
}

func (o *EvenWeeks) GetHoursMonday() *float64 {
	if o == nil {
		return nil
	}
	return o.HoursMonday
}

func (o *EvenWeeks) GetHoursTuesday() *float64 {
	if o == nil {
		return nil
	}
	return o.HoursTuesday
}

func (o *EvenWeeks) GetHoursWednesday() *float64 {
	if o == nil {
		return nil
	}
	return o.HoursWednesday
}

func (o *EvenWeeks) GetHoursThursday() *float64 {
	if o == nil {
		return nil
	}
	return o.HoursThursday
}

func (o *EvenWeeks) GetHoursFriday() *float64 {
	if o == nil {
		return nil
	}
	return o.HoursFriday
}

func (o *EvenWeeks) GetHoursSaturday() *float64 {
	if o == nil {
		return nil
	}
	return o.HoursSaturday
}

func (o *EvenWeeks) GetHoursSunday() *float64 {
	if o == nil {
		return nil
	}
	return o.HoursSunday
}

type WorkPattern struct {
	OddWeeks  *OddWeeks  `json:"odd_weeks,omitempty"`
	EvenWeeks *EvenWeeks `json:"even_weeks,omitempty"`
}

func (o *WorkPattern) GetOddWeeks() *OddWeeks {
	if o == nil {
		return nil
	}
	return o.OddWeeks
}

func (o *WorkPattern) GetEvenWeeks() *EvenWeeks {
	if o == nil {
		return nil
	}
	return o.EvenWeeks
}

type Schedule struct {
	// A unique identifier for an object.
	ID string `json:"id"`
	// The start date, inclusive, of the schedule period.
	StartDate string `json:"start_date"`
	// The end date, inclusive, of the schedule period.
	EndDate     string      `json:"end_date"`
	WorkPattern WorkPattern `json:"work_pattern"`
}

func (o *Schedule) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Schedule) GetStartDate() string {
	if o == nil {
		return ""
	}
	return o.StartDate
}

func (o *Schedule) GetEndDate() string {
	if o == nil {
		return ""
	}
	return o.EndDate
}

func (o *Schedule) GetWorkPattern() WorkPattern {
	if o == nil {
		return WorkPattern{}
	}
	return o.WorkPattern
}
