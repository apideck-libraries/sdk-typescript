// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// EcommerceOrderStatus - Current status of the order.
type EcommerceOrderStatus string

const (
	EcommerceOrderStatusActive    EcommerceOrderStatus = "active"
	EcommerceOrderStatusCompleted EcommerceOrderStatus = "completed"
	EcommerceOrderStatusCancelled EcommerceOrderStatus = "cancelled"
	EcommerceOrderStatusArchived  EcommerceOrderStatus = "archived"
	EcommerceOrderStatusUnknown   EcommerceOrderStatus = "unknown"
	EcommerceOrderStatusOther     EcommerceOrderStatus = "other"
)

func (e EcommerceOrderStatus) ToPointer() *EcommerceOrderStatus {
	return &e
}
func (e *EcommerceOrderStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "completed":
		fallthrough
	case "cancelled":
		fallthrough
	case "archived":
		fallthrough
	case "unknown":
		fallthrough
	case "other":
		*e = EcommerceOrderStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EcommerceOrderStatus: %v", v)
	}
}
