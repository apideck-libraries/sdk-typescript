// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// Operation - The request as defined in OpenApi Spec.
type Operation struct {
	// The OpenApi Operation Id associated with the request
	ID string `json:"id"`
	// The OpenApi Operation name associated with the request
	Name string `json:"name"`
}

func (o *Operation) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Operation) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

// Service - Apideck service provider associated with request.
type Service struct {
	// Apideck service provider id.
	ID string `json:"id"`
	// Apideck service provider name.
	Name string `json:"name"`
}

func (o *Service) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Service) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

// UnifiedAPI - Which Unified Api request was made to.
type UnifiedAPI string

const (
	UnifiedAPICrm           UnifiedAPI = "crm"
	UnifiedAPILead          UnifiedAPI = "lead"
	UnifiedAPIProxy         UnifiedAPI = "proxy"
	UnifiedAPIVault         UnifiedAPI = "vault"
	UnifiedAPIAccounting    UnifiedAPI = "accounting"
	UnifiedAPIHris          UnifiedAPI = "hris"
	UnifiedAPIAts           UnifiedAPI = "ats"
	UnifiedAPIEcommerce     UnifiedAPI = "ecommerce"
	UnifiedAPIIssueTracking UnifiedAPI = "issue-tracking"
	UnifiedAPIPos           UnifiedAPI = "pos"
	UnifiedAPIFileStorage   UnifiedAPI = "file-storage"
	UnifiedAPISms           UnifiedAPI = "sms"
)

func (e UnifiedAPI) ToPointer() *UnifiedAPI {
	return &e
}
func (e *UnifiedAPI) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "crm":
		fallthrough
	case "lead":
		fallthrough
	case "proxy":
		fallthrough
	case "vault":
		fallthrough
	case "accounting":
		fallthrough
	case "hris":
		fallthrough
	case "ats":
		fallthrough
	case "ecommerce":
		fallthrough
	case "issue-tracking":
		fallthrough
	case "pos":
		fallthrough
	case "file-storage":
		fallthrough
	case "sms":
		*e = UnifiedAPI(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UnifiedAPI: %v", v)
	}
}

type Log struct {
	// Indicates if the request was made via REST or Graphql endpoint.
	APIStyle string `json:"api_style"`
	// The Apideck base URL the request was made to.
	BaseURL string `json:"base_url"`
	// Indicates whether or not this is a child or parent request.
	ChildRequest bool `json:"child_request"`
	// The consumer Id associated with the request.
	ConsumerID string `json:"consumer_id"`
	// The entire execution time in milliseconds it took to call the Apideck service provider.
	Duration float64 `json:"duration"`
	// If error occurred, this is brief explanation
	ErrorMessage *string `json:"error_message,omitempty"`
	// The entire execution time in milliseconds it took to make the request.
	Execution int64 `json:"execution"`
	// When request is a parent request, this indicates if there are child requests associated.
	HasChildren bool `json:"has_children"`
	// HTTP Method of request.
	HTTPMethod string `json:"http_method"`
	// UUID acting as Request Identifier.
	ID string `json:"id"`
	// Latency added by making this request via Unified Api.
	Latency float64 `json:"latency"`
	// The request as defined in OpenApi Spec.
	Operation Operation `json:"operation"`
	// When request is a child request, this UUID indicates it's parent request.
	ParentID *string `json:"parent_id"`
	// The path component of the URI the request was made to.
	Path string `json:"path"`
	// Indicates whether the request was made using Apidecks sandbox credentials or not.
	Sandbox bool `json:"sandbox"`
	// Apideck service provider associated with request.
	Service Service `json:"service"`
	// The IP address of the source of the request.
	SourceIP *string `json:"source_ip,omitempty"`
	// HTTP Status code that was returned.
	StatusCode int64 `json:"status_code"`
	// Whether or not the request was successful.
	Success bool `json:"success"`
	// ISO Date and time when the request was made.
	Timestamp string `json:"timestamp"`
	// Which Unified Api request was made to.
	UnifiedAPI UnifiedAPI `json:"unified_api"`
}

func (o *Log) GetAPIStyle() string {
	if o == nil {
		return ""
	}
	return o.APIStyle
}

func (o *Log) GetBaseURL() string {
	if o == nil {
		return ""
	}
	return o.BaseURL
}

func (o *Log) GetChildRequest() bool {
	if o == nil {
		return false
	}
	return o.ChildRequest
}

func (o *Log) GetConsumerID() string {
	if o == nil {
		return ""
	}
	return o.ConsumerID
}

func (o *Log) GetDuration() float64 {
	if o == nil {
		return 0.0
	}
	return o.Duration
}

func (o *Log) GetErrorMessage() *string {
	if o == nil {
		return nil
	}
	return o.ErrorMessage
}

func (o *Log) GetExecution() int64 {
	if o == nil {
		return 0
	}
	return o.Execution
}

func (o *Log) GetHasChildren() bool {
	if o == nil {
		return false
	}
	return o.HasChildren
}

func (o *Log) GetHTTPMethod() string {
	if o == nil {
		return ""
	}
	return o.HTTPMethod
}

func (o *Log) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Log) GetLatency() float64 {
	if o == nil {
		return 0.0
	}
	return o.Latency
}

func (o *Log) GetOperation() Operation {
	if o == nil {
		return Operation{}
	}
	return o.Operation
}

func (o *Log) GetParentID() *string {
	if o == nil {
		return nil
	}
	return o.ParentID
}

func (o *Log) GetPath() string {
	if o == nil {
		return ""
	}
	return o.Path
}

func (o *Log) GetSandbox() bool {
	if o == nil {
		return false
	}
	return o.Sandbox
}

func (o *Log) GetService() Service {
	if o == nil {
		return Service{}
	}
	return o.Service
}

func (o *Log) GetSourceIP() *string {
	if o == nil {
		return nil
	}
	return o.SourceIP
}

func (o *Log) GetStatusCode() int64 {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *Log) GetSuccess() bool {
	if o == nil {
		return false
	}
	return o.Success
}

func (o *Log) GetTimestamp() string {
	if o == nil {
		return ""
	}
	return o.Timestamp
}

func (o *Log) GetUnifiedAPI() UnifiedAPI {
	if o == nil {
		return UnifiedAPI("")
	}
	return o.UnifiedAPI
}
