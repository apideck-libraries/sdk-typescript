// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type ExtendPath struct {
	// JSONPath string specifying where to apply the value.
	Path string `json:"path"`
	// The value to set at the specified path, can be any type.
	Value any `json:"value"`
}

func (o *ExtendPath) GetPath() string {
	if o == nil {
		return ""
	}
	return o.Path
}

func (o *ExtendPath) GetValue() any {
	if o == nil {
		return nil
	}
	return o.Value
}

type PassThroughBody struct {
	// Identifier for the service to which this pass_through should be applied.
	ServiceID string `json:"service_id"`
	// Optional identifier for a workflow operation to which this pass_through should be applied. This is useful for Unify calls that are making more than one downstream request.
	OperationID *string `json:"operation_id,omitempty"`
	// Simple object allowing any properties for direct extension.
	ExtendObject map[string]any `json:"extend_object,omitempty"`
	// Array of objects for structured data modifications via paths.
	ExtendPaths []ExtendPath `json:"extend_paths,omitempty"`
}

func (o *PassThroughBody) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

func (o *PassThroughBody) GetOperationID() *string {
	if o == nil {
		return nil
	}
	return o.OperationID
}

func (o *PassThroughBody) GetExtendObject() map[string]any {
	if o == nil {
		return nil
	}
	return o.ExtendObject
}

func (o *PassThroughBody) GetExtendPaths() []ExtendPath {
	if o == nil {
		return nil
	}
	return o.ExtendPaths
}
