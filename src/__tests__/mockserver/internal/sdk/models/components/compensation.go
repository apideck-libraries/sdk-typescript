// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type Compensation struct {
	// A unique identifier for an object.
	EmployeeID *string `json:"employee_id"`
	// The employee's net pay. Only available when payroll has been processed
	NetPay *float64 `json:"net_pay,omitempty"`
	// The employee's gross pay. Only available when payroll has been processed
	GrossPay *float64 `json:"gross_pay,omitempty"`
	// An array of employer and employee taxes for the pay period.
	Taxes []Tax `json:"taxes,omitempty"`
	// An array of employee deductions for the pay period.
	Deductions []Deduction `json:"deductions,omitempty"`
	// An array of employee benefits for the pay period.
	Benefits []Benefit `json:"benefits,omitempty"`
}

func (o *Compensation) GetEmployeeID() *string {
	if o == nil {
		return nil
	}
	return o.EmployeeID
}

func (o *Compensation) GetNetPay() *float64 {
	if o == nil {
		return nil
	}
	return o.NetPay
}

func (o *Compensation) GetGrossPay() *float64 {
	if o == nil {
		return nil
	}
	return o.GrossPay
}

func (o *Compensation) GetTaxes() []Tax {
	if o == nil {
		return nil
	}
	return o.Taxes
}

func (o *Compensation) GetDeductions() []Deduction {
	if o == nil {
		return nil
	}
	return o.Deductions
}

func (o *Compensation) GetBenefits() []Benefit {
	if o == nil {
		return nil
	}
	return o.Benefits
}
