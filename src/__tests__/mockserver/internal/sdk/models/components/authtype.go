// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// AuthType - Type of authorization used by the connector
type AuthType string

const (
	AuthTypeOauth2 AuthType = "oauth2"
	AuthTypeAPIKey AuthType = "apiKey"
	AuthTypeBasic  AuthType = "basic"
	AuthTypeCustom AuthType = "custom"
	AuthTypeNone   AuthType = "none"
)

func (e AuthType) ToPointer() *AuthType {
	return &e
}
func (e *AuthType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "oauth2":
		fallthrough
	case "apiKey":
		fallthrough
	case "basic":
		fallthrough
	case "custom":
		fallthrough
	case "none":
		*e = AuthType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AuthType: %v", v)
	}
}
