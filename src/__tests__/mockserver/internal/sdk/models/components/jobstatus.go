// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// JobStatus - The status of the job.
type JobStatus string

const (
	JobStatusDraft               JobStatus = "draft"
	JobStatusInternal            JobStatus = "internal"
	JobStatusPublished           JobStatus = "published"
	JobStatusCompleted           JobStatus = "completed"
	JobStatusPlaced              JobStatus = "placed"
	JobStatusOnHold              JobStatus = "on-hold"
	JobStatusPrivate             JobStatus = "private"
	JobStatusAcceptingCandidates JobStatus = "accepting_candidates"
	JobStatusOpen                JobStatus = "open"
	JobStatusClosed              JobStatus = "closed"
	JobStatusArchived            JobStatus = "archived"
)

func (e JobStatus) ToPointer() *JobStatus {
	return &e
}
func (e *JobStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "draft":
		fallthrough
	case "internal":
		fallthrough
	case "published":
		fallthrough
	case "completed":
		fallthrough
	case "placed":
		fallthrough
	case "on-hold":
		fallthrough
	case "private":
		fallthrough
	case "accepting_candidates":
		fallthrough
	case "open":
		fallthrough
	case "closed":
		fallthrough
	case "archived":
		*e = JobStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JobStatus: %v", v)
	}
}
