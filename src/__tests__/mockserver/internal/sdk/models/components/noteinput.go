// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type NoteInput struct {
	// The title of the note
	Title *string `json:"title,omitempty"`
	// The content of the note.
	Content *string `json:"content,omitempty"`
	// The user that owns the note.
	OwnerID *string `json:"owner_id,omitempty"`
	// The contact that is related to the note.
	ContactID *string `json:"contact_id,omitempty"`
	// The company that is related to the note.
	CompanyID *string `json:"company_id,omitempty"`
	// The opportunity that is related to the note.
	OpportunityID *string `json:"opportunity_id,omitempty"`
	// The lead that is related to the note.
	LeadID *string `json:"lead_id,omitempty"`
	// Whether the Note is active or not.
	Active *bool `json:"active,omitempty"`
	// The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
	PassThrough []PassThroughBody `json:"pass_through,omitempty"`
}

func (o *NoteInput) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *NoteInput) GetContent() *string {
	if o == nil {
		return nil
	}
	return o.Content
}

func (o *NoteInput) GetOwnerID() *string {
	if o == nil {
		return nil
	}
	return o.OwnerID
}

func (o *NoteInput) GetContactID() *string {
	if o == nil {
		return nil
	}
	return o.ContactID
}

func (o *NoteInput) GetCompanyID() *string {
	if o == nil {
		return nil
	}
	return o.CompanyID
}

func (o *NoteInput) GetOpportunityID() *string {
	if o == nil {
		return nil
	}
	return o.OpportunityID
}

func (o *NoteInput) GetLeadID() *string {
	if o == nil {
		return nil
	}
	return o.LeadID
}

func (o *NoteInput) GetActive() *bool {
	if o == nil {
		return nil
	}
	return o.Active
}

func (o *NoteInput) GetPassThrough() []PassThroughBody {
	if o == nil {
		return nil
	}
	return o.PassThrough
}
