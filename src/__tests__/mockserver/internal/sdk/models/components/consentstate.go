// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// ConsentState - The current consent state of the connection
type ConsentState string

const (
	ConsentStateImplicit          ConsentState = "implicit"
	ConsentStatePending           ConsentState = "pending"
	ConsentStateGranted           ConsentState = "granted"
	ConsentStateDenied            ConsentState = "denied"
	ConsentStateRevoked           ConsentState = "revoked"
	ConsentStateRequiresReconsent ConsentState = "requires_reconsent"
)

func (e ConsentState) ToPointer() *ConsentState {
	return &e
}
func (e *ConsentState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "implicit":
		fallthrough
	case "pending":
		fallthrough
	case "granted":
		fallthrough
	case "denied":
		fallthrough
	case "revoked":
		fallthrough
	case "requires_reconsent":
		*e = ConsentState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConsentState: %v", v)
	}
}
