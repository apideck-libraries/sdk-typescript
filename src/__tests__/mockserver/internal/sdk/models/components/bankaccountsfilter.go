// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// BankAccountsFilterStatus - Filter by account status
type BankAccountsFilterStatus string

const (
	BankAccountsFilterStatusActive   BankAccountsFilterStatus = "active"
	BankAccountsFilterStatusInactive BankAccountsFilterStatus = "inactive"
	BankAccountsFilterStatusClosed   BankAccountsFilterStatus = "closed"
)

func (e BankAccountsFilterStatus) ToPointer() *BankAccountsFilterStatus {
	return &e
}
func (e *BankAccountsFilterStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "inactive":
		fallthrough
	case "closed":
		*e = BankAccountsFilterStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BankAccountsFilterStatus: %v", v)
	}
}

type BankAccountsFilter struct {
	// Filter by bank account name
	Name *string `queryParam:"name=name"`
	// Filter by account status
	Status *BankAccountsFilterStatus `queryParam:"name=status"`
}

func (o *BankAccountsFilter) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *BankAccountsFilter) GetStatus() *BankAccountsFilterStatus {
	if o == nil {
		return nil
	}
	return o.Status
}
