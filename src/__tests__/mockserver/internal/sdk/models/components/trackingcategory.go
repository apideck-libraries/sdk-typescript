// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/utils"
	"time"
)

// TrackingCategoryStatus - Based on the status some functionality is enabled or disabled.
type TrackingCategoryStatus string

const (
	TrackingCategoryStatusActive   TrackingCategoryStatus = "active"
	TrackingCategoryStatusInactive TrackingCategoryStatus = "inactive"
)

func (e TrackingCategoryStatus) ToPointer() *TrackingCategoryStatus {
	return &e
}
func (e *TrackingCategoryStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "inactive":
		*e = TrackingCategoryStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TrackingCategoryStatus: %v", v)
	}
}

type TrackingCategorySubsidiary struct {
	// The ID of the subsidiary.
	ID *string `json:"id,omitempty"`
}

func (o *TrackingCategorySubsidiary) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

type TrackingCategory struct {
	// A unique identifier for an object.
	ID *string `json:"id,omitempty"`
	// A unique identifier for an object.
	ParentID *string `json:"parent_id,omitempty"`
	// The name of the tracking category.
	Name *string `json:"name,omitempty"`
	// The code of the tracking category.
	Code *string `json:"code,omitempty"`
	// Based on the status some functionality is enabled or disabled.
	Status *TrackingCategoryStatus `json:"status,omitempty"`
	// When custom mappings are configured on the resource, the result is included here.
	CustomMappings map[string]any `json:"custom_mappings,omitempty"`
	// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
	RowVersion *string `json:"row_version,omitempty"`
	// The user who last updated the object.
	UpdatedBy *string `json:"updated_by,omitempty"`
	// The user who created the object.
	CreatedBy *string `json:"created_by,omitempty"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
	PassThrough []PassThroughBody `json:"pass_through,omitempty"`
	// The subsidiaries the account belongs to.
	Subsidiaries []TrackingCategorySubsidiary `json:"subsidiaries,omitempty"`
}

func (t TrackingCategory) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TrackingCategory) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TrackingCategory) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TrackingCategory) GetParentID() *string {
	if o == nil {
		return nil
	}
	return o.ParentID
}

func (o *TrackingCategory) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TrackingCategory) GetCode() *string {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *TrackingCategory) GetStatus() *TrackingCategoryStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *TrackingCategory) GetCustomMappings() map[string]any {
	if o == nil {
		return nil
	}
	return o.CustomMappings
}

func (o *TrackingCategory) GetRowVersion() *string {
	if o == nil {
		return nil
	}
	return o.RowVersion
}

func (o *TrackingCategory) GetUpdatedBy() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *TrackingCategory) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *TrackingCategory) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *TrackingCategory) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *TrackingCategory) GetPassThrough() []PassThroughBody {
	if o == nil {
		return nil
	}
	return o.PassThrough
}

func (o *TrackingCategory) GetSubsidiaries() []TrackingCategorySubsidiary {
	if o == nil {
		return nil
	}
	return o.Subsidiaries
}

type TrackingCategoryInput struct {
	// A unique identifier for an object.
	ParentID *string `json:"parent_id,omitempty"`
	// The name of the tracking category.
	Name *string `json:"name,omitempty"`
	// The code of the tracking category.
	Code *string `json:"code,omitempty"`
	// Based on the status some functionality is enabled or disabled.
	Status *TrackingCategoryStatus `json:"status,omitempty"`
	// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
	RowVersion *string `json:"row_version,omitempty"`
	// The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
	PassThrough []PassThroughBody `json:"pass_through,omitempty"`
	// The subsidiaries the account belongs to.
	Subsidiaries []TrackingCategorySubsidiary `json:"subsidiaries,omitempty"`
}

func (o *TrackingCategoryInput) GetParentID() *string {
	if o == nil {
		return nil
	}
	return o.ParentID
}

func (o *TrackingCategoryInput) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TrackingCategoryInput) GetCode() *string {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *TrackingCategoryInput) GetStatus() *TrackingCategoryStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *TrackingCategoryInput) GetRowVersion() *string {
	if o == nil {
		return nil
	}
	return o.RowVersion
}

func (o *TrackingCategoryInput) GetPassThrough() []PassThroughBody {
	if o == nil {
		return nil
	}
	return o.PassThrough
}

func (o *TrackingCategoryInput) GetSubsidiaries() []TrackingCategorySubsidiary {
	if o == nil {
		return nil
	}
	return o.Subsidiaries
}
