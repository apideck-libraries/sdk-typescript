// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/utils"
	"time"
)

type HrisCompanyStatus string

const (
	HrisCompanyStatusActive   HrisCompanyStatus = "active"
	HrisCompanyStatusInactive HrisCompanyStatus = "inactive"
	HrisCompanyStatusTrial    HrisCompanyStatus = "trial"
	HrisCompanyStatusOther    HrisCompanyStatus = "other"
)

func (e HrisCompanyStatus) ToPointer() *HrisCompanyStatus {
	return &e
}
func (e *HrisCompanyStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "inactive":
		fallthrough
	case "trial":
		fallthrough
	case "other":
		*e = HrisCompanyStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HrisCompanyStatus: %v", v)
	}
}

type HrisCompany struct {
	// A unique identifier for an object.
	ID          *string            `json:"id,omitempty"`
	LegalName   *string            `json:"legal_name"`
	DisplayName *string            `json:"display_name,omitempty"`
	Subdomain   *string            `json:"subdomain,omitempty"`
	Status      *HrisCompanyStatus `json:"status,omitempty"`
	// An Company Number, Company ID or Company Code, is a unique number that has been assigned to each company.
	CompanyNumber *string `json:"company_number,omitempty"`
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency     *Currency     `json:"currency,omitempty"`
	Addresses    []Address     `json:"addresses,omitempty"`
	PhoneNumbers []PhoneNumber `json:"phone_numbers,omitempty"`
	Emails       []Email       `json:"emails,omitempty"`
	Websites     []Website     `json:"websites,omitempty"`
	DebtorID     *string       `json:"debtor_id,omitempty"`
	// When custom mappings are configured on the resource, the result is included here.
	CustomMappings map[string]any `json:"custom_mappings,omitempty"`
	Deleted        *bool          `json:"deleted,omitempty"`
	// The user who last updated the object.
	UpdatedBy *string `json:"updated_by,omitempty"`
	// The user who created the object.
	CreatedBy *string `json:"created_by,omitempty"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
	PassThrough []PassThroughBody `json:"pass_through,omitempty"`
}

func (h HrisCompany) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(h, "", false)
}

func (h *HrisCompany) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &h, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *HrisCompany) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *HrisCompany) GetLegalName() *string {
	if o == nil {
		return nil
	}
	return o.LegalName
}

func (o *HrisCompany) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *HrisCompany) GetSubdomain() *string {
	if o == nil {
		return nil
	}
	return o.Subdomain
}

func (o *HrisCompany) GetStatus() *HrisCompanyStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *HrisCompany) GetCompanyNumber() *string {
	if o == nil {
		return nil
	}
	return o.CompanyNumber
}

func (o *HrisCompany) GetCurrency() *Currency {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *HrisCompany) GetAddresses() []Address {
	if o == nil {
		return nil
	}
	return o.Addresses
}

func (o *HrisCompany) GetPhoneNumbers() []PhoneNumber {
	if o == nil {
		return nil
	}
	return o.PhoneNumbers
}

func (o *HrisCompany) GetEmails() []Email {
	if o == nil {
		return nil
	}
	return o.Emails
}

func (o *HrisCompany) GetWebsites() []Website {
	if o == nil {
		return nil
	}
	return o.Websites
}

func (o *HrisCompany) GetDebtorID() *string {
	if o == nil {
		return nil
	}
	return o.DebtorID
}

func (o *HrisCompany) GetCustomMappings() map[string]any {
	if o == nil {
		return nil
	}
	return o.CustomMappings
}

func (o *HrisCompany) GetDeleted() *bool {
	if o == nil {
		return nil
	}
	return o.Deleted
}

func (o *HrisCompany) GetUpdatedBy() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *HrisCompany) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *HrisCompany) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *HrisCompany) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *HrisCompany) GetPassThrough() []PassThroughBody {
	if o == nil {
		return nil
	}
	return o.PassThrough
}

type HrisCompanyInput struct {
	LegalName   *string            `json:"legal_name"`
	DisplayName *string            `json:"display_name,omitempty"`
	Subdomain   *string            `json:"subdomain,omitempty"`
	Status      *HrisCompanyStatus `json:"status,omitempty"`
	// An Company Number, Company ID or Company Code, is a unique number that has been assigned to each company.
	CompanyNumber *string `json:"company_number,omitempty"`
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency     *Currency     `json:"currency,omitempty"`
	Addresses    []Address     `json:"addresses,omitempty"`
	PhoneNumbers []PhoneNumber `json:"phone_numbers,omitempty"`
	Emails       []Email       `json:"emails,omitempty"`
	Websites     []Website     `json:"websites,omitempty"`
	DebtorID     *string       `json:"debtor_id,omitempty"`
	// The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
	PassThrough []PassThroughBody `json:"pass_through,omitempty"`
}

func (o *HrisCompanyInput) GetLegalName() *string {
	if o == nil {
		return nil
	}
	return o.LegalName
}

func (o *HrisCompanyInput) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *HrisCompanyInput) GetSubdomain() *string {
	if o == nil {
		return nil
	}
	return o.Subdomain
}

func (o *HrisCompanyInput) GetStatus() *HrisCompanyStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *HrisCompanyInput) GetCompanyNumber() *string {
	if o == nil {
		return nil
	}
	return o.CompanyNumber
}

func (o *HrisCompanyInput) GetCurrency() *Currency {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *HrisCompanyInput) GetAddresses() []Address {
	if o == nil {
		return nil
	}
	return o.Addresses
}

func (o *HrisCompanyInput) GetPhoneNumbers() []PhoneNumber {
	if o == nil {
		return nil
	}
	return o.PhoneNumbers
}

func (o *HrisCompanyInput) GetEmails() []Email {
	if o == nil {
		return nil
	}
	return o.Emails
}

func (o *HrisCompanyInput) GetWebsites() []Website {
	if o == nil {
		return nil
	}
	return o.Websites
}

func (o *HrisCompanyInput) GetDebtorID() *string {
	if o == nil {
		return nil
	}
	return o.DebtorID
}

func (o *HrisCompanyInput) GetPassThrough() []PassThroughBody {
	if o == nil {
		return nil
	}
	return o.PassThrough
}
