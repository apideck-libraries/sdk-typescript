// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type ConsumerRequestCountsInDateRangeResponseData struct {
	ApplicationID          *string                 `json:"application_id,omitempty"`
	ConsumerID             *string                 `json:"consumer_id,omitempty"`
	StartDatetime          *string                 `json:"start_datetime,omitempty"`
	EndDatetime            *string                 `json:"end_datetime,omitempty"`
	AggregatedRequestCount *float64                `json:"aggregated_request_count,omitempty"`
	RequestCounts          *RequestCountAllocation `json:"request_counts,omitempty"`
}

func (o *ConsumerRequestCountsInDateRangeResponseData) GetApplicationID() *string {
	if o == nil {
		return nil
	}
	return o.ApplicationID
}

func (o *ConsumerRequestCountsInDateRangeResponseData) GetConsumerID() *string {
	if o == nil {
		return nil
	}
	return o.ConsumerID
}

func (o *ConsumerRequestCountsInDateRangeResponseData) GetStartDatetime() *string {
	if o == nil {
		return nil
	}
	return o.StartDatetime
}

func (o *ConsumerRequestCountsInDateRangeResponseData) GetEndDatetime() *string {
	if o == nil {
		return nil
	}
	return o.EndDatetime
}

func (o *ConsumerRequestCountsInDateRangeResponseData) GetAggregatedRequestCount() *float64 {
	if o == nil {
		return nil
	}
	return o.AggregatedRequestCount
}

func (o *ConsumerRequestCountsInDateRangeResponseData) GetRequestCounts() *RequestCountAllocation {
	if o == nil {
		return nil
	}
	return o.RequestCounts
}

// ConsumerRequestCountsInDateRangeResponse - Consumers Request Counts within Date Range
type ConsumerRequestCountsInDateRangeResponse struct {
	// HTTP Response Status Code
	StatusCode int64 `json:"status_code"`
	// HTTP Response Status
	Status string                                       `json:"status"`
	Data   ConsumerRequestCountsInDateRangeResponseData `json:"data"`
	// Raw response from the integration when raw=true query param is provided
	Raw map[string]any `json:"_raw,omitempty"`
}

func (o *ConsumerRequestCountsInDateRangeResponse) GetStatusCode() int64 {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ConsumerRequestCountsInDateRangeResponse) GetStatus() string {
	if o == nil {
		return ""
	}
	return o.Status
}

func (o *ConsumerRequestCountsInDateRangeResponse) GetData() ConsumerRequestCountsInDateRangeResponseData {
	if o == nil {
		return ConsumerRequestCountsInDateRangeResponseData{}
	}
	return o.Data
}

func (o *ConsumerRequestCountsInDateRangeResponse) GetRaw() map[string]any {
	if o == nil {
		return nil
	}
	return o.Raw
}
