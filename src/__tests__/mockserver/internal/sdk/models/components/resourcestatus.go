// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// ResourceStatus - Status of the resource. Resources with status live or beta are callable.
type ResourceStatus string

const (
	ResourceStatusLive        ResourceStatus = "live"
	ResourceStatusBeta        ResourceStatus = "beta"
	ResourceStatusDevelopment ResourceStatus = "development"
	ResourceStatusUpcoming    ResourceStatus = "upcoming"
	ResourceStatusConsidering ResourceStatus = "considering"
)

func (e ResourceStatus) ToPointer() *ResourceStatus {
	return &e
}
func (e *ResourceStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "live":
		fallthrough
	case "beta":
		fallthrough
	case "development":
		fallthrough
	case "upcoming":
		fallthrough
	case "considering":
		*e = ResourceStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceStatus: %v", v)
	}
}
