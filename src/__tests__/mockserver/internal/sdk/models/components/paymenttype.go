// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// PaymentType - Type of payment
type PaymentType string

const (
	PaymentTypeAccountsReceivable            PaymentType = "accounts_receivable"
	PaymentTypeAccountsPayable               PaymentType = "accounts_payable"
	PaymentTypeAccountsReceivableCredit      PaymentType = "accounts_receivable_credit"
	PaymentTypeAccountsPayableCredit         PaymentType = "accounts_payable_credit"
	PaymentTypeAccountsReceivableOverpayment PaymentType = "accounts_receivable_overpayment"
	PaymentTypeAccountsPayableOverpayment    PaymentType = "accounts_payable_overpayment"
	PaymentTypeAccountsReceivablePrepayment  PaymentType = "accounts_receivable_prepayment"
	PaymentTypeAccountsPayablePrepayment     PaymentType = "accounts_payable_prepayment"
)

func (e PaymentType) ToPointer() *PaymentType {
	return &e
}
func (e *PaymentType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "accounts_receivable":
		fallthrough
	case "accounts_payable":
		fallthrough
	case "accounts_receivable_credit":
		fallthrough
	case "accounts_payable_credit":
		fallthrough
	case "accounts_receivable_overpayment":
		fallthrough
	case "accounts_payable_overpayment":
		fallthrough
	case "accounts_receivable_prepayment":
		fallthrough
	case "accounts_payable_prepayment":
		*e = PaymentType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentType: %v", v)
	}
}
