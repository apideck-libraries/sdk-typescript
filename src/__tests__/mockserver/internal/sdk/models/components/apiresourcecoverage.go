// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type Coverage struct {
	// ID of the resource in the Connector's API (downstream)
	DownstreamID *string `json:"downstream_id,omitempty"`
	// Name of the resource in the Connector's API (downstream)
	DownstreamName *string `json:"downstream_name,omitempty"`
	// Indicates if pagination (cursor and limit parameters) is supported on the list endpoint of the resource.
	PaginationSupported *bool               `json:"pagination_supported,omitempty"`
	Pagination          *PaginationCoverage `json:"pagination,omitempty"`
	// List of supported operations on the resource.
	SupportedOperations []string `json:"supported_operations,omitempty"`
	// Supported filters on the list endpoint of the resource.
	SupportedFilters []string `json:"supported_filters,omitempty"`
	// Supported sorting properties on the list endpoint of the resource.
	SupportedSortBy []string `json:"supported_sort_by,omitempty"`
	// Supported fields on the detail endpoint.
	SupportedFields []SupportedProperty `json:"supported_fields,omitempty"`
	// Supported fields on the list endpoint.
	SupportedListFields []SupportedProperty `json:"supported_list_fields,omitempty"`
}

func (o *Coverage) GetDownstreamID() *string {
	if o == nil {
		return nil
	}
	return o.DownstreamID
}

func (o *Coverage) GetDownstreamName() *string {
	if o == nil {
		return nil
	}
	return o.DownstreamName
}

func (o *Coverage) GetPaginationSupported() *bool {
	if o == nil {
		return nil
	}
	return o.PaginationSupported
}

func (o *Coverage) GetPagination() *PaginationCoverage {
	if o == nil {
		return nil
	}
	return o.Pagination
}

func (o *Coverage) GetSupportedOperations() []string {
	if o == nil {
		return nil
	}
	return o.SupportedOperations
}

func (o *Coverage) GetSupportedFilters() []string {
	if o == nil {
		return nil
	}
	return o.SupportedFilters
}

func (o *Coverage) GetSupportedSortBy() []string {
	if o == nil {
		return nil
	}
	return o.SupportedSortBy
}

func (o *Coverage) GetSupportedFields() []SupportedProperty {
	if o == nil {
		return nil
	}
	return o.SupportedFields
}

func (o *Coverage) GetSupportedListFields() []SupportedProperty {
	if o == nil {
		return nil
	}
	return o.SupportedListFields
}

type APIResourceCoverage struct {
	// ID of the resource, typically a lowercased version of name.
	ID *string `json:"id,omitempty"`
	// Name of the resource (plural)
	Name *string `json:"name,omitempty"`
	// Status of the resource. Resources with status live or beta are callable.
	Status   *ResourceStatus `json:"status,omitempty"`
	Coverage []Coverage      `json:"coverage,omitempty"`
}

func (o *APIResourceCoverage) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *APIResourceCoverage) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *APIResourceCoverage) GetStatus() *ResourceStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *APIResourceCoverage) GetCoverage() []Coverage {
	if o == nil {
		return nil
	}
	return o.Coverage
}
