// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/utils"
)

// LeadsSortBy - The field on which to sort the Leads
type LeadsSortBy string

const (
	LeadsSortByCreatedAt LeadsSortBy = "created_at"
	LeadsSortByUpdatedAt LeadsSortBy = "updated_at"
	LeadsSortByName      LeadsSortBy = "name"
	LeadsSortByFirstName LeadsSortBy = "first_name"
	LeadsSortByLastName  LeadsSortBy = "last_name"
	LeadsSortByEmail     LeadsSortBy = "email"
)

func (e LeadsSortBy) ToPointer() *LeadsSortBy {
	return &e
}
func (e *LeadsSortBy) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created_at":
		fallthrough
	case "updated_at":
		fallthrough
	case "name":
		fallthrough
	case "first_name":
		fallthrough
	case "last_name":
		fallthrough
	case "email":
		*e = LeadsSortBy(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LeadsSortBy: %v", v)
	}
}

type LeadsSort struct {
	// The field on which to sort the Leads
	By *LeadsSortBy `queryParam:"name=by"`
	// The direction in which to sort the results
	Direction *SortDirection `default:"asc" queryParam:"name=direction"`
}

func (l LeadsSort) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *LeadsSort) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *LeadsSort) GetBy() *LeadsSortBy {
	if o == nil {
		return nil
	}
	return o.By
}

func (o *LeadsSort) GetDirection() *SortDirection {
	if o == nil {
		return nil
	}
	return o.Direction
}
