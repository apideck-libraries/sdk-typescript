// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type StageInput struct {
	// The name of the Pipeline Stage.
	Name *string `json:"name,omitempty"`
	// The value of the Pipeline Stage.
	Value *string `json:"value,omitempty"`
	// The expected probability of winning an Opportunity in this Pipeline Stage. Valid values are [0-100].
	WinProbability *int64 `json:"win_probability,omitempty"`
	// The order in which the Pipeline Stage is displayed in the UI.
	DisplayOrder *int64 `json:"display_order,omitempty"`
}

func (o *StageInput) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *StageInput) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

func (o *StageInput) GetWinProbability() *int64 {
	if o == nil {
		return nil
	}
	return o.WinProbability
}

func (o *StageInput) GetDisplayOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayOrder
}

type PipelineInput struct {
	// The unique identifier of the Pipeline.
	ID *string `json:"id,omitempty"`
	// The name of the Pipeline.
	Name string `json:"name"`
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency *Currency `json:"currency,omitempty"`
	// Whether the Pipeline is archived or not.
	Archived *bool `json:"archived,omitempty"`
	// Whether the Pipeline is active or not.
	Active *bool `json:"active,omitempty"`
	// The order in which the Pipeline is displayed in the UI.
	DisplayOrder *int64 `json:"display_order,omitempty"`
	// Whether the Pipeline has win probability enabled or not.
	WinProbabilityEnabled *bool `json:"win_probability_enabled,omitempty"`
	// The Pipeline Stages.
	Stages []StageInput `json:"stages,omitempty"`
	// The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
	PassThrough []PassThroughBody `json:"pass_through,omitempty"`
}

func (o *PipelineInput) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PipelineInput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *PipelineInput) GetCurrency() *Currency {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *PipelineInput) GetArchived() *bool {
	if o == nil {
		return nil
	}
	return o.Archived
}

func (o *PipelineInput) GetActive() *bool {
	if o == nil {
		return nil
	}
	return o.Active
}

func (o *PipelineInput) GetDisplayOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayOrder
}

func (o *PipelineInput) GetWinProbabilityEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.WinProbabilityEnabled
}

func (o *PipelineInput) GetStages() []StageInput {
	if o == nil {
		return nil
	}
	return o.Stages
}

func (o *PipelineInput) GetPassThrough() []PassThroughBody {
	if o == nil {
		return nil
	}
	return o.PassThrough
}
