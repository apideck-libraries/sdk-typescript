// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// InvoiceItemsFilterInvoiceItemType - The type of invoice item, indicating whether it is an inventory item, a service, or another type.
type InvoiceItemsFilterInvoiceItemType string

const (
	InvoiceItemsFilterInvoiceItemTypeInventory InvoiceItemsFilterInvoiceItemType = "inventory"
	InvoiceItemsFilterInvoiceItemTypeService   InvoiceItemsFilterInvoiceItemType = "service"
	InvoiceItemsFilterInvoiceItemTypeOther     InvoiceItemsFilterInvoiceItemType = "other"
)

func (e InvoiceItemsFilterInvoiceItemType) ToPointer() *InvoiceItemsFilterInvoiceItemType {
	return &e
}
func (e *InvoiceItemsFilterInvoiceItemType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inventory":
		fallthrough
	case "service":
		fallthrough
	case "other":
		*e = InvoiceItemsFilterInvoiceItemType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceItemsFilterInvoiceItemType: %v", v)
	}
}

type InvoiceItemsFilter struct {
	// Name of Invoice Items to search for
	Name *string `queryParam:"name=name"`
	// The type of invoice item, indicating whether it is an inventory item, a service, or another type.
	Type *InvoiceItemsFilterInvoiceItemType `queryParam:"name=type"`
}

func (o *InvoiceItemsFilter) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *InvoiceItemsFilter) GetType() *InvoiceItemsFilterInvoiceItemType {
	if o == nil {
		return nil
	}
	return o.Type
}
