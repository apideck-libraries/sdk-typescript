// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/utils"
	"time"
)

// SubsidiaryStatus - Based on the status some functionality is enabled or disabled.
type SubsidiaryStatus string

const (
	SubsidiaryStatusActive   SubsidiaryStatus = "active"
	SubsidiaryStatusInactive SubsidiaryStatus = "inactive"
)

func (e SubsidiaryStatus) ToPointer() *SubsidiaryStatus {
	return &e
}
func (e *SubsidiaryStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "inactive":
		*e = SubsidiaryStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SubsidiaryStatus: %v", v)
	}
}

type Subsidiary struct {
	// A unique identifier for an object.
	ID *string `json:"id,omitempty"`
	// A unique identifier for an object.
	ParentID *string `json:"parent_id,omitempty"`
	// The name of the company.
	Name *string `json:"name,omitempty"`
	// Based on the status some functionality is enabled or disabled.
	Status *SubsidiaryStatus `json:"status,omitempty"`
	// When custom mappings are configured on the resource, the result is included here.
	CustomMappings map[string]any `json:"custom_mappings,omitempty"`
	// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
	RowVersion *string `json:"row_version,omitempty"`
	// The user who last updated the object.
	UpdatedBy *string `json:"updated_by,omitempty"`
	// The user who created the object.
	CreatedBy *string `json:"created_by,omitempty"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
	PassThrough []PassThroughBody `json:"pass_through,omitempty"`
}

func (s Subsidiary) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *Subsidiary) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Subsidiary) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Subsidiary) GetParentID() *string {
	if o == nil {
		return nil
	}
	return o.ParentID
}

func (o *Subsidiary) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Subsidiary) GetStatus() *SubsidiaryStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *Subsidiary) GetCustomMappings() map[string]any {
	if o == nil {
		return nil
	}
	return o.CustomMappings
}

func (o *Subsidiary) GetRowVersion() *string {
	if o == nil {
		return nil
	}
	return o.RowVersion
}

func (o *Subsidiary) GetUpdatedBy() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *Subsidiary) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *Subsidiary) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *Subsidiary) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *Subsidiary) GetPassThrough() []PassThroughBody {
	if o == nil {
		return nil
	}
	return o.PassThrough
}

type SubsidiaryInput struct {
	// A unique identifier for an object.
	ParentID *string `json:"parent_id,omitempty"`
	// The name of the company.
	Name *string `json:"name,omitempty"`
	// Based on the status some functionality is enabled or disabled.
	Status *SubsidiaryStatus `json:"status,omitempty"`
	// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
	RowVersion *string `json:"row_version,omitempty"`
	// The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
	PassThrough []PassThroughBody `json:"pass_through,omitempty"`
}

func (o *SubsidiaryInput) GetParentID() *string {
	if o == nil {
		return nil
	}
	return o.ParentID
}

func (o *SubsidiaryInput) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *SubsidiaryInput) GetStatus() *SubsidiaryStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *SubsidiaryInput) GetRowVersion() *string {
	if o == nil {
		return nil
	}
	return o.RowVersion
}

func (o *SubsidiaryInput) GetPassThrough() []PassThroughBody {
	if o == nil {
		return nil
	}
	return o.PassThrough
}
