// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// WebsiteType - The type of website
type WebsiteType string

const (
	WebsiteTypePrimary   WebsiteType = "primary"
	WebsiteTypeSecondary WebsiteType = "secondary"
	WebsiteTypeWork      WebsiteType = "work"
	WebsiteTypePersonal  WebsiteType = "personal"
	WebsiteTypeOther     WebsiteType = "other"
)

func (e WebsiteType) ToPointer() *WebsiteType {
	return &e
}
func (e *WebsiteType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "primary":
		fallthrough
	case "secondary":
		fallthrough
	case "work":
		fallthrough
	case "personal":
		fallthrough
	case "other":
		*e = WebsiteType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WebsiteType: %v", v)
	}
}

type Website struct {
	// Unique identifier for the website
	ID *string `json:"id,omitempty"`
	// The website URL
	URL string `json:"url"`
	// The type of website
	Type *WebsiteType `json:"type,omitempty"`
}

func (o *Website) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Website) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}

func (o *Website) GetType() *WebsiteType {
	if o == nil {
		return nil
	}
	return o.Type
}
