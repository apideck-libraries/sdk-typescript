// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

// BalanceSheetAssetsAccount - A balance sheet assets account represents the financial position of a company at a specific point in time.
type BalanceSheetAssetsAccount struct {
	// The unique identifier for the account.
	AccountID *string `json:"account_id,omitempty"`
	// The account code of the account
	Code *string `json:"code,omitempty"`
	// The name of the account.
	Name *string `json:"name,omitempty"`
	// The amount or value of the item
	Value *float64 `json:"value,omitempty"`
	// A list of balance sheet accounts
	Items any `json:"items,omitempty"`
}

func (o *BalanceSheetAssetsAccount) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *BalanceSheetAssetsAccount) GetCode() *string {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *BalanceSheetAssetsAccount) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *BalanceSheetAssetsAccount) GetValue() *float64 {
	if o == nil {
		return nil
	}
	return o.Value
}

func (o *BalanceSheetAssetsAccount) GetItems() any {
	if o == nil {
		return nil
	}
	return o.Items
}

// BalanceSheetLiabilitiesAccount - A balance sheet liabilities account represents the financial position of a company at a specific point in time.
type BalanceSheetLiabilitiesAccount struct {
	// The unique identifier for the account.
	AccountID *string `json:"account_id,omitempty"`
	// The account code of the account
	Code *string `json:"code,omitempty"`
	// The name of the account.
	Name *string `json:"name,omitempty"`
	// The amount or value of the item
	Value *float64 `json:"value,omitempty"`
	// A list of balance sheet accounts
	Items any `json:"items,omitempty"`
}

func (o *BalanceSheetLiabilitiesAccount) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *BalanceSheetLiabilitiesAccount) GetCode() *string {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *BalanceSheetLiabilitiesAccount) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *BalanceSheetLiabilitiesAccount) GetValue() *float64 {
	if o == nil {
		return nil
	}
	return o.Value
}

func (o *BalanceSheetLiabilitiesAccount) GetItems() any {
	if o == nil {
		return nil
	}
	return o.Items
}

// BalanceSheetEquityAccount - A balance sheet equity account represents the financial position of a company at a specific point in time.
type BalanceSheetEquityAccount struct {
	// The unique identifier for the account.
	AccountID *string `json:"account_id,omitempty"`
	// The account code of the account
	Code *string `json:"code,omitempty"`
	// The name of the account.
	Name *string `json:"name,omitempty"`
	// The amount or value of the item
	Value *float64 `json:"value,omitempty"`
	// A list of balance sheet accounts
	Items any `json:"items,omitempty"`
}

func (o *BalanceSheetEquityAccount) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *BalanceSheetEquityAccount) GetCode() *string {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *BalanceSheetEquityAccount) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *BalanceSheetEquityAccount) GetValue() *float64 {
	if o == nil {
		return nil
	}
	return o.Value
}

func (o *BalanceSheetEquityAccount) GetItems() any {
	if o == nil {
		return nil
	}
	return o.Items
}

// BalanceSheetUncategorizedItemsAccount - A balance sheet uncategorized items account represents the financial position of a company at a specific point in time.
type BalanceSheetUncategorizedItemsAccount struct {
	// The unique identifier for the account.
	AccountID *string `json:"account_id,omitempty"`
	// The account code of the account
	Code *string `json:"code,omitempty"`
	// The name of the account.
	Name *string `json:"name,omitempty"`
	// The amount or value of the item
	Value *float64 `json:"value,omitempty"`
	// A list of balance sheet accounts
	Items any `json:"items,omitempty"`
}

func (o *BalanceSheetUncategorizedItemsAccount) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *BalanceSheetUncategorizedItemsAccount) GetCode() *string {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *BalanceSheetUncategorizedItemsAccount) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *BalanceSheetUncategorizedItemsAccount) GetValue() *float64 {
	if o == nil {
		return nil
	}
	return o.Value
}

func (o *BalanceSheetUncategorizedItemsAccount) GetItems() any {
	if o == nil {
		return nil
	}
	return o.Items
}

type Reports struct {
	// A unique identifier for an object.
	ID *string `json:"id,omitempty"`
	// The name of the report
	ReportName *string `json:"report_name,omitempty"`
	// The start date of the report
	StartDate *string `json:"start_date,omitempty"`
	// The start date of the report
	EndDate string `json:"end_date"`
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency *Currency `json:"currency,omitempty"`
	// A balance sheet assets account represents the financial position of a company at a specific point in time.
	Assets BalanceSheetAssetsAccount `json:"assets"`
	// A balance sheet liabilities account represents the financial position of a company at a specific point in time.
	Liabilities BalanceSheetLiabilitiesAccount `json:"liabilities"`
	// A balance sheet equity account represents the financial position of a company at a specific point in time.
	Equity BalanceSheetEquityAccount `json:"equity"`
	// The net assets of the balance sheet
	NetAssets *float64 `json:"net_assets,omitempty"`
	// When custom mappings are configured on the resource, the result is included here.
	CustomMappings map[string]any `json:"custom_mappings,omitempty"`
	// The user who last updated the object.
	UpdatedBy *string `json:"updated_by,omitempty"`
	// The user who created the object.
	CreatedBy *string `json:"created_by,omitempty"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// A balance sheet uncategorized items account represents the financial position of a company at a specific point in time.
	UncategorizedItems *BalanceSheetUncategorizedItemsAccount `json:"uncategorized_items,omitempty"`
}

func (r Reports) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *Reports) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Reports) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Reports) GetReportName() *string {
	if o == nil {
		return nil
	}
	return o.ReportName
}

func (o *Reports) GetStartDate() *string {
	if o == nil {
		return nil
	}
	return o.StartDate
}

func (o *Reports) GetEndDate() string {
	if o == nil {
		return ""
	}
	return o.EndDate
}

func (o *Reports) GetCurrency() *Currency {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *Reports) GetAssets() BalanceSheetAssetsAccount {
	if o == nil {
		return BalanceSheetAssetsAccount{}
	}
	return o.Assets
}

func (o *Reports) GetLiabilities() BalanceSheetLiabilitiesAccount {
	if o == nil {
		return BalanceSheetLiabilitiesAccount{}
	}
	return o.Liabilities
}

func (o *Reports) GetEquity() BalanceSheetEquityAccount {
	if o == nil {
		return BalanceSheetEquityAccount{}
	}
	return o.Equity
}

func (o *Reports) GetNetAssets() *float64 {
	if o == nil {
		return nil
	}
	return o.NetAssets
}

func (o *Reports) GetCustomMappings() map[string]any {
	if o == nil {
		return nil
	}
	return o.CustomMappings
}

func (o *Reports) GetUpdatedBy() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *Reports) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *Reports) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *Reports) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *Reports) GetUncategorizedItems() *BalanceSheetUncategorizedItemsAccount {
	if o == nil {
		return nil
	}
	return o.UncategorizedItems
}

type BalanceSheet struct {
	Reports []Reports `json:"reports"`
}

func (o *BalanceSheet) GetReports() []Reports {
	if o == nil {
		return []Reports{}
	}
	return o.Reports
}
