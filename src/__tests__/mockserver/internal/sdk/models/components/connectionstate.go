// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// ConnectionState - [Connection state flow](#section/Connection-state)
type ConnectionState string

const (
	ConnectionStateAvailable  ConnectionState = "available"
	ConnectionStateCallable   ConnectionState = "callable"
	ConnectionStateAdded      ConnectionState = "added"
	ConnectionStateAuthorized ConnectionState = "authorized"
	ConnectionStateInvalid    ConnectionState = "invalid"
)

func (e ConnectionState) ToPointer() *ConnectionState {
	return &e
}
func (e *ConnectionState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "available":
		fallthrough
	case "callable":
		fallthrough
	case "added":
		fallthrough
	case "authorized":
		fallthrough
	case "invalid":
		*e = ConnectionState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionState: %v", v)
	}
}
