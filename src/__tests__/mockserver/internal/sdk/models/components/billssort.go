// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/utils"
)

// By - The field on which to sort the Bills
type By string

const (
	ByUpdatedAt By = "updated_at"
	ByCreatedAt By = "created_at"
)

func (e By) ToPointer() *By {
	return &e
}
func (e *By) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "updated_at":
		fallthrough
	case "created_at":
		*e = By(v)
		return nil
	default:
		return fmt.Errorf("invalid value for By: %v", v)
	}
}

type BillsSort struct {
	// The field on which to sort the Bills
	By *By `queryParam:"name=by"`
	// The direction in which to sort the results
	Direction *SortDirection `default:"asc" queryParam:"name=direction"`
}

func (b BillsSort) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BillsSort) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *BillsSort) GetBy() *By {
	if o == nil {
		return nil
	}
	return o.By
}

func (o *BillsSort) GetDirection() *SortDirection {
	if o == nil {
		return nil
	}
	return o.Direction
}
