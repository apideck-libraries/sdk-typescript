// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/utils"
	"time"
)

// ProjectsFilterProjectStatus - Status of projects to filter by
type ProjectsFilterProjectStatus string

const (
	ProjectsFilterProjectStatusActive    ProjectsFilterProjectStatus = "active"
	ProjectsFilterProjectStatusCompleted ProjectsFilterProjectStatus = "completed"
	ProjectsFilterProjectStatusOnHold    ProjectsFilterProjectStatus = "on_hold"
	ProjectsFilterProjectStatusCancelled ProjectsFilterProjectStatus = "cancelled"
	ProjectsFilterProjectStatusDraft     ProjectsFilterProjectStatus = "draft"
)

func (e ProjectsFilterProjectStatus) ToPointer() *ProjectsFilterProjectStatus {
	return &e
}
func (e *ProjectsFilterProjectStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "completed":
		fallthrough
	case "on_hold":
		fallthrough
	case "cancelled":
		fallthrough
	case "draft":
		*e = ProjectsFilterProjectStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectsFilterProjectStatus: %v", v)
	}
}

type ProjectsFilter struct {
	// Name of project to search for
	Name *string `queryParam:"name=name"`
	// Status of projects to filter by
	Status *ProjectsFilterProjectStatus `queryParam:"name=status"`
	// Filter projects by customer ID
	CustomerID *string `queryParam:"name=customer_id"`
	// Return projects modified after this date
	UpdatedSince *time.Time `queryParam:"name=updated_since"`
}

func (p ProjectsFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *ProjectsFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *ProjectsFilter) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ProjectsFilter) GetStatus() *ProjectsFilterProjectStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *ProjectsFilter) GetCustomerID() *string {
	if o == nil {
		return nil
	}
	return o.CustomerID
}

func (o *ProjectsFilter) GetUpdatedSince() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedSince
}
