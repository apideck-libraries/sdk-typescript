// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type CustomObjectSchemaType string

const (
	CustomObjectSchemaTypeString      CustomObjectSchemaType = "string"
	CustomObjectSchemaTypeNumber      CustomObjectSchemaType = "number"
	CustomObjectSchemaTypeInteger     CustomObjectSchemaType = "integer"
	CustomObjectSchemaTypeBoolean     CustomObjectSchemaType = "boolean"
	CustomObjectSchemaTypeDate        CustomObjectSchemaType = "date"
	CustomObjectSchemaTypeDatetime    CustomObjectSchemaType = "datetime"
	CustomObjectSchemaTypeCurrency    CustomObjectSchemaType = "currency"
	CustomObjectSchemaTypeEmail       CustomObjectSchemaType = "email"
	CustomObjectSchemaTypePhone       CustomObjectSchemaType = "phone"
	CustomObjectSchemaTypeReference   CustomObjectSchemaType = "reference"
	CustomObjectSchemaTypeSelect      CustomObjectSchemaType = "select"
	CustomObjectSchemaTypeMultiselect CustomObjectSchemaType = "multiselect"
)

func (e CustomObjectSchemaType) ToPointer() *CustomObjectSchemaType {
	return &e
}
func (e *CustomObjectSchemaType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "string":
		fallthrough
	case "number":
		fallthrough
	case "integer":
		fallthrough
	case "boolean":
		fallthrough
	case "date":
		fallthrough
	case "datetime":
		fallthrough
	case "currency":
		fallthrough
	case "email":
		fallthrough
	case "phone":
		fallthrough
	case "reference":
		fallthrough
	case "select":
		fallthrough
	case "multiselect":
		*e = CustomObjectSchemaType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomObjectSchemaType: %v", v)
	}
}

type CustomObjectSchemaOptions struct {
	Value *string `json:"value,omitempty"`
	Label *string `json:"label,omitempty"`
}

func (o *CustomObjectSchemaOptions) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

func (o *CustomObjectSchemaOptions) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

type Fields struct {
	ID          *string                 `json:"id,omitempty"`
	Name        *string                 `json:"name,omitempty"`
	Description *string                 `json:"description,omitempty"`
	Type        *CustomObjectSchemaType `json:"type,omitempty"`
	Required    *bool                   `json:"required,omitempty"`
	// Options for select and multiselect types
	Options []CustomObjectSchemaOptions `json:"options,omitempty"`
	// Default value for the field
	DefaultValue *string `json:"default_value,omitempty"`
}

func (o *Fields) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Fields) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Fields) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *Fields) GetType() *CustomObjectSchemaType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *Fields) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *Fields) GetOptions() []CustomObjectSchemaOptions {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *Fields) GetDefaultValue() *string {
	if o == nil {
		return nil
	}
	return o.DefaultValue
}

type CustomObjectSchema struct {
	// The unique identifier of the custom object schema
	ID *string `json:"id,omitempty"`
	// The name of the custom object schema
	Name *string `json:"name,omitempty"`
	// The description of the custom object schema
	Description *string `json:"description,omitempty"`
	// The fields defined in the schema
	Fields []Fields `json:"fields,omitempty"`
	// Whether the custom object schema is visible in the UI
	Visible *bool `json:"visible,omitempty"`
	// Whether the custom object schema is active
	Active *bool `json:"active,omitempty"`
	// The ID of the user who created the custom object schema
	CreatedBy *string `json:"created_by,omitempty"`
	// The ID of the user who last updated the custom object schema
	UpdatedBy *string `json:"updated_by,omitempty"`
	// The timestamp when the custom object schema was last updated
	UpdatedAt *string `json:"updated_at,omitempty"`
	// The timestamp when the custom object schema was created
	CreatedAt *string `json:"created_at,omitempty"`
	// The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
	PassThrough []PassThroughBody `json:"pass_through,omitempty"`
}

func (o *CustomObjectSchema) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CustomObjectSchema) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CustomObjectSchema) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CustomObjectSchema) GetFields() []Fields {
	if o == nil {
		return nil
	}
	return o.Fields
}

func (o *CustomObjectSchema) GetVisible() *bool {
	if o == nil {
		return nil
	}
	return o.Visible
}

func (o *CustomObjectSchema) GetActive() *bool {
	if o == nil {
		return nil
	}
	return o.Active
}

func (o *CustomObjectSchema) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *CustomObjectSchema) GetUpdatedBy() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *CustomObjectSchema) GetUpdatedAt() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *CustomObjectSchema) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *CustomObjectSchema) GetPassThrough() []PassThroughBody {
	if o == nil {
		return nil
	}
	return o.PassThrough
}

type CustomObjectSchemaInput struct {
	// The name of the custom object schema
	Name *string `json:"name,omitempty"`
	// The description of the custom object schema
	Description *string `json:"description,omitempty"`
	// The fields defined in the schema
	Fields []Fields `json:"fields,omitempty"`
	// Whether the custom object schema is visible in the UI
	Visible *bool `json:"visible,omitempty"`
	// Whether the custom object schema is active
	Active *bool `json:"active,omitempty"`
	// The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
	PassThrough []PassThroughBody `json:"pass_through,omitempty"`
}

func (o *CustomObjectSchemaInput) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CustomObjectSchemaInput) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CustomObjectSchemaInput) GetFields() []Fields {
	if o == nil {
		return nil
	}
	return o.Fields
}

func (o *CustomObjectSchemaInput) GetVisible() *bool {
	if o == nil {
		return nil
	}
	return o.Visible
}

func (o *CustomObjectSchemaInput) GetActive() *bool {
	if o == nil {
		return nil
	}
	return o.Active
}

func (o *CustomObjectSchemaInput) GetPassThrough() []PassThroughBody {
	if o == nil {
		return nil
	}
	return o.PassThrough
}
