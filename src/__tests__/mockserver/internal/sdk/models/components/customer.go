// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/utils"
	"time"
)

// CustomerStatus - Customer status
type CustomerStatus string

const (
	CustomerStatusActive             CustomerStatus = "active"
	CustomerStatusInactive           CustomerStatus = "inactive"
	CustomerStatusArchived           CustomerStatus = "archived"
	CustomerStatusGdprErasureRequest CustomerStatus = "gdpr-erasure-request"
	CustomerStatusUnknown            CustomerStatus = "unknown"
)

func (e CustomerStatus) ToPointer() *CustomerStatus {
	return &e
}
func (e *CustomerStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "inactive":
		fallthrough
	case "archived":
		fallthrough
	case "gdpr-erasure-request":
		fallthrough
	case "unknown":
		*e = CustomerStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomerStatus: %v", v)
	}
}

type Customer struct {
	// A unique identifier for an object.
	ID string `json:"id"`
	// The third-party API ID of original entity
	DownstreamID *string `json:"downstream_id,omitempty"`
	// Display ID
	DisplayID *string `json:"display_id,omitempty"`
	// Display name
	DisplayName *string `json:"display_name,omitempty"`
	// The name of the company.
	CompanyName *string `json:"company_name,omitempty"`
	// The company or subsidiary id the transaction belongs to
	CompanyID *string `json:"company_id,omitempty"`
	// The job title of the person.
	Title *string `json:"title,omitempty"`
	// The first name of the person.
	FirstName *string `json:"first_name,omitempty"`
	// Middle name of the person.
	MiddleName *string `json:"middle_name,omitempty"`
	// The last name of the person.
	LastName *string `json:"last_name,omitempty"`
	Suffix   *string `json:"suffix,omitempty"`
	// Is this an individual or business customer
	Individual *bool `json:"individual,omitempty"`
	// If true, indicates this is a Project.
	Project      *bool         `json:"project,omitempty"`
	Addresses    []Address     `json:"addresses,omitempty"`
	PhoneNumbers []PhoneNumber `json:"phone_numbers,omitempty"`
	Emails       []Email       `json:"emails,omitempty"`
	Websites     []Website     `json:"websites,omitempty"`
	BankAccounts []BankAccount `json:"bank_accounts,omitempty"`
	// Some notes about this customer
	Notes     *string        `json:"notes,omitempty"`
	TaxRate   *LinkedTaxRate `json:"tax_rate,omitempty"`
	TaxNumber *string        `json:"tax_number,omitempty"`
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency *Currency            `json:"currency,omitempty"`
	Account  *LinkedLedgerAccount `json:"account,omitempty"`
	// The parent customer this entity is linked to.
	Parent *LinkedParentCustomer `json:"parent,omitempty"`
	// Customer status
	Status *CustomerStatus `json:"status,omitempty"`
	// Payment method used for the transaction, such as cash, credit card, bank transfer, or check
	PaymentMethod *string `json:"payment_method,omitempty"`
	// The channel through which the transaction is processed.
	Channel      *string       `json:"channel,omitempty"`
	CustomFields []CustomField `json:"custom_fields,omitempty"`
	// When custom mappings are configured on the resource, the result is included here.
	CustomMappings map[string]any `json:"custom_mappings,omitempty"`
	// The user who last updated the object.
	UpdatedBy *string `json:"updated_by,omitempty"`
	// The user who created the object.
	CreatedBy *string `json:"created_by,omitempty"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
	RowVersion *string `json:"row_version,omitempty"`
	// The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
	PassThrough []PassThroughBody `json:"pass_through,omitempty"`
}

func (c Customer) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *Customer) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Customer) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Customer) GetDownstreamID() *string {
	if o == nil {
		return nil
	}
	return o.DownstreamID
}

func (o *Customer) GetDisplayID() *string {
	if o == nil {
		return nil
	}
	return o.DisplayID
}

func (o *Customer) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *Customer) GetCompanyName() *string {
	if o == nil {
		return nil
	}
	return o.CompanyName
}

func (o *Customer) GetCompanyID() *string {
	if o == nil {
		return nil
	}
	return o.CompanyID
}

func (o *Customer) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *Customer) GetFirstName() *string {
	if o == nil {
		return nil
	}
	return o.FirstName
}

func (o *Customer) GetMiddleName() *string {
	if o == nil {
		return nil
	}
	return o.MiddleName
}

func (o *Customer) GetLastName() *string {
	if o == nil {
		return nil
	}
	return o.LastName
}

func (o *Customer) GetSuffix() *string {
	if o == nil {
		return nil
	}
	return o.Suffix
}

func (o *Customer) GetIndividual() *bool {
	if o == nil {
		return nil
	}
	return o.Individual
}

func (o *Customer) GetProject() *bool {
	if o == nil {
		return nil
	}
	return o.Project
}

func (o *Customer) GetAddresses() []Address {
	if o == nil {
		return nil
	}
	return o.Addresses
}

func (o *Customer) GetPhoneNumbers() []PhoneNumber {
	if o == nil {
		return nil
	}
	return o.PhoneNumbers
}

func (o *Customer) GetEmails() []Email {
	if o == nil {
		return nil
	}
	return o.Emails
}

func (o *Customer) GetWebsites() []Website {
	if o == nil {
		return nil
	}
	return o.Websites
}

func (o *Customer) GetBankAccounts() []BankAccount {
	if o == nil {
		return nil
	}
	return o.BankAccounts
}

func (o *Customer) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *Customer) GetTaxRate() *LinkedTaxRate {
	if o == nil {
		return nil
	}
	return o.TaxRate
}

func (o *Customer) GetTaxNumber() *string {
	if o == nil {
		return nil
	}
	return o.TaxNumber
}

func (o *Customer) GetCurrency() *Currency {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *Customer) GetAccount() *LinkedLedgerAccount {
	if o == nil {
		return nil
	}
	return o.Account
}

func (o *Customer) GetParent() *LinkedParentCustomer {
	if o == nil {
		return nil
	}
	return o.Parent
}

func (o *Customer) GetStatus() *CustomerStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *Customer) GetPaymentMethod() *string {
	if o == nil {
		return nil
	}
	return o.PaymentMethod
}

func (o *Customer) GetChannel() *string {
	if o == nil {
		return nil
	}
	return o.Channel
}

func (o *Customer) GetCustomFields() []CustomField {
	if o == nil {
		return nil
	}
	return o.CustomFields
}

func (o *Customer) GetCustomMappings() map[string]any {
	if o == nil {
		return nil
	}
	return o.CustomMappings
}

func (o *Customer) GetUpdatedBy() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *Customer) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *Customer) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *Customer) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *Customer) GetRowVersion() *string {
	if o == nil {
		return nil
	}
	return o.RowVersion
}

func (o *Customer) GetPassThrough() []PassThroughBody {
	if o == nil {
		return nil
	}
	return o.PassThrough
}

type CustomerInput struct {
	// Display ID
	DisplayID *string `json:"display_id,omitempty"`
	// Display name
	DisplayName *string `json:"display_name,omitempty"`
	// The name of the company.
	CompanyName *string `json:"company_name,omitempty"`
	// The company or subsidiary id the transaction belongs to
	CompanyID *string `json:"company_id,omitempty"`
	// The job title of the person.
	Title *string `json:"title,omitempty"`
	// The first name of the person.
	FirstName *string `json:"first_name,omitempty"`
	// Middle name of the person.
	MiddleName *string `json:"middle_name,omitempty"`
	// The last name of the person.
	LastName *string `json:"last_name,omitempty"`
	Suffix   *string `json:"suffix,omitempty"`
	// Is this an individual or business customer
	Individual *bool `json:"individual,omitempty"`
	// If true, indicates this is a Project.
	Project      *bool         `json:"project,omitempty"`
	Addresses    []Address     `json:"addresses,omitempty"`
	PhoneNumbers []PhoneNumber `json:"phone_numbers,omitempty"`
	Emails       []Email       `json:"emails,omitempty"`
	Websites     []Website     `json:"websites,omitempty"`
	BankAccounts []BankAccount `json:"bank_accounts,omitempty"`
	// Some notes about this customer
	Notes     *string             `json:"notes,omitempty"`
	TaxRate   *LinkedTaxRateInput `json:"tax_rate,omitempty"`
	TaxNumber *string             `json:"tax_number,omitempty"`
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency *Currency                 `json:"currency,omitempty"`
	Account  *LinkedLedgerAccountInput `json:"account,omitempty"`
	// The parent customer this entity is linked to.
	Parent *LinkedParentCustomer `json:"parent,omitempty"`
	// Customer status
	Status *CustomerStatus `json:"status,omitempty"`
	// Payment method used for the transaction, such as cash, credit card, bank transfer, or check
	PaymentMethod *string `json:"payment_method,omitempty"`
	// The channel through which the transaction is processed.
	Channel      *string       `json:"channel,omitempty"`
	CustomFields []CustomField `json:"custom_fields,omitempty"`
	// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
	RowVersion *string `json:"row_version,omitempty"`
	// The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
	PassThrough []PassThroughBody `json:"pass_through,omitempty"`
}

func (o *CustomerInput) GetDisplayID() *string {
	if o == nil {
		return nil
	}
	return o.DisplayID
}

func (o *CustomerInput) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *CustomerInput) GetCompanyName() *string {
	if o == nil {
		return nil
	}
	return o.CompanyName
}

func (o *CustomerInput) GetCompanyID() *string {
	if o == nil {
		return nil
	}
	return o.CompanyID
}

func (o *CustomerInput) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *CustomerInput) GetFirstName() *string {
	if o == nil {
		return nil
	}
	return o.FirstName
}

func (o *CustomerInput) GetMiddleName() *string {
	if o == nil {
		return nil
	}
	return o.MiddleName
}

func (o *CustomerInput) GetLastName() *string {
	if o == nil {
		return nil
	}
	return o.LastName
}

func (o *CustomerInput) GetSuffix() *string {
	if o == nil {
		return nil
	}
	return o.Suffix
}

func (o *CustomerInput) GetIndividual() *bool {
	if o == nil {
		return nil
	}
	return o.Individual
}

func (o *CustomerInput) GetProject() *bool {
	if o == nil {
		return nil
	}
	return o.Project
}

func (o *CustomerInput) GetAddresses() []Address {
	if o == nil {
		return nil
	}
	return o.Addresses
}

func (o *CustomerInput) GetPhoneNumbers() []PhoneNumber {
	if o == nil {
		return nil
	}
	return o.PhoneNumbers
}

func (o *CustomerInput) GetEmails() []Email {
	if o == nil {
		return nil
	}
	return o.Emails
}

func (o *CustomerInput) GetWebsites() []Website {
	if o == nil {
		return nil
	}
	return o.Websites
}

func (o *CustomerInput) GetBankAccounts() []BankAccount {
	if o == nil {
		return nil
	}
	return o.BankAccounts
}

func (o *CustomerInput) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *CustomerInput) GetTaxRate() *LinkedTaxRateInput {
	if o == nil {
		return nil
	}
	return o.TaxRate
}

func (o *CustomerInput) GetTaxNumber() *string {
	if o == nil {
		return nil
	}
	return o.TaxNumber
}

func (o *CustomerInput) GetCurrency() *Currency {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *CustomerInput) GetAccount() *LinkedLedgerAccountInput {
	if o == nil {
		return nil
	}
	return o.Account
}

func (o *CustomerInput) GetParent() *LinkedParentCustomer {
	if o == nil {
		return nil
	}
	return o.Parent
}

func (o *CustomerInput) GetStatus() *CustomerStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *CustomerInput) GetPaymentMethod() *string {
	if o == nil {
		return nil
	}
	return o.PaymentMethod
}

func (o *CustomerInput) GetChannel() *string {
	if o == nil {
		return nil
	}
	return o.Channel
}

func (o *CustomerInput) GetCustomFields() []CustomField {
	if o == nil {
		return nil
	}
	return o.CustomFields
}

func (o *CustomerInput) GetRowVersion() *string {
	if o == nil {
		return nil
	}
	return o.RowVersion
}

func (o *CustomerInput) GetPassThrough() []PassThroughBody {
	if o == nil {
		return nil
	}
	return o.PassThrough
}
