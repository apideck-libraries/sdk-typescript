// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// AllocationAllocationType - Type of entity this payment should be attributed to.
type AllocationAllocationType string

const (
	AllocationAllocationTypeInvoice      AllocationAllocationType = "invoice"
	AllocationAllocationTypeOrder        AllocationAllocationType = "order"
	AllocationAllocationTypeExpense      AllocationAllocationType = "expense"
	AllocationAllocationTypeCreditMemo   AllocationAllocationType = "credit_memo"
	AllocationAllocationTypeOverPayment  AllocationAllocationType = "over_payment"
	AllocationAllocationTypePrePayment   AllocationAllocationType = "pre_payment"
	AllocationAllocationTypeJournalEntry AllocationAllocationType = "journal_entry"
	AllocationAllocationTypeOther        AllocationAllocationType = "other"
	AllocationAllocationTypeBill         AllocationAllocationType = "bill"
)

func (e AllocationAllocationType) ToPointer() *AllocationAllocationType {
	return &e
}
func (e *AllocationAllocationType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invoice":
		fallthrough
	case "order":
		fallthrough
	case "expense":
		fallthrough
	case "credit_memo":
		fallthrough
	case "over_payment":
		fallthrough
	case "pre_payment":
		fallthrough
	case "journal_entry":
		fallthrough
	case "other":
		fallthrough
	case "bill":
		*e = AllocationAllocationType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AllocationAllocationType: %v", v)
	}
}

type Allocation struct {
	// Unique identifier of entity this payment should be attributed to.
	ID *string `json:"id,omitempty"`
	// Type of entity this payment should be attributed to.
	Type *AllocationAllocationType `json:"type,omitempty"`
	Code *string                   `json:"code,omitempty"`
	// Amount of payment that should be attributed to this allocation. If null, the total_amount will be used.
	Amount *float64 `json:"amount,omitempty"`
	// Unique identifier of the allocation
	AllocationID *string `json:"allocation_id,omitempty"`
}

func (o *Allocation) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Allocation) GetType() *AllocationAllocationType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *Allocation) GetCode() *string {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *Allocation) GetAmount() *float64 {
	if o == nil {
		return nil
	}
	return o.Amount
}

func (o *Allocation) GetAllocationID() *string {
	if o == nil {
		return nil
	}
	return o.AllocationID
}

type AllocationInput struct {
	// Unique identifier of entity this payment should be attributed to.
	ID *string `json:"id,omitempty"`
	// Type of entity this payment should be attributed to.
	Type *AllocationAllocationType `json:"type,omitempty"`
	// Amount of payment that should be attributed to this allocation. If null, the total_amount will be used.
	Amount *float64 `json:"amount,omitempty"`
	// Unique identifier of the allocation
	AllocationID *string `json:"allocation_id,omitempty"`
}

func (o *AllocationInput) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *AllocationInput) GetType() *AllocationAllocationType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *AllocationInput) GetAmount() *float64 {
	if o == nil {
		return nil
	}
	return o.Amount
}

func (o *AllocationInput) GetAllocationID() *string {
	if o == nil {
		return nil
	}
	return o.AllocationID
}
