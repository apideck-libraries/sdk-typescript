// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

// EcommerceOrderRefund - A refund for an ecommerce order.
type EcommerceOrderRefund struct {
	// A unique identifier for an object.
	ID *string `json:"id,omitempty"`
	// The amount of the refund.
	Amount *string `json:"amount,omitempty"`
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency *Currency `json:"currency,omitempty"`
	// The reason for the refund.
	Reason *string `json:"reason,omitempty"`
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

func (e EcommerceOrderRefund) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EcommerceOrderRefund) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *EcommerceOrderRefund) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *EcommerceOrderRefund) GetAmount() *string {
	if o == nil {
		return nil
	}
	return o.Amount
}

func (o *EcommerceOrderRefund) GetCurrency() *Currency {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *EcommerceOrderRefund) GetReason() *string {
	if o == nil {
		return nil
	}
	return o.Reason
}

func (o *EcommerceOrderRefund) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}
