// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/types"
	"mockserver/internal/sdk/utils"
	"time"
)

type AgedCreditors struct {
	// The exact date and time the report was generated.
	ReportGeneratedAt *time.Time `json:"report_generated_at,omitempty"`
	// The cutoff date for transactions included in the report.
	ReportAsOfDate *types.Date `json:"report_as_of_date,omitempty"`
	// Number of aging periods shown in the report.
	PeriodCount *int64 `default:"4" json:"period_count"`
	// Length of each aging period in days.
	PeriodLength        *int64                         `default:"30" json:"period_length"`
	OutstandingBalances []OutstandingBalanceBySupplier `json:"outstanding_balances,omitempty"`
}

func (a AgedCreditors) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AgedCreditors) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AgedCreditors) GetReportGeneratedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ReportGeneratedAt
}

func (o *AgedCreditors) GetReportAsOfDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.ReportAsOfDate
}

func (o *AgedCreditors) GetPeriodCount() *int64 {
	if o == nil {
		return nil
	}
	return o.PeriodCount
}

func (o *AgedCreditors) GetPeriodLength() *int64 {
	if o == nil {
		return nil
	}
	return o.PeriodLength
}

func (o *AgedCreditors) GetOutstandingBalances() []OutstandingBalanceBySupplier {
	if o == nil {
		return nil
	}
	return o.OutstandingBalances
}
