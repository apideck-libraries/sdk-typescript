// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type CollectionUser struct {
	// A unique identifier for an object.
	ID *string `json:"id,omitempty"`
	// Full name of the user
	Name *string `json:"name,omitempty"`
	// First name of the user
	FirstName *string `json:"first_name,omitempty"`
	// Last name of the user
	LastName *string `json:"last_name,omitempty"`
	// Email address of the user
	Email *string `json:"email,omitempty"`
	// The URL of the photo of a person.
	PhotoURL *string `json:"photo_url,omitempty"`
	// When custom mappings are configured on the resource, the result is included here.
	CustomMappings map[string]any `json:"custom_mappings,omitempty"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

func (c CollectionUser) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CollectionUser) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CollectionUser) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CollectionUser) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CollectionUser) GetFirstName() *string {
	if o == nil {
		return nil
	}
	return o.FirstName
}

func (o *CollectionUser) GetLastName() *string {
	if o == nil {
		return nil
	}
	return o.LastName
}

func (o *CollectionUser) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *CollectionUser) GetPhotoURL() *string {
	if o == nil {
		return nil
	}
	return o.PhotoURL
}

func (o *CollectionUser) GetCustomMappings() map[string]any {
	if o == nil {
		return nil
	}
	return o.CustomMappings
}

func (o *CollectionUser) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *CollectionUser) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}
