// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type GetConsumersResponseData struct {
	ConsumerID    *string `json:"consumer_id,omitempty"`
	ApplicationID *string `json:"application_id,omitempty"`
	// The metadata of the consumer. This is used to display the consumer in the sidebar. This is optional, but recommended.
	Metadata               *ConsumerMetadata       `json:"metadata,omitempty"`
	AggregatedRequestCount *float64                `json:"aggregated_request_count,omitempty"`
	RequestCounts          *RequestCountAllocation `json:"request_counts,omitempty"`
	Created                *string                 `json:"created,omitempty"`
	Modified               *string                 `json:"modified,omitempty"`
	RequestCountUpdated    *string                 `json:"request_count_updated,omitempty"`
	Services               []string                `json:"services,omitempty"`
}

func (o *GetConsumersResponseData) GetConsumerID() *string {
	if o == nil {
		return nil
	}
	return o.ConsumerID
}

func (o *GetConsumersResponseData) GetApplicationID() *string {
	if o == nil {
		return nil
	}
	return o.ApplicationID
}

func (o *GetConsumersResponseData) GetMetadata() *ConsumerMetadata {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *GetConsumersResponseData) GetAggregatedRequestCount() *float64 {
	if o == nil {
		return nil
	}
	return o.AggregatedRequestCount
}

func (o *GetConsumersResponseData) GetRequestCounts() *RequestCountAllocation {
	if o == nil {
		return nil
	}
	return o.RequestCounts
}

func (o *GetConsumersResponseData) GetCreated() *string {
	if o == nil {
		return nil
	}
	return o.Created
}

func (o *GetConsumersResponseData) GetModified() *string {
	if o == nil {
		return nil
	}
	return o.Modified
}

func (o *GetConsumersResponseData) GetRequestCountUpdated() *string {
	if o == nil {
		return nil
	}
	return o.RequestCountUpdated
}

func (o *GetConsumersResponseData) GetServices() []string {
	if o == nil {
		return nil
	}
	return o.Services
}

// GetConsumersResponse - Consumers
type GetConsumersResponse struct {
	// HTTP Response Status Code
	StatusCode int64 `json:"status_code"`
	// HTTP Response Status
	Status string                     `json:"status"`
	Data   []GetConsumersResponseData `json:"data"`
	// Response metadata
	Meta *Meta `json:"meta,omitempty"`
	// Links to navigate to previous or next pages through the API
	Links *Links `json:"links,omitempty"`
	// Raw response from the integration when raw=true query param is provided
	Raw map[string]any `json:"_raw,omitempty"`
}

func (o *GetConsumersResponse) GetStatusCode() int64 {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetConsumersResponse) GetStatus() string {
	if o == nil {
		return ""
	}
	return o.Status
}

func (o *GetConsumersResponse) GetData() []GetConsumersResponseData {
	if o == nil {
		return []GetConsumersResponseData{}
	}
	return o.Data
}

func (o *GetConsumersResponse) GetMeta() *Meta {
	if o == nil {
		return nil
	}
	return o.Meta
}

func (o *GetConsumersResponse) GetLinks() *Links {
	if o == nil {
		return nil
	}
	return o.Links
}

func (o *GetConsumersResponse) GetRaw() map[string]any {
	if o == nil {
		return nil
	}
	return o.Raw
}
