// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/utils"
)

// OpportunitiesSortBy - The field on which to sort the Opportunities
type OpportunitiesSortBy string

const (
	OpportunitiesSortByCreatedAt      OpportunitiesSortBy = "created_at"
	OpportunitiesSortByUpdatedAt      OpportunitiesSortBy = "updated_at"
	OpportunitiesSortByTitle          OpportunitiesSortBy = "title"
	OpportunitiesSortByWinProbability OpportunitiesSortBy = "win_probability"
	OpportunitiesSortByMonetaryAmount OpportunitiesSortBy = "monetary_amount"
	OpportunitiesSortByStatus         OpportunitiesSortBy = "status"
)

func (e OpportunitiesSortBy) ToPointer() *OpportunitiesSortBy {
	return &e
}
func (e *OpportunitiesSortBy) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created_at":
		fallthrough
	case "updated_at":
		fallthrough
	case "title":
		fallthrough
	case "win_probability":
		fallthrough
	case "monetary_amount":
		fallthrough
	case "status":
		*e = OpportunitiesSortBy(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OpportunitiesSortBy: %v", v)
	}
}

type OpportunitiesSort struct {
	// The field on which to sort the Opportunities
	By *OpportunitiesSortBy `queryParam:"name=by"`
	// The direction in which to sort the results
	Direction *SortDirection `default:"asc" queryParam:"name=direction"`
}

func (o OpportunitiesSort) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *OpportunitiesSort) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *OpportunitiesSort) GetBy() *OpportunitiesSortBy {
	if o == nil {
		return nil
	}
	return o.By
}

func (o *OpportunitiesSort) GetDirection() *SortDirection {
	if o == nil {
		return nil
	}
	return o.Direction
}
