// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type ConsumerConnection struct {
	ID         *string `json:"id,omitempty"`
	Name       *string `json:"name,omitempty"`
	Icon       *string `json:"icon,omitempty"`
	Logo       *string `json:"logo,omitempty"`
	Website    *string `json:"website,omitempty"`
	TagLine    *string `json:"tag_line,omitempty"`
	ServiceID  *string `json:"service_id,omitempty"`
	UnifiedAPI *string `json:"unified_api,omitempty"`
	ConsumerID *string `json:"consumer_id,omitempty"`
	// Type of authorization used by the connector
	AuthType *AuthType `json:"auth_type,omitempty"`
	Enabled  *bool     `json:"enabled,omitempty"`
	// Connection settings. Values will persist to `form_fields` with corresponding id
	Settings map[string]any `json:"settings,omitempty"`
	// Attach your own consumer specific metadata
	Metadata  map[string]any `json:"metadata,omitempty"`
	CreatedAt *string        `json:"created_at,omitempty"`
	UpdatedAt *string        `json:"updated_at,omitempty"`
	// [Connection state flow](#section/Connection-state)
	State *ConnectionState `json:"state,omitempty"`
}

func (o *ConsumerConnection) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ConsumerConnection) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ConsumerConnection) GetIcon() *string {
	if o == nil {
		return nil
	}
	return o.Icon
}

func (o *ConsumerConnection) GetLogo() *string {
	if o == nil {
		return nil
	}
	return o.Logo
}

func (o *ConsumerConnection) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

func (o *ConsumerConnection) GetTagLine() *string {
	if o == nil {
		return nil
	}
	return o.TagLine
}

func (o *ConsumerConnection) GetServiceID() *string {
	if o == nil {
		return nil
	}
	return o.ServiceID
}

func (o *ConsumerConnection) GetUnifiedAPI() *string {
	if o == nil {
		return nil
	}
	return o.UnifiedAPI
}

func (o *ConsumerConnection) GetConsumerID() *string {
	if o == nil {
		return nil
	}
	return o.ConsumerID
}

func (o *ConsumerConnection) GetAuthType() *AuthType {
	if o == nil {
		return nil
	}
	return o.AuthType
}

func (o *ConsumerConnection) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *ConsumerConnection) GetSettings() map[string]any {
	if o == nil {
		return nil
	}
	return o.Settings
}

func (o *ConsumerConnection) GetMetadata() map[string]any {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *ConsumerConnection) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *ConsumerConnection) GetUpdatedAt() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *ConsumerConnection) GetState() *ConnectionState {
	if o == nil {
		return nil
	}
	return o.State
}
