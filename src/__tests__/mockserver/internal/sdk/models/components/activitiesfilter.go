// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type ActivitiesFilter struct {
	// Company ID to filter on
	CompanyID *string `queryParam:"name=company_id"`
	// Owner ID to filter on
	OwnerID *string `queryParam:"name=owner_id"`
	// Primary contact ID to filter on
	ContactID    *string    `queryParam:"name=contact_id"`
	UpdatedSince *time.Time `queryParam:"name=updated_since"`
	// Type to filter on
	Type *string `queryParam:"name=type"`
}

func (a ActivitiesFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *ActivitiesFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ActivitiesFilter) GetCompanyID() *string {
	if o == nil {
		return nil
	}
	return o.CompanyID
}

func (o *ActivitiesFilter) GetOwnerID() *string {
	if o == nil {
		return nil
	}
	return o.OwnerID
}

func (o *ActivitiesFilter) GetContactID() *string {
	if o == nil {
		return nil
	}
	return o.ContactID
}

func (o *ActivitiesFilter) GetUpdatedSince() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedSince
}

func (o *ActivitiesFilter) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}
