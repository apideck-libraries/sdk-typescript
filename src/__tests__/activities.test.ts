/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assert, expect, it, test } from "vitest";
import { Apideck } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Activities Crm Activities All", async () => {
  const testHttpClient = createTestHTTPClient("crm.activitiesAll");

  const apideck = new Apideck({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKey: process.env["APIDECK_API_KEY"] ?? "value",
  });

  const result = await apideck.crm.activities.list({
    serviceId: "salesforce",
    filter: {
      updatedSince: new Date("2020-09-30T07:43:32.000Z"),
    },
    sort: {
      by: "created_at",
    },
    passThrough: {
      "search": "San Francisco",
    },
    fields: "id,updated_at",
  });
  expect(result.httpMeta.response.status).toBe(200);
  expect(result.getActivitiesResponse).toBeDefined();
  expect(result.getActivitiesResponse).toEqual({
    statusCode: 200,
    status: "OK",
    service: "zoho-crm",
    resource: "activities",
    operation: "all",
    data: [
      {
        id: "12345",
        downstreamId: "12345",
        activityDatetime: "2021-05-01T12:00:00.000Z",
        durationSeconds: 1800,
        userId: "12345",
        accountId: "12345",
        contactId: "12345",
        companyId: "12345",
        opportunityId: "12345",
        leadId: "12345",
        ownerId: "12345",
        campaignId: "12345",
        caseId: "12345",
        assetId: "12345",
        contractId: "12345",
        productId: "12345",
        solutionId: "12345",
        customObjectId: "12345",
        type: "meeting",
        title: "Meeting",
        description: "More info about the meeting",
        note: "An internal note about the meeting",
        location: "Space",
        locationAddress: {
          id: "123",
          type: "primary",
          string: "25 Spring Street, Blackburn, VIC 3130",
          name: "HQ US",
          line1: "Main street",
          line2: "apt #",
          line3: "Suite #",
          line4: "delivery instructions",
          streetNumber: "25",
          city: "San Francisco",
          state: "CA",
          postalCode: "94104",
          country: "US",
          latitude: "40.759211",
          longitude: "-73.984638",
          county: "Santa Clara",
          contactName: "Elon Musk",
          salutation: "Mr",
          phoneNumber: "111-111-1111",
          fax: "122-111-1111",
          email: "elon@musk.com",
          website: "https://elonmusk.com",
          notes: "Address notes or delivery instructions.",
          rowVersion: "1-12345",
        },
        allDayEvent: false,
        private: true,
        groupEvent: true,
        eventSubType: "debrief",
        groupEventType: "Proposed",
        child: false,
        archived: false,
        deleted: false,
        showAs: "busy",
        done: false,
        startDatetime: "2021-05-01T12:00:00.000Z",
        endDatetime: "2021-05-01T12:30:00.000Z",
        durationMinutes: 30,
        activityDate: "2021-05-01",
        endDate: "2021-05-01",
        recurrent: false,
        reminderDatetime: "2021-05-01T17:00:00.000Z",
        reminderSet: false,
        videoConferenceUrl: "https://us02web.zoom.us/j/88120759396",
        videoConferenceId: "zoom:88120759396",
        customFields: [
          {
            id: "2389328923893298",
            name: "employee_level",
            description: "Employee Level",
            value: {},
          },
          {
            id: "2389328923893298",
            name: "employee_level",
            description: "Employee Level",
            value: 10,
          },
        ],
        attendees: [
          {
            id: "12345",
            name: "Elon Musk",
            firstName: "Elon",
            middleName: "D.",
            lastName: "Musk",
            prefix: "Mr.",
            suffix: "PhD",
            emailAddress: "elon@musk.com",
            isOrganizer: true,
            status: "accepted",
            userId: "12345",
            contactId: "12345",
            updatedAt: new Date("2017-08-12T20:43:21.291Z"),
            createdAt: new Date("2017-08-12T20:43:21.291Z"),
          },
        ],
        updatedBy: "12345",
        createdBy: "12345",
        updatedAt: "2020-09-30T07:43:32.000Z",
        createdAt: "2020-09-30T07:43:32.000Z",
        passThrough: [
          {
            serviceId: "<id>",
            extendPaths: [
              {
                path: "$.nested.property",
                value: {
                  "TaxClassificationRef": {
                    "value": "EUC-99990201-V1-00020000",
                  },
                },
              },
              {
                path: "$.nested.property",
                value: {
                  "TaxClassificationRef": {
                    "value": "EUC-99990201-V1-00020000",
                  },
                },
              },
            ],
          },
          {
            serviceId: "<id>",
            extendPaths: [
              {
                path: "$.nested.property",
                value: {
                  "TaxClassificationRef": {
                    "value": "EUC-99990201-V1-00020000",
                  },
                },
              },
            ],
          },
        ],
      },
      {
        id: "12345",
        downstreamId: "12345",
        activityDatetime: "2021-05-01T12:00:00.000Z",
        durationSeconds: 1800,
        userId: "12345",
        accountId: "12345",
        contactId: "12345",
        companyId: "12345",
        opportunityId: "12345",
        leadId: "12345",
        ownerId: "12345",
        campaignId: "12345",
        caseId: "12345",
        assetId: "12345",
        contractId: "12345",
        productId: "12345",
        solutionId: "12345",
        customObjectId: "12345",
        type: "meeting",
        title: "Meeting",
        description: "More info about the meeting",
        note: "An internal note about the meeting",
        location: "Space",
        locationAddress: {
          id: "123",
          type: "primary",
          string: "25 Spring Street, Blackburn, VIC 3130",
          name: "HQ US",
          line1: "Main street",
          line2: "apt #",
          line3: "Suite #",
          line4: "delivery instructions",
          streetNumber: "25",
          city: "San Francisco",
          state: "CA",
          postalCode: "94104",
          country: "US",
          latitude: "40.759211",
          longitude: "-73.984638",
          county: "Santa Clara",
          contactName: "Elon Musk",
          salutation: "Mr",
          phoneNumber: "111-111-1111",
          fax: "122-111-1111",
          email: "elon@musk.com",
          website: "https://elonmusk.com",
          notes: "Address notes or delivery instructions.",
          rowVersion: "1-12345",
        },
        allDayEvent: false,
        private: true,
        groupEvent: true,
        eventSubType: "debrief",
        groupEventType: "Proposed",
        child: false,
        archived: false,
        deleted: false,
        showAs: "busy",
        done: false,
        startDatetime: "2021-05-01T12:00:00.000Z",
        endDatetime: "2021-05-01T12:30:00.000Z",
        durationMinutes: 30,
        activityDate: "2021-05-01",
        endDate: "2021-05-01",
        recurrent: false,
        reminderDatetime: "2021-05-01T17:00:00.000Z",
        reminderSet: false,
        videoConferenceUrl: "https://us02web.zoom.us/j/88120759396",
        videoConferenceId: "zoom:88120759396",
        customFields: [
          {
            id: "2389328923893298",
            name: "employee_level",
            description: "Employee Level",
            value: "Uses Salesforce and Marketo",
          },
          {
            id: "2389328923893298",
            name: "employee_level",
            description: "Employee Level",
            value: "Uses Salesforce and Marketo",
          },
          {
            id: "2389328923893298",
            name: "employee_level",
            description: "Employee Level",
            value: [
              "<value>",
              "<value>",
            ],
          },
        ],
        attendees: [
          {
            id: "12345",
            name: "Elon Musk",
            firstName: "Elon",
            middleName: "D.",
            lastName: "Musk",
            prefix: "Mr.",
            suffix: "PhD",
            emailAddress: "elon@musk.com",
            isOrganizer: true,
            status: "accepted",
            userId: "12345",
            contactId: "12345",
            updatedAt: new Date("2017-08-12T20:43:21.291Z"),
            createdAt: new Date("2017-08-12T20:43:21.291Z"),
          },
          {
            id: "12345",
            name: "Elon Musk",
            firstName: "Elon",
            middleName: "D.",
            lastName: "Musk",
            prefix: "Mr.",
            suffix: "PhD",
            emailAddress: "elon@musk.com",
            isOrganizer: true,
            status: "accepted",
            userId: "12345",
            contactId: "12345",
            updatedAt: new Date("2017-08-12T20:43:21.291Z"),
            createdAt: new Date("2017-08-12T20:43:21.291Z"),
          },
        ],
        updatedBy: "12345",
        createdBy: "12345",
        updatedAt: "2020-09-30T07:43:32.000Z",
        createdAt: "2020-09-30T07:43:32.000Z",
        passThrough: [
          {
            serviceId: "<id>",
            extendPaths: [
              {
                path: "$.nested.property",
                value: {
                  "TaxClassificationRef": {
                    "value": "EUC-99990201-V1-00020000",
                  },
                },
              },
            ],
          },
        ],
      },
      {
        id: "12345",
        downstreamId: "12345",
        activityDatetime: "2021-05-01T12:00:00.000Z",
        durationSeconds: 1800,
        userId: "12345",
        accountId: "12345",
        contactId: "12345",
        companyId: "12345",
        opportunityId: "12345",
        leadId: "12345",
        ownerId: "12345",
        campaignId: "12345",
        caseId: "12345",
        assetId: "12345",
        contractId: "12345",
        productId: "12345",
        solutionId: "12345",
        customObjectId: "12345",
        type: "meeting",
        title: "Meeting",
        description: "More info about the meeting",
        note: "An internal note about the meeting",
        location: "Space",
        locationAddress: {
          id: "123",
          type: "primary",
          string: "25 Spring Street, Blackburn, VIC 3130",
          name: "HQ US",
          line1: "Main street",
          line2: "apt #",
          line3: "Suite #",
          line4: "delivery instructions",
          streetNumber: "25",
          city: "San Francisco",
          state: "CA",
          postalCode: "94104",
          country: "US",
          latitude: "40.759211",
          longitude: "-73.984638",
          county: "Santa Clara",
          contactName: "Elon Musk",
          salutation: "Mr",
          phoneNumber: "111-111-1111",
          fax: "122-111-1111",
          email: "elon@musk.com",
          website: "https://elonmusk.com",
          notes: "Address notes or delivery instructions.",
          rowVersion: "1-12345",
        },
        allDayEvent: false,
        private: true,
        groupEvent: true,
        eventSubType: "debrief",
        groupEventType: "Proposed",
        child: false,
        archived: false,
        deleted: false,
        showAs: "busy",
        done: false,
        startDatetime: "2021-05-01T12:00:00.000Z",
        endDatetime: "2021-05-01T12:30:00.000Z",
        durationMinutes: 30,
        activityDate: "2021-05-01",
        endDate: "2021-05-01",
        recurrent: false,
        reminderDatetime: "2021-05-01T17:00:00.000Z",
        reminderSet: false,
        videoConferenceUrl: "https://us02web.zoom.us/j/88120759396",
        videoConferenceId: "zoom:88120759396",
        customFields: [
          {
            id: "2389328923893298",
            name: "employee_level",
            description: "Employee Level",
            value: true,
          },
          {
            id: "2389328923893298",
            name: "employee_level",
            description: "Employee Level",
            value: "Uses Salesforce and Marketo",
          },
        ],
        attendees: [
          {
            id: "12345",
            name: "Elon Musk",
            firstName: "Elon",
            middleName: "D.",
            lastName: "Musk",
            prefix: "Mr.",
            suffix: "PhD",
            emailAddress: "elon@musk.com",
            isOrganizer: true,
            status: "accepted",
            userId: "12345",
            contactId: "12345",
            updatedAt: new Date("2017-08-12T20:43:21.291Z"),
            createdAt: new Date("2017-08-12T20:43:21.291Z"),
          },
          {
            id: "12345",
            name: "Elon Musk",
            firstName: "Elon",
            middleName: "D.",
            lastName: "Musk",
            prefix: "Mr.",
            suffix: "PhD",
            emailAddress: "elon@musk.com",
            isOrganizer: true,
            status: "accepted",
            userId: "12345",
            contactId: "12345",
            updatedAt: new Date("2017-08-12T20:43:21.291Z"),
            createdAt: new Date("2017-08-12T20:43:21.291Z"),
          },
          {
            id: "12345",
            name: "Elon Musk",
            firstName: "Elon",
            middleName: "D.",
            lastName: "Musk",
            prefix: "Mr.",
            suffix: "PhD",
            emailAddress: "elon@musk.com",
            isOrganizer: true,
            status: "accepted",
            userId: "12345",
            contactId: "12345",
            updatedAt: new Date("2017-08-12T20:43:21.291Z"),
            createdAt: new Date("2017-08-12T20:43:21.291Z"),
          },
        ],
        updatedBy: "12345",
        createdBy: "12345",
        updatedAt: "2020-09-30T07:43:32.000Z",
        createdAt: "2020-09-30T07:43:32.000Z",
        passThrough: [
          {
            serviceId: "<id>",
            extendPaths: [
              {
                path: "$.nested.property",
                value: {
                  "TaxClassificationRef": {
                    "value": "EUC-99990201-V1-00020000",
                  },
                },
              },
              {
                path: "$.nested.property",
                value: {
                  "TaxClassificationRef": {
                    "value": "EUC-99990201-V1-00020000",
                  },
                },
              },
              {
                path: "$.nested.property",
                value: {
                  "TaxClassificationRef": {
                    "value": "EUC-99990201-V1-00020000",
                  },
                },
              },
            ],
          },
          {
            serviceId: "<id>",
            extendPaths: [
              {
                path: "$.nested.property",
                value: {
                  "TaxClassificationRef": {
                    "value": "EUC-99990201-V1-00020000",
                  },
                },
              },
              {
                path: "$.nested.property",
                value: {
                  "TaxClassificationRef": {
                    "value": "EUC-99990201-V1-00020000",
                  },
                },
              },
            ],
          },
        ],
      },
    ],
    meta: {
      itemsOnPage: 50,
      cursors: {
        previous: "em9oby1jcm06OnBhZ2U6OjE=",
        current: "em9oby1jcm06OnBhZ2U6OjI=",
        next: "em9oby1jcm06OnBhZ2U6OjM=",
      },
    },
    links: {
      previous:
        "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D",
      current: "https://unify.apideck.com/crm/companies",
      next:
        "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM",
    },
  });
});

it.skip("Activities Crm Activities Add", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step crm.activitiesAdd.test referencing operation crm.activitiesAdd with expression in requestBody with type  not currently supported`, `workflow step crm.activitiesAdd.test referencing operation crm.activitiesAdd with expression in requestBody with type  not currently supported`, `workflow step crm.activitiesAdd.test referencing operation crm.activitiesAdd with expression in requestBody with type  not currently supported`]",
  );
});

test("Activities Crm Activities One", async () => {
  const testHttpClient = createTestHTTPClient("crm.activitiesOne");

  const apideck = new Apideck({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKey: process.env["APIDECK_API_KEY"] ?? "value",
  });

  const result = await apideck.crm.activities.get({
    id: "<id>",
    serviceId: "salesforce",
    fields: "id,updated_at",
  });
  expect(result.httpMeta.response.status).toBe(200);
  expect(result.getActivityResponse).toBeDefined();
  expect(result.getActivityResponse).toEqual({
    statusCode: 200,
    status: "OK",
    service: "zoho-crm",
    resource: "activities",
    operation: "one",
    data: {
      id: "12345",
      downstreamId: "12345",
      activityDatetime: "2021-05-01T12:00:00.000Z",
      durationSeconds: 1800,
      userId: "12345",
      accountId: "12345",
      contactId: "12345",
      companyId: "12345",
      opportunityId: "12345",
      leadId: "12345",
      ownerId: "12345",
      campaignId: "12345",
      caseId: "12345",
      assetId: "12345",
      contractId: "12345",
      productId: "12345",
      solutionId: "12345",
      customObjectId: "12345",
      type: "meeting",
      title: "Meeting",
      description: "More info about the meeting",
      note: "An internal note about the meeting",
      location: "Space",
      locationAddress: {
        id: "123",
        type: "primary",
        string: "25 Spring Street, Blackburn, VIC 3130",
        name: "HQ US",
        line1: "Main street",
        line2: "apt #",
        line3: "Suite #",
        line4: "delivery instructions",
        streetNumber: "25",
        city: "San Francisco",
        state: "CA",
        postalCode: "94104",
        country: "US",
        latitude: "40.759211",
        longitude: "-73.984638",
        county: "Santa Clara",
        contactName: "Elon Musk",
        salutation: "Mr",
        phoneNumber: "111-111-1111",
        fax: "122-111-1111",
        email: "elon@musk.com",
        website: "https://elonmusk.com",
        notes: "Address notes or delivery instructions.",
        rowVersion: "1-12345",
      },
      allDayEvent: false,
      private: true,
      groupEvent: true,
      eventSubType: "debrief",
      groupEventType: "Proposed",
      child: false,
      archived: false,
      deleted: false,
      showAs: "busy",
      done: false,
      startDatetime: "2021-05-01T12:00:00.000Z",
      endDatetime: "2021-05-01T12:30:00.000Z",
      durationMinutes: 30,
      activityDate: "2021-05-01",
      endDate: "2021-05-01",
      recurrent: false,
      reminderDatetime: "2021-05-01T17:00:00.000Z",
      reminderSet: false,
      videoConferenceUrl: "https://us02web.zoom.us/j/88120759396",
      videoConferenceId: "zoom:88120759396",
      customFields: [
        {
          id: "2389328923893298",
          name: "employee_level",
          description: "Employee Level",
          value: {},
        },
        {
          id: "2389328923893298",
          name: "employee_level",
          description: "Employee Level",
          value: {},
        },
        {
          id: "2389328923893298",
          name: "employee_level",
          description: "Employee Level",
          value: {},
        },
      ],
      attendees: [
        {
          id: "12345",
          name: "Elon Musk",
          firstName: "Elon",
          middleName: "D.",
          lastName: "Musk",
          prefix: "Mr.",
          suffix: "PhD",
          emailAddress: "elon@musk.com",
          isOrganizer: true,
          status: "accepted",
          userId: "12345",
          contactId: "12345",
          updatedAt: new Date("2017-08-12T20:43:21.291Z"),
          createdAt: new Date("2017-08-12T20:43:21.291Z"),
        },
        {
          id: "12345",
          name: "Elon Musk",
          firstName: "Elon",
          middleName: "D.",
          lastName: "Musk",
          prefix: "Mr.",
          suffix: "PhD",
          emailAddress: "elon@musk.com",
          isOrganizer: true,
          status: "accepted",
          userId: "12345",
          contactId: "12345",
          updatedAt: new Date("2017-08-12T20:43:21.291Z"),
          createdAt: new Date("2017-08-12T20:43:21.291Z"),
        },
        {
          id: "12345",
          name: "Elon Musk",
          firstName: "Elon",
          middleName: "D.",
          lastName: "Musk",
          prefix: "Mr.",
          suffix: "PhD",
          emailAddress: "elon@musk.com",
          isOrganizer: true,
          status: "accepted",
          userId: "12345",
          contactId: "12345",
          updatedAt: new Date("2017-08-12T20:43:21.291Z"),
          createdAt: new Date("2017-08-12T20:43:21.291Z"),
        },
      ],
      updatedBy: "12345",
      createdBy: "12345",
      updatedAt: "2020-09-30T07:43:32.000Z",
      createdAt: "2020-09-30T07:43:32.000Z",
      passThrough: [
        {
          serviceId: "<id>",
          extendPaths: [
            {
              path: "$.nested.property",
              value: {
                "TaxClassificationRef": {
                  "value": "EUC-99990201-V1-00020000",
                },
              },
            },
            {
              path: "$.nested.property",
              value: {
                "TaxClassificationRef": {
                  "value": "EUC-99990201-V1-00020000",
                },
              },
            },
          ],
        },
        {
          serviceId: "<id>",
          extendPaths: [
            {
              path: "$.nested.property",
              value: {
                "TaxClassificationRef": {
                  "value": "EUC-99990201-V1-00020000",
                },
              },
            },
          ],
        },
      ],
    },
  });
});

it.skip("Activities Crm Activities Update", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step crm.activitiesUpdate.test referencing operation crm.activitiesUpdate with expression in requestBody with type  not currently supported`, `workflow step crm.activitiesUpdate.test referencing operation crm.activitiesUpdate with expression in requestBody with type  not currently supported`, `workflow step crm.activitiesUpdate.test referencing operation crm.activitiesUpdate with expression in requestBody with type  not currently supported`, `workflow step crm.activitiesUpdate.test referencing operation crm.activitiesUpdate with expression in requestBody with type  not currently supported`, `workflow step crm.activitiesUpdate.test referencing operation crm.activitiesUpdate with expression in requestBody with type  not currently supported`, `workflow step crm.activitiesUpdate.test referencing operation crm.activitiesUpdate with expression in requestBody with type  not currently supported`]",
  );
});

test("Activities Crm Activities Delete", async () => {
  const testHttpClient = createTestHTTPClient("crm.activitiesDelete");

  const apideck = new Apideck({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKey: process.env["APIDECK_API_KEY"] ?? "value",
  });

  const result = await apideck.crm.activities.delete({
    id: "<id>",
    serviceId: "salesforce",
  });
  expect(result.httpMeta.response.status).toBe(200);
  expect(result.deleteActivityResponse).toBeDefined();
  expect(result.deleteActivityResponse).toEqual({
    statusCode: 200,
    status: "OK",
    service: "zoho-crm",
    resource: "activities",
    operation: "delete",
    data: {
      id: "12345",
    },
  });
});
