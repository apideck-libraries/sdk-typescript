/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { Apideck } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Consumerrequestcounts Vault Consumer Request Counts All", async () => {
  const testHttpClient = createTestHTTPClient("vault.consumerRequestCountsAll");

  const apideck = new Apideck({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    apiKey: process.env["APIDECK_API_KEY"] ?? "value",
  });

  const result = await apideck.vault.consumerRequestCounts.list({
    consumerId: "test_user_id",
    startDatetime: "2021-05-01T12:00:00.000Z",
    endDatetime: "2021-05-30T12:00:00.000Z",
  });
  expect(result.httpMeta.response.status).toBe(200);
  expect(result.consumerRequestCountsInDateRangeResponse).toBeDefined();
  expect(result.consumerRequestCountsInDateRangeResponse).toEqual({
    statusCode: 200,
    status: "OK",
    data: {
      applicationId: "1111",
      consumerId: "test_user_id",
      startDatetime: "2021-05-01T12:00:00.000Z",
      endDatetime: "2021-05-10T12:00:00.000Z",
      aggregatedRequestCount: 40,
      requestCounts: {
        unify: 100,
        proxy: 10,
        vault: 21,
      },
    },
  });
});
