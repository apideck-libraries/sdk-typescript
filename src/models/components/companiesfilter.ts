/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type CompaniesFilter = {
  /**
   * Name of the company to filter on
   */
  name?: string | undefined;
};

/** @internal */
export const CompaniesFilter$inboundSchema: z.ZodType<
  CompaniesFilter,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
});

/** @internal */
export type CompaniesFilter$Outbound = {
  name?: string | undefined;
};

/** @internal */
export const CompaniesFilter$outboundSchema: z.ZodType<
  CompaniesFilter$Outbound,
  z.ZodTypeDef,
  CompaniesFilter
> = z.object({
  name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompaniesFilter$ {
  /** @deprecated use `CompaniesFilter$inboundSchema` instead. */
  export const inboundSchema = CompaniesFilter$inboundSchema;
  /** @deprecated use `CompaniesFilter$outboundSchema` instead. */
  export const outboundSchema = CompaniesFilter$outboundSchema;
  /** @deprecated use `CompaniesFilter$Outbound` instead. */
  export type Outbound = CompaniesFilter$Outbound;
}
