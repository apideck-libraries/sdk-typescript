/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  SortDirection,
  SortDirection$inboundSchema,
  SortDirection$outboundSchema,
} from "./sortdirection.js";

/**
 * The field to sort by
 */
export const ProjectsSortSortBy = {
  Name: "name",
  Status: "status",
  StartDate: "start_date",
  EndDate: "end_date",
  BudgetAmount: "budget_amount",
  ActualAmount: "actual_amount",
  CreatedAt: "created_at",
  UpdatedAt: "updated_at",
} as const;
/**
 * The field to sort by
 */
export type ProjectsSortSortBy = ClosedEnum<typeof ProjectsSortSortBy>;

export type ProjectsSort = {
  /**
   * The field to sort by
   */
  by?: ProjectsSortSortBy | undefined;
  /**
   * The direction in which to sort the results
   */
  direction?: SortDirection | undefined;
};

/** @internal */
export const ProjectsSortSortBy$inboundSchema: z.ZodNativeEnum<
  typeof ProjectsSortSortBy
> = z.nativeEnum(ProjectsSortSortBy);

/** @internal */
export const ProjectsSortSortBy$outboundSchema: z.ZodNativeEnum<
  typeof ProjectsSortSortBy
> = ProjectsSortSortBy$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProjectsSortSortBy$ {
  /** @deprecated use `ProjectsSortSortBy$inboundSchema` instead. */
  export const inboundSchema = ProjectsSortSortBy$inboundSchema;
  /** @deprecated use `ProjectsSortSortBy$outboundSchema` instead. */
  export const outboundSchema = ProjectsSortSortBy$outboundSchema;
}

/** @internal */
export const ProjectsSort$inboundSchema: z.ZodType<
  ProjectsSort,
  z.ZodTypeDef,
  unknown
> = z.object({
  by: ProjectsSortSortBy$inboundSchema.optional(),
  direction: SortDirection$inboundSchema.default("asc"),
});

/** @internal */
export type ProjectsSort$Outbound = {
  by?: string | undefined;
  direction: string;
};

/** @internal */
export const ProjectsSort$outboundSchema: z.ZodType<
  ProjectsSort$Outbound,
  z.ZodTypeDef,
  ProjectsSort
> = z.object({
  by: ProjectsSortSortBy$outboundSchema.optional(),
  direction: SortDirection$outboundSchema.default("asc"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProjectsSort$ {
  /** @deprecated use `ProjectsSort$inboundSchema` instead. */
  export const inboundSchema = ProjectsSort$inboundSchema;
  /** @deprecated use `ProjectsSort$outboundSchema` instead. */
  export const outboundSchema = ProjectsSort$outboundSchema;
  /** @deprecated use `ProjectsSort$Outbound` instead. */
  export type Outbound = ProjectsSort$Outbound;
}

export function projectsSortToJSON(projectsSort: ProjectsSort): string {
  return JSON.stringify(ProjectsSort$outboundSchema.parse(projectsSort));
}

export function projectsSortFromJSON(
  jsonString: string,
): SafeParseResult<ProjectsSort, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ProjectsSort$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ProjectsSort' from JSON`,
  );
}
