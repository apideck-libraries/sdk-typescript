/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  CustomMappings,
  CustomMappings$inboundSchema,
  CustomMappings$Outbound,
  CustomMappings$outboundSchema,
} from "./custommappings.js";
import {
  PassThroughBody,
  PassThroughBody$inboundSchema,
  PassThroughBody$Outbound,
  PassThroughBody$outboundSchema,
} from "./passthroughbody.js";

export type Tender = {
  /**
   * A unique identifier for an object.
   */
  id?: string | undefined;
  key?: string | null | undefined;
  label?: string | null | undefined;
  active?: boolean | null | undefined;
  hidden?: boolean | null | undefined;
  editable?: boolean | null | undefined;
  /**
   * If this tender opens the cash drawer
   */
  opensCashDrawer?: boolean | undefined;
  /**
   * Allow tipping on payment from tender
   */
  allowsTipping?: boolean | undefined;
  /**
   * When custom mappings are configured on the resource, the result is included here.
   */
  customMappings?: CustomMappings | null | undefined;
  /**
   * The user who last updated the object.
   */
  updatedBy?: string | null | undefined;
  /**
   * The user who created the object.
   */
  createdBy?: string | null | undefined;
  /**
   * The date and time when the object was last updated.
   */
  updatedAt?: Date | null | undefined;
  /**
   * The date and time when the object was created.
   */
  createdAt?: Date | null | undefined;
  /**
   * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
   */
  passThrough?: Array<PassThroughBody> | undefined;
};

/** @internal */
export const Tender$inboundSchema: z.ZodType<Tender, z.ZodTypeDef, unknown> = z
  .object({
    id: z.string().optional(),
    key: z.nullable(z.string()).optional(),
    label: z.nullable(z.string()).optional(),
    active: z.nullable(z.boolean()).optional(),
    hidden: z.nullable(z.boolean()).optional(),
    editable: z.nullable(z.boolean()).optional(),
    opens_cash_drawer: z.boolean().default(true),
    allows_tipping: z.boolean().default(true),
    custom_mappings: z.nullable(CustomMappings$inboundSchema).optional(),
    updated_by: z.nullable(z.string()).optional(),
    created_by: z.nullable(z.string()).optional(),
    updated_at: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ).optional(),
    created_at: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ).optional(),
    pass_through: z.array(PassThroughBody$inboundSchema).optional(),
  }).transform((v) => {
    return remap$(v, {
      "opens_cash_drawer": "opensCashDrawer",
      "allows_tipping": "allowsTipping",
      "custom_mappings": "customMappings",
      "updated_by": "updatedBy",
      "created_by": "createdBy",
      "updated_at": "updatedAt",
      "created_at": "createdAt",
      "pass_through": "passThrough",
    });
  });

/** @internal */
export type Tender$Outbound = {
  id?: string | undefined;
  key?: string | null | undefined;
  label?: string | null | undefined;
  active?: boolean | null | undefined;
  hidden?: boolean | null | undefined;
  editable?: boolean | null | undefined;
  opens_cash_drawer: boolean;
  allows_tipping: boolean;
  custom_mappings?: CustomMappings$Outbound | null | undefined;
  updated_by?: string | null | undefined;
  created_by?: string | null | undefined;
  updated_at?: string | null | undefined;
  created_at?: string | null | undefined;
  pass_through?: Array<PassThroughBody$Outbound> | undefined;
};

/** @internal */
export const Tender$outboundSchema: z.ZodType<
  Tender$Outbound,
  z.ZodTypeDef,
  Tender
> = z.object({
  id: z.string().optional(),
  key: z.nullable(z.string()).optional(),
  label: z.nullable(z.string()).optional(),
  active: z.nullable(z.boolean()).optional(),
  hidden: z.nullable(z.boolean()).optional(),
  editable: z.nullable(z.boolean()).optional(),
  opensCashDrawer: z.boolean().default(true),
  allowsTipping: z.boolean().default(true),
  customMappings: z.nullable(CustomMappings$outboundSchema).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  createdAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  passThrough: z.array(PassThroughBody$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    opensCashDrawer: "opens_cash_drawer",
    allowsTipping: "allows_tipping",
    customMappings: "custom_mappings",
    updatedBy: "updated_by",
    createdBy: "created_by",
    updatedAt: "updated_at",
    createdAt: "created_at",
    passThrough: "pass_through",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Tender$ {
  /** @deprecated use `Tender$inboundSchema` instead. */
  export const inboundSchema = Tender$inboundSchema;
  /** @deprecated use `Tender$outboundSchema` instead. */
  export const outboundSchema = Tender$outboundSchema;
  /** @deprecated use `Tender$Outbound` instead. */
  export type Outbound = Tender$Outbound;
}
