/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * [Connection state flow](#section/Connection-state)
 */
export const ConnectionState = {
  Available: "available",
  Callable: "callable",
  Added: "added",
  Authorized: "authorized",
  Invalid: "invalid",
} as const;
/**
 * [Connection state flow](#section/Connection-state)
 */
export type ConnectionState = ClosedEnum<typeof ConnectionState>;

/** @internal */
export const ConnectionState$inboundSchema: z.ZodNativeEnum<
  typeof ConnectionState
> = z.nativeEnum(ConnectionState);

/** @internal */
export const ConnectionState$outboundSchema: z.ZodNativeEnum<
  typeof ConnectionState
> = ConnectionState$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConnectionState$ {
  /** @deprecated use `ConnectionState$inboundSchema` instead. */
  export const inboundSchema = ConnectionState$inboundSchema;
  /** @deprecated use `ConnectionState$outboundSchema` instead. */
  export const outboundSchema = ConnectionState$outboundSchema;
}
