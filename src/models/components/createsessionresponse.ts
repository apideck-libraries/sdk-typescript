/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type CreateSessionResponseData = {
  sessionUri: string;
  sessionToken: string;
};

/**
 * Session created
 */
export type CreateSessionResponse = {
  /**
   * HTTP Response Status Code
   */
  statusCode: number;
  /**
   * HTTP Response Status
   */
  status: string;
  data: CreateSessionResponseData;
};

/** @internal */
export const CreateSessionResponseData$inboundSchema: z.ZodType<
  CreateSessionResponseData,
  z.ZodTypeDef,
  unknown
> = z.object({
  session_uri: z.string(),
  session_token: z.string(),
}).transform((v) => {
  return remap$(v, {
    "session_uri": "sessionUri",
    "session_token": "sessionToken",
  });
});

/** @internal */
export type CreateSessionResponseData$Outbound = {
  session_uri: string;
  session_token: string;
};

/** @internal */
export const CreateSessionResponseData$outboundSchema: z.ZodType<
  CreateSessionResponseData$Outbound,
  z.ZodTypeDef,
  CreateSessionResponseData
> = z.object({
  sessionUri: z.string(),
  sessionToken: z.string(),
}).transform((v) => {
  return remap$(v, {
    sessionUri: "session_uri",
    sessionToken: "session_token",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateSessionResponseData$ {
  /** @deprecated use `CreateSessionResponseData$inboundSchema` instead. */
  export const inboundSchema = CreateSessionResponseData$inboundSchema;
  /** @deprecated use `CreateSessionResponseData$outboundSchema` instead. */
  export const outboundSchema = CreateSessionResponseData$outboundSchema;
  /** @deprecated use `CreateSessionResponseData$Outbound` instead. */
  export type Outbound = CreateSessionResponseData$Outbound;
}

/** @internal */
export const CreateSessionResponse$inboundSchema: z.ZodType<
  CreateSessionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  status_code: z.number().int(),
  status: z.string(),
  data: z.lazy(() => CreateSessionResponseData$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "status_code": "statusCode",
  });
});

/** @internal */
export type CreateSessionResponse$Outbound = {
  status_code: number;
  status: string;
  data: CreateSessionResponseData$Outbound;
};

/** @internal */
export const CreateSessionResponse$outboundSchema: z.ZodType<
  CreateSessionResponse$Outbound,
  z.ZodTypeDef,
  CreateSessionResponse
> = z.object({
  statusCode: z.number().int(),
  status: z.string(),
  data: z.lazy(() => CreateSessionResponseData$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    statusCode: "status_code",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateSessionResponse$ {
  /** @deprecated use `CreateSessionResponse$inboundSchema` instead. */
  export const inboundSchema = CreateSessionResponse$inboundSchema;
  /** @deprecated use `CreateSessionResponse$outboundSchema` instead. */
  export const outboundSchema = CreateSessionResponse$outboundSchema;
  /** @deprecated use `CreateSessionResponse$Outbound` instead. */
  export type Outbound = CreateSessionResponse$Outbound;
}
