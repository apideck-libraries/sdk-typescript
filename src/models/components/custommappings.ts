/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * When custom mappings are configured on the resource, the result is included here.
 */
export type CustomMappings = {};

/** @internal */
export const CustomMappings$inboundSchema: z.ZodType<
  CustomMappings,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CustomMappings$Outbound = {};

/** @internal */
export const CustomMappings$outboundSchema: z.ZodType<
  CustomMappings$Outbound,
  z.ZodTypeDef,
  CustomMappings
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomMappings$ {
  /** @deprecated use `CustomMappings$inboundSchema` instead. */
  export const inboundSchema = CustomMappings$inboundSchema;
  /** @deprecated use `CustomMappings$outboundSchema` instead. */
  export const outboundSchema = CustomMappings$outboundSchema;
  /** @deprecated use `CustomMappings$Outbound` instead. */
  export type Outbound = CustomMappings$Outbound;
}

export function customMappingsToJSON(customMappings: CustomMappings): string {
  return JSON.stringify(CustomMappings$outboundSchema.parse(customMappings));
}

export function customMappingsFromJSON(
  jsonString: string,
): SafeParseResult<CustomMappings, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CustomMappings$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CustomMappings' from JSON`,
  );
}
