/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  Connection,
  Connection$inboundSchema,
  Connection$Outbound,
  Connection$outboundSchema,
} from "./connection.js";

/**
 * Connection created
 */
export type CreateConnectionResponse = {
  /**
   * HTTP Response Status Code
   */
  statusCode: number;
  /**
   * HTTP Response Status
   */
  status: string;
  data: Connection;
};

/** @internal */
export const CreateConnectionResponse$inboundSchema: z.ZodType<
  CreateConnectionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  status_code: z.number().int(),
  status: z.string(),
  data: Connection$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "status_code": "statusCode",
  });
});

/** @internal */
export type CreateConnectionResponse$Outbound = {
  status_code: number;
  status: string;
  data: Connection$Outbound;
};

/** @internal */
export const CreateConnectionResponse$outboundSchema: z.ZodType<
  CreateConnectionResponse$Outbound,
  z.ZodTypeDef,
  CreateConnectionResponse
> = z.object({
  statusCode: z.number().int(),
  status: z.string(),
  data: Connection$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    statusCode: "status_code",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateConnectionResponse$ {
  /** @deprecated use `CreateConnectionResponse$inboundSchema` instead. */
  export const inboundSchema = CreateConnectionResponse$inboundSchema;
  /** @deprecated use `CreateConnectionResponse$outboundSchema` instead. */
  export const outboundSchema = CreateConnectionResponse$outboundSchema;
  /** @deprecated use `CreateConnectionResponse$Outbound` instead. */
  export type Outbound = CreateConnectionResponse$Outbound;
}
