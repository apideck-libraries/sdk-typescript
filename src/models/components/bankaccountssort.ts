/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  SortDirection,
  SortDirection$inboundSchema,
  SortDirection$outboundSchema,
} from "./sortdirection.js";

/**
 * The field to sort by
 */
export const SortBy = {
  CreatedAt: "created_at",
  UpdatedAt: "updated_at",
} as const;
/**
 * The field to sort by
 */
export type SortBy = ClosedEnum<typeof SortBy>;

export type BankAccountsSort = {
  /**
   * The field to sort by
   */
  by?: SortBy | undefined;
  /**
   * The direction in which to sort the results
   */
  direction?: SortDirection | undefined;
};

/** @internal */
export const SortBy$inboundSchema: z.ZodNativeEnum<typeof SortBy> = z
  .nativeEnum(SortBy);

/** @internal */
export const SortBy$outboundSchema: z.ZodNativeEnum<typeof SortBy> =
  SortBy$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SortBy$ {
  /** @deprecated use `SortBy$inboundSchema` instead. */
  export const inboundSchema = SortBy$inboundSchema;
  /** @deprecated use `SortBy$outboundSchema` instead. */
  export const outboundSchema = SortBy$outboundSchema;
}

/** @internal */
export const BankAccountsSort$inboundSchema: z.ZodType<
  BankAccountsSort,
  z.ZodTypeDef,
  unknown
> = z.object({
  by: SortBy$inboundSchema.default("updated_at"),
  direction: SortDirection$inboundSchema.default("asc"),
});

/** @internal */
export type BankAccountsSort$Outbound = {
  by: string;
  direction: string;
};

/** @internal */
export const BankAccountsSort$outboundSchema: z.ZodType<
  BankAccountsSort$Outbound,
  z.ZodTypeDef,
  BankAccountsSort
> = z.object({
  by: SortBy$outboundSchema.default("updated_at"),
  direction: SortDirection$outboundSchema.default("asc"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BankAccountsSort$ {
  /** @deprecated use `BankAccountsSort$inboundSchema` instead. */
  export const inboundSchema = BankAccountsSort$inboundSchema;
  /** @deprecated use `BankAccountsSort$outboundSchema` instead. */
  export const outboundSchema = BankAccountsSort$outboundSchema;
  /** @deprecated use `BankAccountsSort$Outbound` instead. */
  export type Outbound = BankAccountsSort$Outbound;
}

export function bankAccountsSortToJSON(
  bankAccountsSort: BankAccountsSort,
): string {
  return JSON.stringify(
    BankAccountsSort$outboundSchema.parse(bankAccountsSort),
  );
}

export function bankAccountsSortFromJSON(
  jsonString: string,
): SafeParseResult<BankAccountsSort, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BankAccountsSort$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BankAccountsSort' from JSON`,
  );
}
