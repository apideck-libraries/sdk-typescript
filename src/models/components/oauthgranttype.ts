/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { ClosedEnum } from "../../types/enums.js";

/**
 * OAuth grant type used by the connector. More info: https://oauth.net/2/grant-types
 */
export const OAuthGrantType = {
  AuthorizationCode: "authorization_code",
  ClientCredentials: "client_credentials",
  Password: "password",
} as const;
/**
 * OAuth grant type used by the connector. More info: https://oauth.net/2/grant-types
 */
export type OAuthGrantType = ClosedEnum<typeof OAuthGrantType>;

/** @internal */
export const OAuthGrantType$inboundSchema: z.ZodNativeEnum<
  typeof OAuthGrantType
> = z.nativeEnum(OAuthGrantType);

/** @internal */
export const OAuthGrantType$outboundSchema: z.ZodNativeEnum<
  typeof OAuthGrantType
> = OAuthGrantType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OAuthGrantType$ {
  /** @deprecated use `OAuthGrantType$inboundSchema` instead. */
  export const inboundSchema = OAuthGrantType$inboundSchema;
  /** @deprecated use `OAuthGrantType$outboundSchema` instead. */
  export const outboundSchema = OAuthGrantType$outboundSchema;
}
