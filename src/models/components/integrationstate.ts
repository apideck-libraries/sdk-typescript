/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The current state of the Integration.
 */
export const IntegrationState = {
  Disabled: "disabled",
  NeedsConfiguration: "needs_configuration",
  Configured: "configured",
} as const;
/**
 * The current state of the Integration.
 */
export type IntegrationState = ClosedEnum<typeof IntegrationState>;

/** @internal */
export const IntegrationState$inboundSchema: z.ZodNativeEnum<
  typeof IntegrationState
> = z.nativeEnum(IntegrationState);

/** @internal */
export const IntegrationState$outboundSchema: z.ZodNativeEnum<
  typeof IntegrationState
> = IntegrationState$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IntegrationState$ {
  /** @deprecated use `IntegrationState$inboundSchema` instead. */
  export const inboundSchema = IntegrationState$inboundSchema;
  /** @deprecated use `IntegrationState$outboundSchema` instead. */
  export const outboundSchema = IntegrationState$outboundSchema;
}
