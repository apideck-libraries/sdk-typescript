/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type SubsidiaryReferenceInput = {
  /**
   * The name of the company.
   */
  name?: string | null | undefined;
};

/** @internal */
export const SubsidiaryReferenceInput$inboundSchema: z.ZodType<
  SubsidiaryReferenceInput,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.nullable(z.string()).optional(),
});

/** @internal */
export type SubsidiaryReferenceInput$Outbound = {
  name?: string | null | undefined;
};

/** @internal */
export const SubsidiaryReferenceInput$outboundSchema: z.ZodType<
  SubsidiaryReferenceInput$Outbound,
  z.ZodTypeDef,
  SubsidiaryReferenceInput
> = z.object({
  name: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SubsidiaryReferenceInput$ {
  /** @deprecated use `SubsidiaryReferenceInput$inboundSchema` instead. */
  export const inboundSchema = SubsidiaryReferenceInput$inboundSchema;
  /** @deprecated use `SubsidiaryReferenceInput$outboundSchema` instead. */
  export const outboundSchema = SubsidiaryReferenceInput$outboundSchema;
  /** @deprecated use `SubsidiaryReferenceInput$Outbound` instead. */
  export type Outbound = SubsidiaryReferenceInput$Outbound;
}
