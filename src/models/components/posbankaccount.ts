/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * ACH-specific details about `BANK_ACCOUNT` type payments with the `transfer_type` of `ACH`.
 */
export type AchDetails = {
  /**
   * The routing number for the bank account.
   */
  routingNumber?: string | undefined;
  /**
   * The last few digits of the bank account number.
   */
  accountNumberSuffix?: string | undefined;
  /**
   * The type of the bank account performing the transfer. The account type can be `CHECKING`,
   *
   * @remarks
   * `SAVINGS`, or `UNKNOWN`.
   */
  accountType?: string | undefined;
};

/**
 * Card details for this payment. This field is currently not available. Reach out to our team for more info.
 */
export type PosBankAccount = {
  /**
   * The name of the bank associated with the bank account.
   */
  bankName?: string | undefined;
  /**
   * The type of the bank transfer. The type can be `ACH` or `UNKNOWN`.
   */
  transferType?: string | undefined;
  /**
   * The ownership type of the bank account performing the transfer.
   *
   * @remarks
   * The type can be `INDIVIDUAL`, `COMPANY`, or `UNKNOWN`.
   */
  accountOwnershipType?: string | undefined;
  /**
   * Uniquely identifies the bank account for this seller and can be used
   *
   * @remarks
   * to determine if payments are from the same bank account.
   */
  fingerprint?: string | undefined;
  /**
   * Country code according to ISO 3166-1 alpha-2.
   */
  country?: string | null | undefined;
  /**
   * The statement description as sent to the bank.
   */
  statementDescription?: string | undefined;
  /**
   * ACH-specific details about `BANK_ACCOUNT` type payments with the `transfer_type` of `ACH`.
   */
  achDetails?: AchDetails | undefined;
};

/** @internal */
export const AchDetails$inboundSchema: z.ZodType<
  AchDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  routing_number: z.string().optional(),
  account_number_suffix: z.string().optional(),
  account_type: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "routing_number": "routingNumber",
    "account_number_suffix": "accountNumberSuffix",
    "account_type": "accountType",
  });
});

/** @internal */
export type AchDetails$Outbound = {
  routing_number?: string | undefined;
  account_number_suffix?: string | undefined;
  account_type?: string | undefined;
};

/** @internal */
export const AchDetails$outboundSchema: z.ZodType<
  AchDetails$Outbound,
  z.ZodTypeDef,
  AchDetails
> = z.object({
  routingNumber: z.string().optional(),
  accountNumberSuffix: z.string().optional(),
  accountType: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    routingNumber: "routing_number",
    accountNumberSuffix: "account_number_suffix",
    accountType: "account_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AchDetails$ {
  /** @deprecated use `AchDetails$inboundSchema` instead. */
  export const inboundSchema = AchDetails$inboundSchema;
  /** @deprecated use `AchDetails$outboundSchema` instead. */
  export const outboundSchema = AchDetails$outboundSchema;
  /** @deprecated use `AchDetails$Outbound` instead. */
  export type Outbound = AchDetails$Outbound;
}

/** @internal */
export const PosBankAccount$inboundSchema: z.ZodType<
  PosBankAccount,
  z.ZodTypeDef,
  unknown
> = z.object({
  bank_name: z.string().optional(),
  transfer_type: z.string().optional(),
  account_ownership_type: z.string().optional(),
  fingerprint: z.string().optional(),
  country: z.nullable(z.string()).optional(),
  statement_description: z.string().optional(),
  ach_details: z.lazy(() => AchDetails$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "bank_name": "bankName",
    "transfer_type": "transferType",
    "account_ownership_type": "accountOwnershipType",
    "statement_description": "statementDescription",
    "ach_details": "achDetails",
  });
});

/** @internal */
export type PosBankAccount$Outbound = {
  bank_name?: string | undefined;
  transfer_type?: string | undefined;
  account_ownership_type?: string | undefined;
  fingerprint?: string | undefined;
  country?: string | null | undefined;
  statement_description?: string | undefined;
  ach_details?: AchDetails$Outbound | undefined;
};

/** @internal */
export const PosBankAccount$outboundSchema: z.ZodType<
  PosBankAccount$Outbound,
  z.ZodTypeDef,
  PosBankAccount
> = z.object({
  bankName: z.string().optional(),
  transferType: z.string().optional(),
  accountOwnershipType: z.string().optional(),
  fingerprint: z.string().optional(),
  country: z.nullable(z.string()).optional(),
  statementDescription: z.string().optional(),
  achDetails: z.lazy(() => AchDetails$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    bankName: "bank_name",
    transferType: "transfer_type",
    accountOwnershipType: "account_ownership_type",
    statementDescription: "statement_description",
    achDetails: "ach_details",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosBankAccount$ {
  /** @deprecated use `PosBankAccount$inboundSchema` instead. */
  export const inboundSchema = PosBankAccount$inboundSchema;
  /** @deprecated use `PosBankAccount$outboundSchema` instead. */
  export const outboundSchema = PosBankAccount$outboundSchema;
  /** @deprecated use `PosBankAccount$Outbound` instead. */
  export type Outbound = PosBankAccount$Outbound;
}
