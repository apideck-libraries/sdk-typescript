/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type Assignee = {
  /**
   * A unique identifier for an object.
   */
  id: string;
  username?: string | null | undefined;
};

/** @internal */
export const Assignee$inboundSchema: z.ZodType<
  Assignee,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  username: z.nullable(z.string()).optional(),
});

/** @internal */
export type Assignee$Outbound = {
  id: string;
  username?: string | null | undefined;
};

/** @internal */
export const Assignee$outboundSchema: z.ZodType<
  Assignee$Outbound,
  z.ZodTypeDef,
  Assignee
> = z.object({
  id: z.string(),
  username: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Assignee$ {
  /** @deprecated use `Assignee$inboundSchema` instead. */
  export const inboundSchema = Assignee$inboundSchema;
  /** @deprecated use `Assignee$outboundSchema` instead. */
  export const outboundSchema = Assignee$outboundSchema;
  /** @deprecated use `Assignee$Outbound` instead. */
  export type Outbound = Assignee$Outbound;
}
