/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  BalanceByPeriod,
  BalanceByPeriod$inboundSchema,
  BalanceByPeriod$Outbound,
  BalanceByPeriod$outboundSchema,
} from "./balancebyperiod.js";
import {
  Currency,
  Currency$inboundSchema,
  Currency$outboundSchema,
} from "./currency.js";

export type OutstandingBalanceByCurrency = {
  /**
   * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   */
  currency?: Currency | null | undefined;
  balancesByPeriod?: Array<BalanceByPeriod> | undefined;
};

/** @internal */
export const OutstandingBalanceByCurrency$inboundSchema: z.ZodType<
  OutstandingBalanceByCurrency,
  z.ZodTypeDef,
  unknown
> = z.object({
  currency: z.nullable(Currency$inboundSchema).optional(),
  balances_by_period: z.array(BalanceByPeriod$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "balances_by_period": "balancesByPeriod",
  });
});

/** @internal */
export type OutstandingBalanceByCurrency$Outbound = {
  currency?: string | null | undefined;
  balances_by_period?: Array<BalanceByPeriod$Outbound> | undefined;
};

/** @internal */
export const OutstandingBalanceByCurrency$outboundSchema: z.ZodType<
  OutstandingBalanceByCurrency$Outbound,
  z.ZodTypeDef,
  OutstandingBalanceByCurrency
> = z.object({
  currency: z.nullable(Currency$outboundSchema).optional(),
  balancesByPeriod: z.array(BalanceByPeriod$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    balancesByPeriod: "balances_by_period",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OutstandingBalanceByCurrency$ {
  /** @deprecated use `OutstandingBalanceByCurrency$inboundSchema` instead. */
  export const inboundSchema = OutstandingBalanceByCurrency$inboundSchema;
  /** @deprecated use `OutstandingBalanceByCurrency$outboundSchema` instead. */
  export const outboundSchema = OutstandingBalanceByCurrency$outboundSchema;
  /** @deprecated use `OutstandingBalanceByCurrency$Outbound` instead. */
  export type Outbound = OutstandingBalanceByCurrency$Outbound;
}

export function outstandingBalanceByCurrencyToJSON(
  outstandingBalanceByCurrency: OutstandingBalanceByCurrency,
): string {
  return JSON.stringify(
    OutstandingBalanceByCurrency$outboundSchema.parse(
      outstandingBalanceByCurrency,
    ),
  );
}

export function outstandingBalanceByCurrencyFromJSON(
  jsonString: string,
): SafeParseResult<OutstandingBalanceByCurrency, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OutstandingBalanceByCurrency$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OutstandingBalanceByCurrency' from JSON`,
  );
}
