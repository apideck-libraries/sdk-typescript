/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type CollectionTagInput = {
  /**
   * A unique identifier for an object.
   */
  id: string | null;
};

/** @internal */
export const CollectionTagInput$inboundSchema: z.ZodType<
  CollectionTagInput,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()),
});

/** @internal */
export type CollectionTagInput$Outbound = {
  id: string | null;
};

/** @internal */
export const CollectionTagInput$outboundSchema: z.ZodType<
  CollectionTagInput$Outbound,
  z.ZodTypeDef,
  CollectionTagInput
> = z.object({
  id: z.nullable(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CollectionTagInput$ {
  /** @deprecated use `CollectionTagInput$inboundSchema` instead. */
  export const inboundSchema = CollectionTagInput$inboundSchema;
  /** @deprecated use `CollectionTagInput$outboundSchema` instead. */
  export const outboundSchema = CollectionTagInput$outboundSchema;
  /** @deprecated use `CollectionTagInput$Outbound` instead. */
  export type Outbound = CollectionTagInput$Outbound;
}
