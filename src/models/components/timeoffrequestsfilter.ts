/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Time off request status to filter on
 */
export const TimeOffRequestStatus = {
  Requested: "requested",
  Approved: "approved",
  Declined: "declined",
  Cancelled: "cancelled",
  Deleted: "deleted",
  Other: "other",
} as const;
/**
 * Time off request status to filter on
 */
export type TimeOffRequestStatus = ClosedEnum<typeof TimeOffRequestStatus>;

export type TimeOffRequestsFilter = {
  /**
   * Start date of the date range to filter time off requests. When used with end_date, filters for requests within the specified date range.
   */
  startDate?: string | undefined;
  /**
   * End date of the date range to filter time off requests. When used with start_date, filters for requests within the specified date range.
   */
  endDate?: string | undefined;
  /**
   * Minimum date the time off request was last created or modified
   */
  updatedSince?: string | undefined;
  /**
   * Employee ID
   */
  employeeId?: string | undefined;
  /**
   * Time off request status to filter on
   */
  timeOffRequestStatus?: TimeOffRequestStatus | undefined;
  /**
   * Company ID
   */
  companyId?: string | undefined;
};

/** @internal */
export const TimeOffRequestStatus$inboundSchema: z.ZodNativeEnum<
  typeof TimeOffRequestStatus
> = z.nativeEnum(TimeOffRequestStatus);

/** @internal */
export const TimeOffRequestStatus$outboundSchema: z.ZodNativeEnum<
  typeof TimeOffRequestStatus
> = TimeOffRequestStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TimeOffRequestStatus$ {
  /** @deprecated use `TimeOffRequestStatus$inboundSchema` instead. */
  export const inboundSchema = TimeOffRequestStatus$inboundSchema;
  /** @deprecated use `TimeOffRequestStatus$outboundSchema` instead. */
  export const outboundSchema = TimeOffRequestStatus$outboundSchema;
}

/** @internal */
export const TimeOffRequestsFilter$inboundSchema: z.ZodType<
  TimeOffRequestsFilter,
  z.ZodTypeDef,
  unknown
> = z.object({
  start_date: z.string().optional(),
  end_date: z.string().optional(),
  updated_since: z.string().optional(),
  employee_id: z.string().optional(),
  time_off_request_status: TimeOffRequestStatus$inboundSchema.optional(),
  company_id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "start_date": "startDate",
    "end_date": "endDate",
    "updated_since": "updatedSince",
    "employee_id": "employeeId",
    "time_off_request_status": "timeOffRequestStatus",
    "company_id": "companyId",
  });
});

/** @internal */
export type TimeOffRequestsFilter$Outbound = {
  start_date?: string | undefined;
  end_date?: string | undefined;
  updated_since?: string | undefined;
  employee_id?: string | undefined;
  time_off_request_status?: string | undefined;
  company_id?: string | undefined;
};

/** @internal */
export const TimeOffRequestsFilter$outboundSchema: z.ZodType<
  TimeOffRequestsFilter$Outbound,
  z.ZodTypeDef,
  TimeOffRequestsFilter
> = z.object({
  startDate: z.string().optional(),
  endDate: z.string().optional(),
  updatedSince: z.string().optional(),
  employeeId: z.string().optional(),
  timeOffRequestStatus: TimeOffRequestStatus$outboundSchema.optional(),
  companyId: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    startDate: "start_date",
    endDate: "end_date",
    updatedSince: "updated_since",
    employeeId: "employee_id",
    timeOffRequestStatus: "time_off_request_status",
    companyId: "company_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TimeOffRequestsFilter$ {
  /** @deprecated use `TimeOffRequestsFilter$inboundSchema` instead. */
  export const inboundSchema = TimeOffRequestsFilter$inboundSchema;
  /** @deprecated use `TimeOffRequestsFilter$outboundSchema` instead. */
  export const outboundSchema = TimeOffRequestsFilter$outboundSchema;
  /** @deprecated use `TimeOffRequestsFilter$Outbound` instead. */
  export type Outbound = TimeOffRequestsFilter$Outbound;
}

export function timeOffRequestsFilterToJSON(
  timeOffRequestsFilter: TimeOffRequestsFilter,
): string {
  return JSON.stringify(
    TimeOffRequestsFilter$outboundSchema.parse(timeOffRequestsFilter),
  );
}

export function timeOffRequestsFilterFromJSON(
  jsonString: string,
): SafeParseResult<TimeOffRequestsFilter, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TimeOffRequestsFilter$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TimeOffRequestsFilter' from JSON`,
  );
}
