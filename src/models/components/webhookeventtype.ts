/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { ClosedEnum } from "../../types/enums.js";

export const WebhookEventType = {
  Wildcard: "*",
  CrmActivityCreated: "crm.activity.created",
  CrmActivityUpdated: "crm.activity.updated",
  CrmActivityDeleted: "crm.activity.deleted",
  CrmCompanyCreated: "crm.company.created",
  CrmCompanyUpdated: "crm.company.updated",
  CrmCompanyDeleted: "crm.company.deleted",
  CrmContactCreated: "crm.contact.created",
  CrmContactUpdated: "crm.contact.updated",
  CrmContactDeleted: "crm.contact.deleted",
  CrmLeadCreated: "crm.lead.created",
  CrmLeadUpdated: "crm.lead.updated",
  CrmLeadDeleted: "crm.lead.deleted",
  CrmNoteCreated: "crm.note.created",
  CrmNoteUpdated: "crm.note.updated",
  CrmNoteDeleted: "crm.note.deleted",
  CrmOpportunityCreated: "crm.opportunity.created",
  CrmOpportunityUpdated: "crm.opportunity.updated",
  CrmOpportunityDeleted: "crm.opportunity.deleted",
  LeadLeadCreated: "lead.lead.created",
  LeadLeadUpdated: "lead.lead.updated",
  LeadLeadDeleted: "lead.lead.deleted",
  VaultConnectionCreated: "vault.connection.created",
  VaultConnectionUpdated: "vault.connection.updated",
  VaultConnectionDisabled: "vault.connection.disabled",
  VaultConnectionDeleted: "vault.connection.deleted",
  VaultConnectionCallable: "vault.connection.callable",
  VaultConnectionRevoked: "vault.connection.revoked",
  VaultConnectionTokenRefreshFailed: "vault.connection.token_refresh.failed",
  AtsJobCreated: "ats.job.created",
  AtsJobUpdated: "ats.job.updated",
  AtsJobDeleted: "ats.job.deleted",
  AtsApplicantCreated: "ats.applicant.created",
  AtsApplicantUpdated: "ats.applicant.updated",
  AtsApplicantDeleted: "ats.applicant.deleted",
  AccountingCustomerCreated: "accounting.customer.created",
  AccountingCustomerUpdated: "accounting.customer.updated",
  AccountingCustomerDeleted: "accounting.customer.deleted",
  AccountingInvoiceCreated: "accounting.invoice.created",
  AccountingInvoiceUpdated: "accounting.invoice.updated",
  AccountingInvoiceDeleted: "accounting.invoice.deleted",
  AccountingInvoiceItemCreated: "accounting.invoice_item.created",
  AccountingInvoiceItemUpdated: "accounting.invoice_item.updated",
  AccountingInvoiceItemDeleted: "accounting.invoice_item.deleted",
  AccountingLedgerAccountCreated: "accounting.ledger_account.created",
  AccountingLedgerAccountUpdated: "accounting.ledger_account.updated",
  AccountingLedgerAccountDeleted: "accounting.ledger_account.deleted",
  AccountingTaxRateCreated: "accounting.tax_rate.created",
  AccountingTaxRateUpdated: "accounting.tax_rate.updated",
  AccountingTaxRateDeleted: "accounting.tax_rate.deleted",
  AccountingBillCreated: "accounting.bill.created",
  AccountingBillUpdated: "accounting.bill.updated",
  AccountingBillDeleted: "accounting.bill.deleted",
  AccountingPaymentCreated: "accounting.payment.created",
  AccountingPaymentUpdated: "accounting.payment.updated",
  AccountingPaymentDeleted: "accounting.payment.deleted",
  AccountingSupplierCreated: "accounting.supplier.created",
  AccountingSupplierUpdated: "accounting.supplier.updated",
  AccountingSupplierDeleted: "accounting.supplier.deleted",
  AccountingPurchaseOrderCreated: "accounting.purchase_order.created",
  AccountingPurchaseOrderUpdated: "accounting.purchase_order.updated",
  AccountingPurchaseOrderDeleted: "accounting.purchase_order.deleted",
  AccountingCreditNoteCreated: "accounting.credit_note.created",
  AccountingCreditNoteUpdated: "accounting.credit_note.updated",
  AccountingCreditNoteDeleted: "accounting.credit_note.deleted",
  PosOrderCreated: "pos.order.created",
  PosOrderUpdated: "pos.order.updated",
  PosOrderDeleted: "pos.order.deleted",
  PosProductCreated: "pos.product.created",
  PosProductUpdated: "pos.product.updated",
  PosProductDeleted: "pos.product.deleted",
  PosPaymentCreated: "pos.payment.created",
  PosPaymentUpdated: "pos.payment.updated",
  PosPaymentDeleted: "pos.payment.deleted",
  PosMerchantCreated: "pos.merchant.created",
  PosMerchantUpdated: "pos.merchant.updated",
  PosMerchantDeleted: "pos.merchant.deleted",
  PosLocationCreated: "pos.location.created",
  PosLocationUpdated: "pos.location.updated",
  PosLocationDeleted: "pos.location.deleted",
  PosItemCreated: "pos.item.created",
  PosItemUpdated: "pos.item.updated",
  PosItemDeleted: "pos.item.deleted",
  PosModifierCreated: "pos.modifier.created",
  PosModifierUpdated: "pos.modifier.updated",
  PosModifierDeleted: "pos.modifier.deleted",
  PosModifierGroupCreated: "pos.modifier-group.created",
  PosModifierGroupUpdated: "pos.modifier-group.updated",
  PosModifierGroupDeleted: "pos.modifier-group.deleted",
  HrisEmployeeCreated: "hris.employee.created",
  HrisEmployeeUpdated: "hris.employee.updated",
  HrisEmployeeDeleted: "hris.employee.deleted",
  HrisEmployeeTerminated: "hris.employee.terminated",
  HrisCompanyCreated: "hris.company.created",
  HrisCompanyUpdated: "hris.company.updated",
  HrisCompanyDeleted: "hris.company.deleted",
  FileStorageFileCreated: "file-storage.file.created",
  FileStorageFileUpdated: "file-storage.file.updated",
  FileStorageFileDeleted: "file-storage.file.deleted",
  FileStorageDriveUpdated: "file-storage.drive.updated",
  IssueTrackingTicketCreated: "issue-tracking.ticket.created",
  IssueTrackingTicketUpdated: "issue-tracking.ticket.updated",
  IssueTrackingTicketDeleted: "issue-tracking.ticket.deleted",
  AtsApplicationCreated: "ats.application.created",
  AtsApplicationUpdated: "ats.application.updated",
  AtsApplicationDeleted: "ats.application.deleted",
  AccountingExpenseCreated: "accounting.expense.created",
  AccountingExpenseUpdated: "accounting.expense.updated",
  AccountingExpenseDeleted: "accounting.expense.deleted",
  EcommerceOrderCreated: "ecommerce.order.created",
  EcommerceOrderUpdated: "ecommerce.order.updated",
  EcommerceOrderDeleted: "ecommerce.order.deleted",
  EcommerceProductCreated: "ecommerce.product.created",
  EcommerceProductUpdated: "ecommerce.product.updated",
  EcommerceProductDeleted: "ecommerce.product.deleted",
  EcommerceCustomerCreated: "ecommerce.customer.created",
  EcommerceCustomerUpdated: "ecommerce.customer.updated",
  EcommerceCustomerDeleted: "ecommerce.customer.deleted",
  AccountingQuoteCreated: "accounting.quote.created",
  AccountingQuoteUpdated: "accounting.quote.updated",
  AccountingQuoteDeleted: "accounting.quote.deleted",
  AccountingProjectCreated: "accounting.project.created",
  AccountingProjectUpdated: "accounting.project.updated",
  AccountingProjectDeleted: "accounting.project.deleted",
} as const;
export type WebhookEventType = ClosedEnum<typeof WebhookEventType>;

/** @internal */
export const WebhookEventType$inboundSchema: z.ZodNativeEnum<
  typeof WebhookEventType
> = z.nativeEnum(WebhookEventType);

/** @internal */
export const WebhookEventType$outboundSchema: z.ZodNativeEnum<
  typeof WebhookEventType
> = WebhookEventType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookEventType$ {
  /** @deprecated use `WebhookEventType$inboundSchema` instead. */
  export const inboundSchema = WebhookEventType$inboundSchema;
  /** @deprecated use `WebhookEventType$outboundSchema` instead. */
  export const outboundSchema = WebhookEventType$outboundSchema;
}
