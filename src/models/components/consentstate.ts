/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The current consent state of the connection
 */
export const ConsentState = {
  Implicit: "implicit",
  Pending: "pending",
  Granted: "granted",
  Denied: "denied",
  Revoked: "revoked",
  RequiresReconsent: "requires_reconsent",
} as const;
/**
 * The current consent state of the connection
 */
export type ConsentState = ClosedEnum<typeof ConsentState>;

/** @internal */
export const ConsentState$inboundSchema: z.ZodNativeEnum<typeof ConsentState> =
  z.nativeEnum(ConsentState);

/** @internal */
export const ConsentState$outboundSchema: z.ZodNativeEnum<typeof ConsentState> =
  ConsentState$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsentState$ {
  /** @deprecated use `ConsentState$inboundSchema` instead. */
  export const inboundSchema = ConsentState$inboundSchema;
  /** @deprecated use `ConsentState$outboundSchema` instead. */
  export const outboundSchema = ConsentState$outboundSchema;
}
