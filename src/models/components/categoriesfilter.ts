/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The type of the category.
 */
export const CategoriesFilterType = {
  Supplier: "supplier",
  Expense: "expense",
  Revenue: "revenue",
  Customer: "customer",
} as const;
/**
 * The type of the category.
 */
export type CategoriesFilterType = ClosedEnum<typeof CategoriesFilterType>;

export type CategoriesFilter = {
  /**
   * The type of the category.
   */
  type?: CategoriesFilterType | undefined;
};

/** @internal */
export const CategoriesFilterType$inboundSchema: z.ZodNativeEnum<
  typeof CategoriesFilterType
> = z.nativeEnum(CategoriesFilterType);

/** @internal */
export const CategoriesFilterType$outboundSchema: z.ZodNativeEnum<
  typeof CategoriesFilterType
> = CategoriesFilterType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CategoriesFilterType$ {
  /** @deprecated use `CategoriesFilterType$inboundSchema` instead. */
  export const inboundSchema = CategoriesFilterType$inboundSchema;
  /** @deprecated use `CategoriesFilterType$outboundSchema` instead. */
  export const outboundSchema = CategoriesFilterType$outboundSchema;
}

/** @internal */
export const CategoriesFilter$inboundSchema: z.ZodType<
  CategoriesFilter,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CategoriesFilterType$inboundSchema.optional(),
});

/** @internal */
export type CategoriesFilter$Outbound = {
  type?: string | undefined;
};

/** @internal */
export const CategoriesFilter$outboundSchema: z.ZodType<
  CategoriesFilter$Outbound,
  z.ZodTypeDef,
  CategoriesFilter
> = z.object({
  type: CategoriesFilterType$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CategoriesFilter$ {
  /** @deprecated use `CategoriesFilter$inboundSchema` instead. */
  export const inboundSchema = CategoriesFilter$inboundSchema;
  /** @deprecated use `CategoriesFilter$outboundSchema` instead. */
  export const outboundSchema = CategoriesFilter$outboundSchema;
  /** @deprecated use `CategoriesFilter$Outbound` instead. */
  export type Outbound = CategoriesFilter$Outbound;
}

export function categoriesFilterToJSON(
  categoriesFilter: CategoriesFilter,
): string {
  return JSON.stringify(
    CategoriesFilter$outboundSchema.parse(categoriesFilter),
  );
}

export function categoriesFilterFromJSON(
  jsonString: string,
): SafeParseResult<CategoriesFilter, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CategoriesFilter$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CategoriesFilter' from JSON`,
  );
}
