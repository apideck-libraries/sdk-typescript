/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type HrisEmployeesAddGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type HrisEmployeesAddRequest = {
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  employee: components.EmployeeInput;
};

export type HrisEmployeesAddResponse =
  | components.CreateEmployeeResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const HrisEmployeesAddGlobals$inboundSchema: z.ZodType<
  HrisEmployeesAddGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type HrisEmployeesAddGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const HrisEmployeesAddGlobals$outboundSchema: z.ZodType<
  HrisEmployeesAddGlobals$Outbound,
  z.ZodTypeDef,
  HrisEmployeesAddGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisEmployeesAddGlobals$ {
  /** @deprecated use `HrisEmployeesAddGlobals$inboundSchema` instead. */
  export const inboundSchema = HrisEmployeesAddGlobals$inboundSchema;
  /** @deprecated use `HrisEmployeesAddGlobals$outboundSchema` instead. */
  export const outboundSchema = HrisEmployeesAddGlobals$outboundSchema;
  /** @deprecated use `HrisEmployeesAddGlobals$Outbound` instead. */
  export type Outbound = HrisEmployeesAddGlobals$Outbound;
}

/** @internal */
export const HrisEmployeesAddRequest$inboundSchema: z.ZodType<
  HrisEmployeesAddRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  Employee: components.EmployeeInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Employee": "employee",
  });
});

/** @internal */
export type HrisEmployeesAddRequest$Outbound = {
  raw: boolean;
  serviceId?: string | undefined;
  Employee: components.EmployeeInput$Outbound;
};

/** @internal */
export const HrisEmployeesAddRequest$outboundSchema: z.ZodType<
  HrisEmployeesAddRequest$Outbound,
  z.ZodTypeDef,
  HrisEmployeesAddRequest
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  employee: components.EmployeeInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    employee: "Employee",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisEmployeesAddRequest$ {
  /** @deprecated use `HrisEmployeesAddRequest$inboundSchema` instead. */
  export const inboundSchema = HrisEmployeesAddRequest$inboundSchema;
  /** @deprecated use `HrisEmployeesAddRequest$outboundSchema` instead. */
  export const outboundSchema = HrisEmployeesAddRequest$outboundSchema;
  /** @deprecated use `HrisEmployeesAddRequest$Outbound` instead. */
  export type Outbound = HrisEmployeesAddRequest$Outbound;
}

/** @internal */
export const HrisEmployeesAddResponse$inboundSchema: z.ZodType<
  HrisEmployeesAddResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.CreateEmployeeResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type HrisEmployeesAddResponse$Outbound =
  | components.CreateEmployeeResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const HrisEmployeesAddResponse$outboundSchema: z.ZodType<
  HrisEmployeesAddResponse$Outbound,
  z.ZodTypeDef,
  HrisEmployeesAddResponse
> = z.union([
  components.CreateEmployeeResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisEmployeesAddResponse$ {
  /** @deprecated use `HrisEmployeesAddResponse$inboundSchema` instead. */
  export const inboundSchema = HrisEmployeesAddResponse$inboundSchema;
  /** @deprecated use `HrisEmployeesAddResponse$outboundSchema` instead. */
  export const outboundSchema = HrisEmployeesAddResponse$outboundSchema;
  /** @deprecated use `HrisEmployeesAddResponse$Outbound` instead. */
  export type Outbound = HrisEmployeesAddResponse$Outbound;
}
