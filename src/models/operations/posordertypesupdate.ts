/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type PosOrderTypesUpdateGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type PosOrderTypesUpdateRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  orderType: components.OrderTypeInput;
};

export type PosOrderTypesUpdateResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OrderTypes
   */
  updateOrderTypeResponse?: components.UpdateOrderTypeResponse | undefined;
  /**
   * Unexpected error
   */
  unexpectedErrorResponse?: components.UnexpectedErrorResponse | undefined;
};

/** @internal */
export const PosOrderTypesUpdateGlobals$inboundSchema: z.ZodType<
  PosOrderTypesUpdateGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type PosOrderTypesUpdateGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const PosOrderTypesUpdateGlobals$outboundSchema: z.ZodType<
  PosOrderTypesUpdateGlobals$Outbound,
  z.ZodTypeDef,
  PosOrderTypesUpdateGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosOrderTypesUpdateGlobals$ {
  /** @deprecated use `PosOrderTypesUpdateGlobals$inboundSchema` instead. */
  export const inboundSchema = PosOrderTypesUpdateGlobals$inboundSchema;
  /** @deprecated use `PosOrderTypesUpdateGlobals$outboundSchema` instead. */
  export const outboundSchema = PosOrderTypesUpdateGlobals$outboundSchema;
  /** @deprecated use `PosOrderTypesUpdateGlobals$Outbound` instead. */
  export type Outbound = PosOrderTypesUpdateGlobals$Outbound;
}

/** @internal */
export const PosOrderTypesUpdateRequest$inboundSchema: z.ZodType<
  PosOrderTypesUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  OrderType: components.OrderTypeInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "OrderType": "orderType",
  });
});

/** @internal */
export type PosOrderTypesUpdateRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
  OrderType: components.OrderTypeInput$Outbound;
};

/** @internal */
export const PosOrderTypesUpdateRequest$outboundSchema: z.ZodType<
  PosOrderTypesUpdateRequest$Outbound,
  z.ZodTypeDef,
  PosOrderTypesUpdateRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  orderType: components.OrderTypeInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    orderType: "OrderType",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosOrderTypesUpdateRequest$ {
  /** @deprecated use `PosOrderTypesUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = PosOrderTypesUpdateRequest$inboundSchema;
  /** @deprecated use `PosOrderTypesUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = PosOrderTypesUpdateRequest$outboundSchema;
  /** @deprecated use `PosOrderTypesUpdateRequest$Outbound` instead. */
  export type Outbound = PosOrderTypesUpdateRequest$Outbound;
}

/** @internal */
export const PosOrderTypesUpdateResponse$inboundSchema: z.ZodType<
  PosOrderTypesUpdateResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  UpdateOrderTypeResponse: components.UpdateOrderTypeResponse$inboundSchema
    .optional(),
  UnexpectedErrorResponse: components.UnexpectedErrorResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "UpdateOrderTypeResponse": "updateOrderTypeResponse",
    "UnexpectedErrorResponse": "unexpectedErrorResponse",
  });
});

/** @internal */
export type PosOrderTypesUpdateResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  UpdateOrderTypeResponse?:
    | components.UpdateOrderTypeResponse$Outbound
    | undefined;
  UnexpectedErrorResponse?:
    | components.UnexpectedErrorResponse$Outbound
    | undefined;
};

/** @internal */
export const PosOrderTypesUpdateResponse$outboundSchema: z.ZodType<
  PosOrderTypesUpdateResponse$Outbound,
  z.ZodTypeDef,
  PosOrderTypesUpdateResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  updateOrderTypeResponse: components.UpdateOrderTypeResponse$outboundSchema
    .optional(),
  unexpectedErrorResponse: components.UnexpectedErrorResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    updateOrderTypeResponse: "UpdateOrderTypeResponse",
    unexpectedErrorResponse: "UnexpectedErrorResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosOrderTypesUpdateResponse$ {
  /** @deprecated use `PosOrderTypesUpdateResponse$inboundSchema` instead. */
  export const inboundSchema = PosOrderTypesUpdateResponse$inboundSchema;
  /** @deprecated use `PosOrderTypesUpdateResponse$outboundSchema` instead. */
  export const outboundSchema = PosOrderTypesUpdateResponse$outboundSchema;
  /** @deprecated use `PosOrderTypesUpdateResponse$Outbound` instead. */
  export type Outbound = PosOrderTypesUpdateResponse$Outbound;
}
