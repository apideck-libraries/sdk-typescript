/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type PosTendersUpdateGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type PosTendersUpdateRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  tender: components.TenderInput;
};

export type PosTendersUpdateResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * Tenders
   */
  updateTenderResponse?: components.UpdateTenderResponse | undefined;
  /**
   * Unexpected error
   */
  unexpectedErrorResponse?: components.UnexpectedErrorResponse | undefined;
};

/** @internal */
export const PosTendersUpdateGlobals$inboundSchema: z.ZodType<
  PosTendersUpdateGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type PosTendersUpdateGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const PosTendersUpdateGlobals$outboundSchema: z.ZodType<
  PosTendersUpdateGlobals$Outbound,
  z.ZodTypeDef,
  PosTendersUpdateGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosTendersUpdateGlobals$ {
  /** @deprecated use `PosTendersUpdateGlobals$inboundSchema` instead. */
  export const inboundSchema = PosTendersUpdateGlobals$inboundSchema;
  /** @deprecated use `PosTendersUpdateGlobals$outboundSchema` instead. */
  export const outboundSchema = PosTendersUpdateGlobals$outboundSchema;
  /** @deprecated use `PosTendersUpdateGlobals$Outbound` instead. */
  export type Outbound = PosTendersUpdateGlobals$Outbound;
}

/** @internal */
export const PosTendersUpdateRequest$inboundSchema: z.ZodType<
  PosTendersUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  Tender: components.TenderInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Tender": "tender",
  });
});

/** @internal */
export type PosTendersUpdateRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
  Tender: components.TenderInput$Outbound;
};

/** @internal */
export const PosTendersUpdateRequest$outboundSchema: z.ZodType<
  PosTendersUpdateRequest$Outbound,
  z.ZodTypeDef,
  PosTendersUpdateRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  tender: components.TenderInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    tender: "Tender",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosTendersUpdateRequest$ {
  /** @deprecated use `PosTendersUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = PosTendersUpdateRequest$inboundSchema;
  /** @deprecated use `PosTendersUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = PosTendersUpdateRequest$outboundSchema;
  /** @deprecated use `PosTendersUpdateRequest$Outbound` instead. */
  export type Outbound = PosTendersUpdateRequest$Outbound;
}

/** @internal */
export const PosTendersUpdateResponse$inboundSchema: z.ZodType<
  PosTendersUpdateResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  UpdateTenderResponse: components.UpdateTenderResponse$inboundSchema
    .optional(),
  UnexpectedErrorResponse: components.UnexpectedErrorResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "UpdateTenderResponse": "updateTenderResponse",
    "UnexpectedErrorResponse": "unexpectedErrorResponse",
  });
});

/** @internal */
export type PosTendersUpdateResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  UpdateTenderResponse?: components.UpdateTenderResponse$Outbound | undefined;
  UnexpectedErrorResponse?:
    | components.UnexpectedErrorResponse$Outbound
    | undefined;
};

/** @internal */
export const PosTendersUpdateResponse$outboundSchema: z.ZodType<
  PosTendersUpdateResponse$Outbound,
  z.ZodTypeDef,
  PosTendersUpdateResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  updateTenderResponse: components.UpdateTenderResponse$outboundSchema
    .optional(),
  unexpectedErrorResponse: components.UnexpectedErrorResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    updateTenderResponse: "UpdateTenderResponse",
    unexpectedErrorResponse: "UnexpectedErrorResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosTendersUpdateResponse$ {
  /** @deprecated use `PosTendersUpdateResponse$inboundSchema` instead. */
  export const inboundSchema = PosTendersUpdateResponse$inboundSchema;
  /** @deprecated use `PosTendersUpdateResponse$outboundSchema` instead. */
  export const outboundSchema = PosTendersUpdateResponse$outboundSchema;
  /** @deprecated use `PosTendersUpdateResponse$Outbound` instead. */
  export type Outbound = PosTendersUpdateResponse$Outbound;
}
