/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type AccountingCreditNotesUpdateGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type AccountingCreditNotesUpdateRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  creditNote: components.CreditNoteInput;
};

export type AccountingCreditNotesUpdateResponse =
  | components.UpdateCreditNoteResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const AccountingCreditNotesUpdateGlobals$inboundSchema: z.ZodType<
  AccountingCreditNotesUpdateGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type AccountingCreditNotesUpdateGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const AccountingCreditNotesUpdateGlobals$outboundSchema: z.ZodType<
  AccountingCreditNotesUpdateGlobals$Outbound,
  z.ZodTypeDef,
  AccountingCreditNotesUpdateGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingCreditNotesUpdateGlobals$ {
  /** @deprecated use `AccountingCreditNotesUpdateGlobals$inboundSchema` instead. */
  export const inboundSchema = AccountingCreditNotesUpdateGlobals$inboundSchema;
  /** @deprecated use `AccountingCreditNotesUpdateGlobals$outboundSchema` instead. */
  export const outboundSchema =
    AccountingCreditNotesUpdateGlobals$outboundSchema;
  /** @deprecated use `AccountingCreditNotesUpdateGlobals$Outbound` instead. */
  export type Outbound = AccountingCreditNotesUpdateGlobals$Outbound;
}

/** @internal */
export const AccountingCreditNotesUpdateRequest$inboundSchema: z.ZodType<
  AccountingCreditNotesUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  CreditNote: components.CreditNoteInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "CreditNote": "creditNote",
  });
});

/** @internal */
export type AccountingCreditNotesUpdateRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
  CreditNote: components.CreditNoteInput$Outbound;
};

/** @internal */
export const AccountingCreditNotesUpdateRequest$outboundSchema: z.ZodType<
  AccountingCreditNotesUpdateRequest$Outbound,
  z.ZodTypeDef,
  AccountingCreditNotesUpdateRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  creditNote: components.CreditNoteInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    creditNote: "CreditNote",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingCreditNotesUpdateRequest$ {
  /** @deprecated use `AccountingCreditNotesUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = AccountingCreditNotesUpdateRequest$inboundSchema;
  /** @deprecated use `AccountingCreditNotesUpdateRequest$outboundSchema` instead. */
  export const outboundSchema =
    AccountingCreditNotesUpdateRequest$outboundSchema;
  /** @deprecated use `AccountingCreditNotesUpdateRequest$Outbound` instead. */
  export type Outbound = AccountingCreditNotesUpdateRequest$Outbound;
}

/** @internal */
export const AccountingCreditNotesUpdateResponse$inboundSchema: z.ZodType<
  AccountingCreditNotesUpdateResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.UpdateCreditNoteResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type AccountingCreditNotesUpdateResponse$Outbound =
  | components.UpdateCreditNoteResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const AccountingCreditNotesUpdateResponse$outboundSchema: z.ZodType<
  AccountingCreditNotesUpdateResponse$Outbound,
  z.ZodTypeDef,
  AccountingCreditNotesUpdateResponse
> = z.union([
  components.UpdateCreditNoteResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingCreditNotesUpdateResponse$ {
  /** @deprecated use `AccountingCreditNotesUpdateResponse$inboundSchema` instead. */
  export const inboundSchema =
    AccountingCreditNotesUpdateResponse$inboundSchema;
  /** @deprecated use `AccountingCreditNotesUpdateResponse$outboundSchema` instead. */
  export const outboundSchema =
    AccountingCreditNotesUpdateResponse$outboundSchema;
  /** @deprecated use `AccountingCreditNotesUpdateResponse$Outbound` instead. */
  export type Outbound = AccountingCreditNotesUpdateResponse$Outbound;
}
