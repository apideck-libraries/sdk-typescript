/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type AccountingCustomersDeleteGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type AccountingCustomersDeleteRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
};

export type AccountingCustomersDeleteResponse =
  | components.DeleteCustomerResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const AccountingCustomersDeleteGlobals$inboundSchema: z.ZodType<
  AccountingCustomersDeleteGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type AccountingCustomersDeleteGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const AccountingCustomersDeleteGlobals$outboundSchema: z.ZodType<
  AccountingCustomersDeleteGlobals$Outbound,
  z.ZodTypeDef,
  AccountingCustomersDeleteGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingCustomersDeleteGlobals$ {
  /** @deprecated use `AccountingCustomersDeleteGlobals$inboundSchema` instead. */
  export const inboundSchema = AccountingCustomersDeleteGlobals$inboundSchema;
  /** @deprecated use `AccountingCustomersDeleteGlobals$outboundSchema` instead. */
  export const outboundSchema = AccountingCustomersDeleteGlobals$outboundSchema;
  /** @deprecated use `AccountingCustomersDeleteGlobals$Outbound` instead. */
  export type Outbound = AccountingCustomersDeleteGlobals$Outbound;
}

/** @internal */
export const AccountingCustomersDeleteRequest$inboundSchema: z.ZodType<
  AccountingCustomersDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/** @internal */
export type AccountingCustomersDeleteRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
};

/** @internal */
export const AccountingCustomersDeleteRequest$outboundSchema: z.ZodType<
  AccountingCustomersDeleteRequest$Outbound,
  z.ZodTypeDef,
  AccountingCustomersDeleteRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingCustomersDeleteRequest$ {
  /** @deprecated use `AccountingCustomersDeleteRequest$inboundSchema` instead. */
  export const inboundSchema = AccountingCustomersDeleteRequest$inboundSchema;
  /** @deprecated use `AccountingCustomersDeleteRequest$outboundSchema` instead. */
  export const outboundSchema = AccountingCustomersDeleteRequest$outboundSchema;
  /** @deprecated use `AccountingCustomersDeleteRequest$Outbound` instead. */
  export type Outbound = AccountingCustomersDeleteRequest$Outbound;
}

/** @internal */
export const AccountingCustomersDeleteResponse$inboundSchema: z.ZodType<
  AccountingCustomersDeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.DeleteCustomerResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type AccountingCustomersDeleteResponse$Outbound =
  | components.DeleteCustomerResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const AccountingCustomersDeleteResponse$outboundSchema: z.ZodType<
  AccountingCustomersDeleteResponse$Outbound,
  z.ZodTypeDef,
  AccountingCustomersDeleteResponse
> = z.union([
  components.DeleteCustomerResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingCustomersDeleteResponse$ {
  /** @deprecated use `AccountingCustomersDeleteResponse$inboundSchema` instead. */
  export const inboundSchema = AccountingCustomersDeleteResponse$inboundSchema;
  /** @deprecated use `AccountingCustomersDeleteResponse$outboundSchema` instead. */
  export const outboundSchema =
    AccountingCustomersDeleteResponse$outboundSchema;
  /** @deprecated use `AccountingCustomersDeleteResponse$Outbound` instead. */
  export type Outbound = AccountingCustomersDeleteResponse$Outbound;
}
