/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type HrisTimeOffRequestsDeleteGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type HrisTimeOffRequestsDeleteRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  /**
   * ID of the employee you are acting upon.
   */
  employeeId: string;
};

export type HrisTimeOffRequestsDeleteResponse =
  | components.DeleteTimeOffRequestResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const HrisTimeOffRequestsDeleteGlobals$inboundSchema: z.ZodType<
  HrisTimeOffRequestsDeleteGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type HrisTimeOffRequestsDeleteGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const HrisTimeOffRequestsDeleteGlobals$outboundSchema: z.ZodType<
  HrisTimeOffRequestsDeleteGlobals$Outbound,
  z.ZodTypeDef,
  HrisTimeOffRequestsDeleteGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsDeleteGlobals$ {
  /** @deprecated use `HrisTimeOffRequestsDeleteGlobals$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsDeleteGlobals$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsDeleteGlobals$outboundSchema` instead. */
  export const outboundSchema = HrisTimeOffRequestsDeleteGlobals$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsDeleteGlobals$Outbound` instead. */
  export type Outbound = HrisTimeOffRequestsDeleteGlobals$Outbound;
}

/** @internal */
export const HrisTimeOffRequestsDeleteRequest$inboundSchema: z.ZodType<
  HrisTimeOffRequestsDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  employee_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "employee_id": "employeeId",
  });
});

/** @internal */
export type HrisTimeOffRequestsDeleteRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
  employee_id: string;
};

/** @internal */
export const HrisTimeOffRequestsDeleteRequest$outboundSchema: z.ZodType<
  HrisTimeOffRequestsDeleteRequest$Outbound,
  z.ZodTypeDef,
  HrisTimeOffRequestsDeleteRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  employeeId: z.string(),
}).transform((v) => {
  return remap$(v, {
    employeeId: "employee_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsDeleteRequest$ {
  /** @deprecated use `HrisTimeOffRequestsDeleteRequest$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsDeleteRequest$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsDeleteRequest$outboundSchema` instead. */
  export const outboundSchema = HrisTimeOffRequestsDeleteRequest$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsDeleteRequest$Outbound` instead. */
  export type Outbound = HrisTimeOffRequestsDeleteRequest$Outbound;
}

/** @internal */
export const HrisTimeOffRequestsDeleteResponse$inboundSchema: z.ZodType<
  HrisTimeOffRequestsDeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.DeleteTimeOffRequestResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type HrisTimeOffRequestsDeleteResponse$Outbound =
  | components.DeleteTimeOffRequestResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const HrisTimeOffRequestsDeleteResponse$outboundSchema: z.ZodType<
  HrisTimeOffRequestsDeleteResponse$Outbound,
  z.ZodTypeDef,
  HrisTimeOffRequestsDeleteResponse
> = z.union([
  components.DeleteTimeOffRequestResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisTimeOffRequestsDeleteResponse$ {
  /** @deprecated use `HrisTimeOffRequestsDeleteResponse$inboundSchema` instead. */
  export const inboundSchema = HrisTimeOffRequestsDeleteResponse$inboundSchema;
  /** @deprecated use `HrisTimeOffRequestsDeleteResponse$outboundSchema` instead. */
  export const outboundSchema =
    HrisTimeOffRequestsDeleteResponse$outboundSchema;
  /** @deprecated use `HrisTimeOffRequestsDeleteResponse$Outbound` instead. */
  export type Outbound = HrisTimeOffRequestsDeleteResponse$Outbound;
}
