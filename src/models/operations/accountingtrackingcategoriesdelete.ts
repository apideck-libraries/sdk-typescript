/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type AccountingTrackingCategoriesDeleteGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type AccountingTrackingCategoriesDeleteRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
};

export type AccountingTrackingCategoriesDeleteResponse =
  | components.DeleteTrackingCategoryResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const AccountingTrackingCategoriesDeleteGlobals$inboundSchema: z.ZodType<
  AccountingTrackingCategoriesDeleteGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type AccountingTrackingCategoriesDeleteGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const AccountingTrackingCategoriesDeleteGlobals$outboundSchema:
  z.ZodType<
    AccountingTrackingCategoriesDeleteGlobals$Outbound,
    z.ZodTypeDef,
    AccountingTrackingCategoriesDeleteGlobals
  > = z.object({
    customerId: z.string().optional(),
    appId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingTrackingCategoriesDeleteGlobals$ {
  /** @deprecated use `AccountingTrackingCategoriesDeleteGlobals$inboundSchema` instead. */
  export const inboundSchema =
    AccountingTrackingCategoriesDeleteGlobals$inboundSchema;
  /** @deprecated use `AccountingTrackingCategoriesDeleteGlobals$outboundSchema` instead. */
  export const outboundSchema =
    AccountingTrackingCategoriesDeleteGlobals$outboundSchema;
  /** @deprecated use `AccountingTrackingCategoriesDeleteGlobals$Outbound` instead. */
  export type Outbound = AccountingTrackingCategoriesDeleteGlobals$Outbound;
}

/** @internal */
export const AccountingTrackingCategoriesDeleteRequest$inboundSchema: z.ZodType<
  AccountingTrackingCategoriesDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/** @internal */
export type AccountingTrackingCategoriesDeleteRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
};

/** @internal */
export const AccountingTrackingCategoriesDeleteRequest$outboundSchema:
  z.ZodType<
    AccountingTrackingCategoriesDeleteRequest$Outbound,
    z.ZodTypeDef,
    AccountingTrackingCategoriesDeleteRequest
  > = z.object({
    id: z.string(),
    serviceId: z.string().optional(),
    raw: z.boolean().default(false),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingTrackingCategoriesDeleteRequest$ {
  /** @deprecated use `AccountingTrackingCategoriesDeleteRequest$inboundSchema` instead. */
  export const inboundSchema =
    AccountingTrackingCategoriesDeleteRequest$inboundSchema;
  /** @deprecated use `AccountingTrackingCategoriesDeleteRequest$outboundSchema` instead. */
  export const outboundSchema =
    AccountingTrackingCategoriesDeleteRequest$outboundSchema;
  /** @deprecated use `AccountingTrackingCategoriesDeleteRequest$Outbound` instead. */
  export type Outbound = AccountingTrackingCategoriesDeleteRequest$Outbound;
}

/** @internal */
export const AccountingTrackingCategoriesDeleteResponse$inboundSchema:
  z.ZodType<AccountingTrackingCategoriesDeleteResponse, z.ZodTypeDef, unknown> =
    z.union([
      components.DeleteTrackingCategoryResponse$inboundSchema,
      components.UnexpectedErrorResponse$inboundSchema,
    ]);

/** @internal */
export type AccountingTrackingCategoriesDeleteResponse$Outbound =
  | components.DeleteTrackingCategoryResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const AccountingTrackingCategoriesDeleteResponse$outboundSchema:
  z.ZodType<
    AccountingTrackingCategoriesDeleteResponse$Outbound,
    z.ZodTypeDef,
    AccountingTrackingCategoriesDeleteResponse
  > = z.union([
    components.DeleteTrackingCategoryResponse$outboundSchema,
    components.UnexpectedErrorResponse$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingTrackingCategoriesDeleteResponse$ {
  /** @deprecated use `AccountingTrackingCategoriesDeleteResponse$inboundSchema` instead. */
  export const inboundSchema =
    AccountingTrackingCategoriesDeleteResponse$inboundSchema;
  /** @deprecated use `AccountingTrackingCategoriesDeleteResponse$outboundSchema` instead. */
  export const outboundSchema =
    AccountingTrackingCategoriesDeleteResponse$outboundSchema;
  /** @deprecated use `AccountingTrackingCategoriesDeleteResponse$Outbound` instead. */
  export type Outbound = AccountingTrackingCategoriesDeleteResponse$Outbound;
}
