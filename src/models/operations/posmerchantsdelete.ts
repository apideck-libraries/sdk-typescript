/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type PosMerchantsDeleteGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type PosMerchantsDeleteRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
};

export type PosMerchantsDeleteResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * Merchants
   */
  deleteMerchantResponse?: components.DeleteMerchantResponse | undefined;
  /**
   * Unexpected error
   */
  unexpectedErrorResponse?: components.UnexpectedErrorResponse | undefined;
};

/** @internal */
export const PosMerchantsDeleteGlobals$inboundSchema: z.ZodType<
  PosMerchantsDeleteGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type PosMerchantsDeleteGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const PosMerchantsDeleteGlobals$outboundSchema: z.ZodType<
  PosMerchantsDeleteGlobals$Outbound,
  z.ZodTypeDef,
  PosMerchantsDeleteGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosMerchantsDeleteGlobals$ {
  /** @deprecated use `PosMerchantsDeleteGlobals$inboundSchema` instead. */
  export const inboundSchema = PosMerchantsDeleteGlobals$inboundSchema;
  /** @deprecated use `PosMerchantsDeleteGlobals$outboundSchema` instead. */
  export const outboundSchema = PosMerchantsDeleteGlobals$outboundSchema;
  /** @deprecated use `PosMerchantsDeleteGlobals$Outbound` instead. */
  export type Outbound = PosMerchantsDeleteGlobals$Outbound;
}

/** @internal */
export const PosMerchantsDeleteRequest$inboundSchema: z.ZodType<
  PosMerchantsDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/** @internal */
export type PosMerchantsDeleteRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
};

/** @internal */
export const PosMerchantsDeleteRequest$outboundSchema: z.ZodType<
  PosMerchantsDeleteRequest$Outbound,
  z.ZodTypeDef,
  PosMerchantsDeleteRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosMerchantsDeleteRequest$ {
  /** @deprecated use `PosMerchantsDeleteRequest$inboundSchema` instead. */
  export const inboundSchema = PosMerchantsDeleteRequest$inboundSchema;
  /** @deprecated use `PosMerchantsDeleteRequest$outboundSchema` instead. */
  export const outboundSchema = PosMerchantsDeleteRequest$outboundSchema;
  /** @deprecated use `PosMerchantsDeleteRequest$Outbound` instead. */
  export type Outbound = PosMerchantsDeleteRequest$Outbound;
}

/** @internal */
export const PosMerchantsDeleteResponse$inboundSchema: z.ZodType<
  PosMerchantsDeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  DeleteMerchantResponse: components.DeleteMerchantResponse$inboundSchema
    .optional(),
  UnexpectedErrorResponse: components.UnexpectedErrorResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "DeleteMerchantResponse": "deleteMerchantResponse",
    "UnexpectedErrorResponse": "unexpectedErrorResponse",
  });
});

/** @internal */
export type PosMerchantsDeleteResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  DeleteMerchantResponse?:
    | components.DeleteMerchantResponse$Outbound
    | undefined;
  UnexpectedErrorResponse?:
    | components.UnexpectedErrorResponse$Outbound
    | undefined;
};

/** @internal */
export const PosMerchantsDeleteResponse$outboundSchema: z.ZodType<
  PosMerchantsDeleteResponse$Outbound,
  z.ZodTypeDef,
  PosMerchantsDeleteResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  deleteMerchantResponse: components.DeleteMerchantResponse$outboundSchema
    .optional(),
  unexpectedErrorResponse: components.UnexpectedErrorResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    deleteMerchantResponse: "DeleteMerchantResponse",
    unexpectedErrorResponse: "UnexpectedErrorResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosMerchantsDeleteResponse$ {
  /** @deprecated use `PosMerchantsDeleteResponse$inboundSchema` instead. */
  export const inboundSchema = PosMerchantsDeleteResponse$inboundSchema;
  /** @deprecated use `PosMerchantsDeleteResponse$outboundSchema` instead. */
  export const outboundSchema = PosMerchantsDeleteResponse$outboundSchema;
  /** @deprecated use `PosMerchantsDeleteResponse$Outbound` instead. */
  export type Outbound = PosMerchantsDeleteResponse$Outbound;
}
