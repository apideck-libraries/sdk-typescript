/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type AccountingInvoiceItemsUpdateGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type AccountingInvoiceItemsUpdateRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  invoiceItem: components.InvoiceItemInput;
};

export type AccountingInvoiceItemsUpdateResponse =
  | components.UpdateInvoiceItemsResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const AccountingInvoiceItemsUpdateGlobals$inboundSchema: z.ZodType<
  AccountingInvoiceItemsUpdateGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type AccountingInvoiceItemsUpdateGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const AccountingInvoiceItemsUpdateGlobals$outboundSchema: z.ZodType<
  AccountingInvoiceItemsUpdateGlobals$Outbound,
  z.ZodTypeDef,
  AccountingInvoiceItemsUpdateGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingInvoiceItemsUpdateGlobals$ {
  /** @deprecated use `AccountingInvoiceItemsUpdateGlobals$inboundSchema` instead. */
  export const inboundSchema =
    AccountingInvoiceItemsUpdateGlobals$inboundSchema;
  /** @deprecated use `AccountingInvoiceItemsUpdateGlobals$outboundSchema` instead. */
  export const outboundSchema =
    AccountingInvoiceItemsUpdateGlobals$outboundSchema;
  /** @deprecated use `AccountingInvoiceItemsUpdateGlobals$Outbound` instead. */
  export type Outbound = AccountingInvoiceItemsUpdateGlobals$Outbound;
}

/** @internal */
export const AccountingInvoiceItemsUpdateRequest$inboundSchema: z.ZodType<
  AccountingInvoiceItemsUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  InvoiceItem: components.InvoiceItemInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "InvoiceItem": "invoiceItem",
  });
});

/** @internal */
export type AccountingInvoiceItemsUpdateRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
  InvoiceItem: components.InvoiceItemInput$Outbound;
};

/** @internal */
export const AccountingInvoiceItemsUpdateRequest$outboundSchema: z.ZodType<
  AccountingInvoiceItemsUpdateRequest$Outbound,
  z.ZodTypeDef,
  AccountingInvoiceItemsUpdateRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  invoiceItem: components.InvoiceItemInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    invoiceItem: "InvoiceItem",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingInvoiceItemsUpdateRequest$ {
  /** @deprecated use `AccountingInvoiceItemsUpdateRequest$inboundSchema` instead. */
  export const inboundSchema =
    AccountingInvoiceItemsUpdateRequest$inboundSchema;
  /** @deprecated use `AccountingInvoiceItemsUpdateRequest$outboundSchema` instead. */
  export const outboundSchema =
    AccountingInvoiceItemsUpdateRequest$outboundSchema;
  /** @deprecated use `AccountingInvoiceItemsUpdateRequest$Outbound` instead. */
  export type Outbound = AccountingInvoiceItemsUpdateRequest$Outbound;
}

/** @internal */
export const AccountingInvoiceItemsUpdateResponse$inboundSchema: z.ZodType<
  AccountingInvoiceItemsUpdateResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.UpdateInvoiceItemsResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type AccountingInvoiceItemsUpdateResponse$Outbound =
  | components.UpdateInvoiceItemsResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const AccountingInvoiceItemsUpdateResponse$outboundSchema: z.ZodType<
  AccountingInvoiceItemsUpdateResponse$Outbound,
  z.ZodTypeDef,
  AccountingInvoiceItemsUpdateResponse
> = z.union([
  components.UpdateInvoiceItemsResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingInvoiceItemsUpdateResponse$ {
  /** @deprecated use `AccountingInvoiceItemsUpdateResponse$inboundSchema` instead. */
  export const inboundSchema =
    AccountingInvoiceItemsUpdateResponse$inboundSchema;
  /** @deprecated use `AccountingInvoiceItemsUpdateResponse$outboundSchema` instead. */
  export const outboundSchema =
    AccountingInvoiceItemsUpdateResponse$outboundSchema;
  /** @deprecated use `AccountingInvoiceItemsUpdateResponse$Outbound` instead. */
  export type Outbound = AccountingInvoiceItemsUpdateResponse$Outbound;
}
