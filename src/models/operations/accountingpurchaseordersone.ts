/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type AccountingPurchaseOrdersOneGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type AccountingPurchaseOrdersOneRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
};

export type AccountingPurchaseOrdersOneResponse =
  | components.GetPurchaseOrderResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const AccountingPurchaseOrdersOneGlobals$inboundSchema: z.ZodType<
  AccountingPurchaseOrdersOneGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type AccountingPurchaseOrdersOneGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const AccountingPurchaseOrdersOneGlobals$outboundSchema: z.ZodType<
  AccountingPurchaseOrdersOneGlobals$Outbound,
  z.ZodTypeDef,
  AccountingPurchaseOrdersOneGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingPurchaseOrdersOneGlobals$ {
  /** @deprecated use `AccountingPurchaseOrdersOneGlobals$inboundSchema` instead. */
  export const inboundSchema = AccountingPurchaseOrdersOneGlobals$inboundSchema;
  /** @deprecated use `AccountingPurchaseOrdersOneGlobals$outboundSchema` instead. */
  export const outboundSchema =
    AccountingPurchaseOrdersOneGlobals$outboundSchema;
  /** @deprecated use `AccountingPurchaseOrdersOneGlobals$Outbound` instead. */
  export type Outbound = AccountingPurchaseOrdersOneGlobals$Outbound;
}

/** @internal */
export const AccountingPurchaseOrdersOneRequest$inboundSchema: z.ZodType<
  AccountingPurchaseOrdersOneRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/** @internal */
export type AccountingPurchaseOrdersOneRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
};

/** @internal */
export const AccountingPurchaseOrdersOneRequest$outboundSchema: z.ZodType<
  AccountingPurchaseOrdersOneRequest$Outbound,
  z.ZodTypeDef,
  AccountingPurchaseOrdersOneRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingPurchaseOrdersOneRequest$ {
  /** @deprecated use `AccountingPurchaseOrdersOneRequest$inboundSchema` instead. */
  export const inboundSchema = AccountingPurchaseOrdersOneRequest$inboundSchema;
  /** @deprecated use `AccountingPurchaseOrdersOneRequest$outboundSchema` instead. */
  export const outboundSchema =
    AccountingPurchaseOrdersOneRequest$outboundSchema;
  /** @deprecated use `AccountingPurchaseOrdersOneRequest$Outbound` instead. */
  export type Outbound = AccountingPurchaseOrdersOneRequest$Outbound;
}

/** @internal */
export const AccountingPurchaseOrdersOneResponse$inboundSchema: z.ZodType<
  AccountingPurchaseOrdersOneResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.GetPurchaseOrderResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type AccountingPurchaseOrdersOneResponse$Outbound =
  | components.GetPurchaseOrderResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const AccountingPurchaseOrdersOneResponse$outboundSchema: z.ZodType<
  AccountingPurchaseOrdersOneResponse$Outbound,
  z.ZodTypeDef,
  AccountingPurchaseOrdersOneResponse
> = z.union([
  components.GetPurchaseOrderResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingPurchaseOrdersOneResponse$ {
  /** @deprecated use `AccountingPurchaseOrdersOneResponse$inboundSchema` instead. */
  export const inboundSchema =
    AccountingPurchaseOrdersOneResponse$inboundSchema;
  /** @deprecated use `AccountingPurchaseOrdersOneResponse$outboundSchema` instead. */
  export const outboundSchema =
    AccountingPurchaseOrdersOneResponse$outboundSchema;
  /** @deprecated use `AccountingPurchaseOrdersOneResponse$Outbound` instead. */
  export type Outbound = AccountingPurchaseOrdersOneResponse$Outbound;
}
