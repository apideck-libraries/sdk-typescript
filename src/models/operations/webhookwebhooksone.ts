/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type WebhookWebhooksOneGlobals = {
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type WebhookWebhooksOneRequest = {
  /**
   * JWT Webhook token that represents the unifiedApi and applicationId associated to the event source.
   */
  id: string;
};

export type WebhookWebhooksOneResponse =
  | components.GetWebhookResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const WebhookWebhooksOneGlobals$inboundSchema: z.ZodType<
  WebhookWebhooksOneGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.string().optional(),
});

/** @internal */
export type WebhookWebhooksOneGlobals$Outbound = {
  appId?: string | undefined;
};

/** @internal */
export const WebhookWebhooksOneGlobals$outboundSchema: z.ZodType<
  WebhookWebhooksOneGlobals$Outbound,
  z.ZodTypeDef,
  WebhookWebhooksOneGlobals
> = z.object({
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookWebhooksOneGlobals$ {
  /** @deprecated use `WebhookWebhooksOneGlobals$inboundSchema` instead. */
  export const inboundSchema = WebhookWebhooksOneGlobals$inboundSchema;
  /** @deprecated use `WebhookWebhooksOneGlobals$outboundSchema` instead. */
  export const outboundSchema = WebhookWebhooksOneGlobals$outboundSchema;
  /** @deprecated use `WebhookWebhooksOneGlobals$Outbound` instead. */
  export type Outbound = WebhookWebhooksOneGlobals$Outbound;
}

/** @internal */
export const WebhookWebhooksOneRequest$inboundSchema: z.ZodType<
  WebhookWebhooksOneRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type WebhookWebhooksOneRequest$Outbound = {
  id: string;
};

/** @internal */
export const WebhookWebhooksOneRequest$outboundSchema: z.ZodType<
  WebhookWebhooksOneRequest$Outbound,
  z.ZodTypeDef,
  WebhookWebhooksOneRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookWebhooksOneRequest$ {
  /** @deprecated use `WebhookWebhooksOneRequest$inboundSchema` instead. */
  export const inboundSchema = WebhookWebhooksOneRequest$inboundSchema;
  /** @deprecated use `WebhookWebhooksOneRequest$outboundSchema` instead. */
  export const outboundSchema = WebhookWebhooksOneRequest$outboundSchema;
  /** @deprecated use `WebhookWebhooksOneRequest$Outbound` instead. */
  export type Outbound = WebhookWebhooksOneRequest$Outbound;
}

/** @internal */
export const WebhookWebhooksOneResponse$inboundSchema: z.ZodType<
  WebhookWebhooksOneResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.GetWebhookResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type WebhookWebhooksOneResponse$Outbound =
  | components.GetWebhookResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const WebhookWebhooksOneResponse$outboundSchema: z.ZodType<
  WebhookWebhooksOneResponse$Outbound,
  z.ZodTypeDef,
  WebhookWebhooksOneResponse
> = z.union([
  components.GetWebhookResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookWebhooksOneResponse$ {
  /** @deprecated use `WebhookWebhooksOneResponse$inboundSchema` instead. */
  export const inboundSchema = WebhookWebhooksOneResponse$inboundSchema;
  /** @deprecated use `WebhookWebhooksOneResponse$outboundSchema` instead. */
  export const outboundSchema = WebhookWebhooksOneResponse$outboundSchema;
  /** @deprecated use `WebhookWebhooksOneResponse$Outbound` instead. */
  export type Outbound = WebhookWebhooksOneResponse$Outbound;
}
