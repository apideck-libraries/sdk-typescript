/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type FileStorageFoldersUpdateGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type FileStorageFoldersUpdateRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  updateFolderRequest: components.UpdateFolderRequest;
};

export type FileStorageFoldersUpdateResponse =
  | components.UpdateFolderResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const FileStorageFoldersUpdateGlobals$inboundSchema: z.ZodType<
  FileStorageFoldersUpdateGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type FileStorageFoldersUpdateGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const FileStorageFoldersUpdateGlobals$outboundSchema: z.ZodType<
  FileStorageFoldersUpdateGlobals$Outbound,
  z.ZodTypeDef,
  FileStorageFoldersUpdateGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FileStorageFoldersUpdateGlobals$ {
  /** @deprecated use `FileStorageFoldersUpdateGlobals$inboundSchema` instead. */
  export const inboundSchema = FileStorageFoldersUpdateGlobals$inboundSchema;
  /** @deprecated use `FileStorageFoldersUpdateGlobals$outboundSchema` instead. */
  export const outboundSchema = FileStorageFoldersUpdateGlobals$outboundSchema;
  /** @deprecated use `FileStorageFoldersUpdateGlobals$Outbound` instead. */
  export type Outbound = FileStorageFoldersUpdateGlobals$Outbound;
}

/** @internal */
export const FileStorageFoldersUpdateRequest$inboundSchema: z.ZodType<
  FileStorageFoldersUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  UpdateFolderRequest: components.UpdateFolderRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "UpdateFolderRequest": "updateFolderRequest",
  });
});

/** @internal */
export type FileStorageFoldersUpdateRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
  UpdateFolderRequest: components.UpdateFolderRequest$Outbound;
};

/** @internal */
export const FileStorageFoldersUpdateRequest$outboundSchema: z.ZodType<
  FileStorageFoldersUpdateRequest$Outbound,
  z.ZodTypeDef,
  FileStorageFoldersUpdateRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  updateFolderRequest: components.UpdateFolderRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    updateFolderRequest: "UpdateFolderRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FileStorageFoldersUpdateRequest$ {
  /** @deprecated use `FileStorageFoldersUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = FileStorageFoldersUpdateRequest$inboundSchema;
  /** @deprecated use `FileStorageFoldersUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = FileStorageFoldersUpdateRequest$outboundSchema;
  /** @deprecated use `FileStorageFoldersUpdateRequest$Outbound` instead. */
  export type Outbound = FileStorageFoldersUpdateRequest$Outbound;
}

/** @internal */
export const FileStorageFoldersUpdateResponse$inboundSchema: z.ZodType<
  FileStorageFoldersUpdateResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.UpdateFolderResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type FileStorageFoldersUpdateResponse$Outbound =
  | components.UpdateFolderResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const FileStorageFoldersUpdateResponse$outboundSchema: z.ZodType<
  FileStorageFoldersUpdateResponse$Outbound,
  z.ZodTypeDef,
  FileStorageFoldersUpdateResponse
> = z.union([
  components.UpdateFolderResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FileStorageFoldersUpdateResponse$ {
  /** @deprecated use `FileStorageFoldersUpdateResponse$inboundSchema` instead. */
  export const inboundSchema = FileStorageFoldersUpdateResponse$inboundSchema;
  /** @deprecated use `FileStorageFoldersUpdateResponse$outboundSchema` instead. */
  export const outboundSchema = FileStorageFoldersUpdateResponse$outboundSchema;
  /** @deprecated use `FileStorageFoldersUpdateResponse$Outbound` instead. */
  export type Outbound = FileStorageFoldersUpdateResponse$Outbound;
}
