/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type PosMerchantsAddGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type PosMerchantsAddRequest = {
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  merchant: components.MerchantInput;
};

export type PosMerchantsAddResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * Merchants
   */
  createMerchantResponse?: components.CreateMerchantResponse | undefined;
  /**
   * Unexpected error
   */
  unexpectedErrorResponse?: components.UnexpectedErrorResponse | undefined;
};

/** @internal */
export const PosMerchantsAddGlobals$inboundSchema: z.ZodType<
  PosMerchantsAddGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type PosMerchantsAddGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const PosMerchantsAddGlobals$outboundSchema: z.ZodType<
  PosMerchantsAddGlobals$Outbound,
  z.ZodTypeDef,
  PosMerchantsAddGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosMerchantsAddGlobals$ {
  /** @deprecated use `PosMerchantsAddGlobals$inboundSchema` instead. */
  export const inboundSchema = PosMerchantsAddGlobals$inboundSchema;
  /** @deprecated use `PosMerchantsAddGlobals$outboundSchema` instead. */
  export const outboundSchema = PosMerchantsAddGlobals$outboundSchema;
  /** @deprecated use `PosMerchantsAddGlobals$Outbound` instead. */
  export type Outbound = PosMerchantsAddGlobals$Outbound;
}

/** @internal */
export const PosMerchantsAddRequest$inboundSchema: z.ZodType<
  PosMerchantsAddRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  Merchant: components.MerchantInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Merchant": "merchant",
  });
});

/** @internal */
export type PosMerchantsAddRequest$Outbound = {
  raw: boolean;
  serviceId?: string | undefined;
  Merchant: components.MerchantInput$Outbound;
};

/** @internal */
export const PosMerchantsAddRequest$outboundSchema: z.ZodType<
  PosMerchantsAddRequest$Outbound,
  z.ZodTypeDef,
  PosMerchantsAddRequest
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  merchant: components.MerchantInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    merchant: "Merchant",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosMerchantsAddRequest$ {
  /** @deprecated use `PosMerchantsAddRequest$inboundSchema` instead. */
  export const inboundSchema = PosMerchantsAddRequest$inboundSchema;
  /** @deprecated use `PosMerchantsAddRequest$outboundSchema` instead. */
  export const outboundSchema = PosMerchantsAddRequest$outboundSchema;
  /** @deprecated use `PosMerchantsAddRequest$Outbound` instead. */
  export type Outbound = PosMerchantsAddRequest$Outbound;
}

/** @internal */
export const PosMerchantsAddResponse$inboundSchema: z.ZodType<
  PosMerchantsAddResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  CreateMerchantResponse: components.CreateMerchantResponse$inboundSchema
    .optional(),
  UnexpectedErrorResponse: components.UnexpectedErrorResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "CreateMerchantResponse": "createMerchantResponse",
    "UnexpectedErrorResponse": "unexpectedErrorResponse",
  });
});

/** @internal */
export type PosMerchantsAddResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  CreateMerchantResponse?:
    | components.CreateMerchantResponse$Outbound
    | undefined;
  UnexpectedErrorResponse?:
    | components.UnexpectedErrorResponse$Outbound
    | undefined;
};

/** @internal */
export const PosMerchantsAddResponse$outboundSchema: z.ZodType<
  PosMerchantsAddResponse$Outbound,
  z.ZodTypeDef,
  PosMerchantsAddResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  createMerchantResponse: components.CreateMerchantResponse$outboundSchema
    .optional(),
  unexpectedErrorResponse: components.UnexpectedErrorResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    createMerchantResponse: "CreateMerchantResponse",
    unexpectedErrorResponse: "UnexpectedErrorResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosMerchantsAddResponse$ {
  /** @deprecated use `PosMerchantsAddResponse$inboundSchema` instead. */
  export const inboundSchema = PosMerchantsAddResponse$inboundSchema;
  /** @deprecated use `PosMerchantsAddResponse$outboundSchema` instead. */
  export const outboundSchema = PosMerchantsAddResponse$outboundSchema;
  /** @deprecated use `PosMerchantsAddResponse$Outbound` instead. */
  export type Outbound = PosMerchantsAddResponse$Outbound;
}
