/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CrmCustomObjectSchemasOneGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  consumerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type CrmCustomObjectSchemasOneRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * ID of the consumer which you want to get or push data from
   */
  consumerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
};

export type CrmCustomObjectSchemasOneResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * Custom object schema
   */
  getCustomObjectSchemaResponse?:
    | components.GetCustomObjectSchemaResponse
    | undefined;
  /**
   * Unexpected error
   */
  unexpectedErrorResponse?: components.UnexpectedErrorResponse | undefined;
};

/** @internal */
export const CrmCustomObjectSchemasOneGlobals$inboundSchema: z.ZodType<
  CrmCustomObjectSchemasOneGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  consumerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type CrmCustomObjectSchemasOneGlobals$Outbound = {
  consumerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const CrmCustomObjectSchemasOneGlobals$outboundSchema: z.ZodType<
  CrmCustomObjectSchemasOneGlobals$Outbound,
  z.ZodTypeDef,
  CrmCustomObjectSchemasOneGlobals
> = z.object({
  consumerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CrmCustomObjectSchemasOneGlobals$ {
  /** @deprecated use `CrmCustomObjectSchemasOneGlobals$inboundSchema` instead. */
  export const inboundSchema = CrmCustomObjectSchemasOneGlobals$inboundSchema;
  /** @deprecated use `CrmCustomObjectSchemasOneGlobals$outboundSchema` instead. */
  export const outboundSchema = CrmCustomObjectSchemasOneGlobals$outboundSchema;
  /** @deprecated use `CrmCustomObjectSchemasOneGlobals$Outbound` instead. */
  export type Outbound = CrmCustomObjectSchemasOneGlobals$Outbound;
}

export function crmCustomObjectSchemasOneGlobalsToJSON(
  crmCustomObjectSchemasOneGlobals: CrmCustomObjectSchemasOneGlobals,
): string {
  return JSON.stringify(
    CrmCustomObjectSchemasOneGlobals$outboundSchema.parse(
      crmCustomObjectSchemasOneGlobals,
    ),
  );
}

export function crmCustomObjectSchemasOneGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<CrmCustomObjectSchemasOneGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CrmCustomObjectSchemasOneGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CrmCustomObjectSchemasOneGlobals' from JSON`,
  );
}

/** @internal */
export const CrmCustomObjectSchemasOneRequest$inboundSchema: z.ZodType<
  CrmCustomObjectSchemasOneRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  consumerId: z.string().optional(),
  appId: z.string().optional(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/** @internal */
export type CrmCustomObjectSchemasOneRequest$Outbound = {
  id: string;
  consumerId?: string | undefined;
  appId?: string | undefined;
  serviceId?: string | undefined;
  raw: boolean;
};

/** @internal */
export const CrmCustomObjectSchemasOneRequest$outboundSchema: z.ZodType<
  CrmCustomObjectSchemasOneRequest$Outbound,
  z.ZodTypeDef,
  CrmCustomObjectSchemasOneRequest
> = z.object({
  id: z.string(),
  consumerId: z.string().optional(),
  appId: z.string().optional(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CrmCustomObjectSchemasOneRequest$ {
  /** @deprecated use `CrmCustomObjectSchemasOneRequest$inboundSchema` instead. */
  export const inboundSchema = CrmCustomObjectSchemasOneRequest$inboundSchema;
  /** @deprecated use `CrmCustomObjectSchemasOneRequest$outboundSchema` instead. */
  export const outboundSchema = CrmCustomObjectSchemasOneRequest$outboundSchema;
  /** @deprecated use `CrmCustomObjectSchemasOneRequest$Outbound` instead. */
  export type Outbound = CrmCustomObjectSchemasOneRequest$Outbound;
}

export function crmCustomObjectSchemasOneRequestToJSON(
  crmCustomObjectSchemasOneRequest: CrmCustomObjectSchemasOneRequest,
): string {
  return JSON.stringify(
    CrmCustomObjectSchemasOneRequest$outboundSchema.parse(
      crmCustomObjectSchemasOneRequest,
    ),
  );
}

export function crmCustomObjectSchemasOneRequestFromJSON(
  jsonString: string,
): SafeParseResult<CrmCustomObjectSchemasOneRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CrmCustomObjectSchemasOneRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CrmCustomObjectSchemasOneRequest' from JSON`,
  );
}

/** @internal */
export const CrmCustomObjectSchemasOneResponse$inboundSchema: z.ZodType<
  CrmCustomObjectSchemasOneResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  GetCustomObjectSchemaResponse: components
    .GetCustomObjectSchemaResponse$inboundSchema.optional(),
  UnexpectedErrorResponse: components.UnexpectedErrorResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "GetCustomObjectSchemaResponse": "getCustomObjectSchemaResponse",
    "UnexpectedErrorResponse": "unexpectedErrorResponse",
  });
});

/** @internal */
export type CrmCustomObjectSchemasOneResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  GetCustomObjectSchemaResponse?:
    | components.GetCustomObjectSchemaResponse$Outbound
    | undefined;
  UnexpectedErrorResponse?:
    | components.UnexpectedErrorResponse$Outbound
    | undefined;
};

/** @internal */
export const CrmCustomObjectSchemasOneResponse$outboundSchema: z.ZodType<
  CrmCustomObjectSchemasOneResponse$Outbound,
  z.ZodTypeDef,
  CrmCustomObjectSchemasOneResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  getCustomObjectSchemaResponse: components
    .GetCustomObjectSchemaResponse$outboundSchema.optional(),
  unexpectedErrorResponse: components.UnexpectedErrorResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    getCustomObjectSchemaResponse: "GetCustomObjectSchemaResponse",
    unexpectedErrorResponse: "UnexpectedErrorResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CrmCustomObjectSchemasOneResponse$ {
  /** @deprecated use `CrmCustomObjectSchemasOneResponse$inboundSchema` instead. */
  export const inboundSchema = CrmCustomObjectSchemasOneResponse$inboundSchema;
  /** @deprecated use `CrmCustomObjectSchemasOneResponse$outboundSchema` instead. */
  export const outboundSchema =
    CrmCustomObjectSchemasOneResponse$outboundSchema;
  /** @deprecated use `CrmCustomObjectSchemasOneResponse$Outbound` instead. */
  export type Outbound = CrmCustomObjectSchemasOneResponse$Outbound;
}

export function crmCustomObjectSchemasOneResponseToJSON(
  crmCustomObjectSchemasOneResponse: CrmCustomObjectSchemasOneResponse,
): string {
  return JSON.stringify(
    CrmCustomObjectSchemasOneResponse$outboundSchema.parse(
      crmCustomObjectSchemasOneResponse,
    ),
  );
}

export function crmCustomObjectSchemasOneResponseFromJSON(
  jsonString: string,
): SafeParseResult<CrmCustomObjectSchemasOneResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CrmCustomObjectSchemasOneResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CrmCustomObjectSchemasOneResponse' from JSON`,
  );
}
