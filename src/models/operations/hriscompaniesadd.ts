/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type HrisCompaniesAddGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type HrisCompaniesAddRequest = {
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  hrisCompany: components.HrisCompanyInput;
};

export type HrisCompaniesAddResponse =
  | components.CreateHrisCompanyResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const HrisCompaniesAddGlobals$inboundSchema: z.ZodType<
  HrisCompaniesAddGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type HrisCompaniesAddGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const HrisCompaniesAddGlobals$outboundSchema: z.ZodType<
  HrisCompaniesAddGlobals$Outbound,
  z.ZodTypeDef,
  HrisCompaniesAddGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCompaniesAddGlobals$ {
  /** @deprecated use `HrisCompaniesAddGlobals$inboundSchema` instead. */
  export const inboundSchema = HrisCompaniesAddGlobals$inboundSchema;
  /** @deprecated use `HrisCompaniesAddGlobals$outboundSchema` instead. */
  export const outboundSchema = HrisCompaniesAddGlobals$outboundSchema;
  /** @deprecated use `HrisCompaniesAddGlobals$Outbound` instead. */
  export type Outbound = HrisCompaniesAddGlobals$Outbound;
}

/** @internal */
export const HrisCompaniesAddRequest$inboundSchema: z.ZodType<
  HrisCompaniesAddRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  HrisCompany: components.HrisCompanyInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "HrisCompany": "hrisCompany",
  });
});

/** @internal */
export type HrisCompaniesAddRequest$Outbound = {
  raw: boolean;
  serviceId?: string | undefined;
  HrisCompany: components.HrisCompanyInput$Outbound;
};

/** @internal */
export const HrisCompaniesAddRequest$outboundSchema: z.ZodType<
  HrisCompaniesAddRequest$Outbound,
  z.ZodTypeDef,
  HrisCompaniesAddRequest
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  hrisCompany: components.HrisCompanyInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    hrisCompany: "HrisCompany",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCompaniesAddRequest$ {
  /** @deprecated use `HrisCompaniesAddRequest$inboundSchema` instead. */
  export const inboundSchema = HrisCompaniesAddRequest$inboundSchema;
  /** @deprecated use `HrisCompaniesAddRequest$outboundSchema` instead. */
  export const outboundSchema = HrisCompaniesAddRequest$outboundSchema;
  /** @deprecated use `HrisCompaniesAddRequest$Outbound` instead. */
  export type Outbound = HrisCompaniesAddRequest$Outbound;
}

/** @internal */
export const HrisCompaniesAddResponse$inboundSchema: z.ZodType<
  HrisCompaniesAddResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.CreateHrisCompanyResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type HrisCompaniesAddResponse$Outbound =
  | components.CreateHrisCompanyResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const HrisCompaniesAddResponse$outboundSchema: z.ZodType<
  HrisCompaniesAddResponse$Outbound,
  z.ZodTypeDef,
  HrisCompaniesAddResponse
> = z.union([
  components.CreateHrisCompanyResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCompaniesAddResponse$ {
  /** @deprecated use `HrisCompaniesAddResponse$inboundSchema` instead. */
  export const inboundSchema = HrisCompaniesAddResponse$inboundSchema;
  /** @deprecated use `HrisCompaniesAddResponse$outboundSchema` instead. */
  export const outboundSchema = HrisCompaniesAddResponse$outboundSchema;
  /** @deprecated use `HrisCompaniesAddResponse$Outbound` instead. */
  export type Outbound = HrisCompaniesAddResponse$Outbound;
}
