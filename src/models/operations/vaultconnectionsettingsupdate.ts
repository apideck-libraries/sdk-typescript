/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type VaultConnectionSettingsUpdateGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type VaultConnectionSettingsUpdateRequest = {
  /**
   * Service ID of the resource to return
   */
  serviceId: string;
  /**
   * Unified API
   */
  unifiedApi: string;
  /**
   * Name of the resource (plural)
   */
  resource: string;
  /**
   * Fields that need to be updated on the resource
   */
  connection: components.ConnectionInput;
};

export type VaultConnectionSettingsUpdateResponse =
  | components.UpdateConnectionResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const VaultConnectionSettingsUpdateGlobals$inboundSchema: z.ZodType<
  VaultConnectionSettingsUpdateGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type VaultConnectionSettingsUpdateGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const VaultConnectionSettingsUpdateGlobals$outboundSchema: z.ZodType<
  VaultConnectionSettingsUpdateGlobals$Outbound,
  z.ZodTypeDef,
  VaultConnectionSettingsUpdateGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VaultConnectionSettingsUpdateGlobals$ {
  /** @deprecated use `VaultConnectionSettingsUpdateGlobals$inboundSchema` instead. */
  export const inboundSchema =
    VaultConnectionSettingsUpdateGlobals$inboundSchema;
  /** @deprecated use `VaultConnectionSettingsUpdateGlobals$outboundSchema` instead. */
  export const outboundSchema =
    VaultConnectionSettingsUpdateGlobals$outboundSchema;
  /** @deprecated use `VaultConnectionSettingsUpdateGlobals$Outbound` instead. */
  export type Outbound = VaultConnectionSettingsUpdateGlobals$Outbound;
}

/** @internal */
export const VaultConnectionSettingsUpdateRequest$inboundSchema: z.ZodType<
  VaultConnectionSettingsUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  service_id: z.string(),
  unified_api: z.string(),
  resource: z.string(),
  Connection: components.ConnectionInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "service_id": "serviceId",
    "unified_api": "unifiedApi",
    "Connection": "connection",
  });
});

/** @internal */
export type VaultConnectionSettingsUpdateRequest$Outbound = {
  service_id: string;
  unified_api: string;
  resource: string;
  Connection: components.ConnectionInput$Outbound;
};

/** @internal */
export const VaultConnectionSettingsUpdateRequest$outboundSchema: z.ZodType<
  VaultConnectionSettingsUpdateRequest$Outbound,
  z.ZodTypeDef,
  VaultConnectionSettingsUpdateRequest
> = z.object({
  serviceId: z.string(),
  unifiedApi: z.string(),
  resource: z.string(),
  connection: components.ConnectionInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    serviceId: "service_id",
    unifiedApi: "unified_api",
    connection: "Connection",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VaultConnectionSettingsUpdateRequest$ {
  /** @deprecated use `VaultConnectionSettingsUpdateRequest$inboundSchema` instead. */
  export const inboundSchema =
    VaultConnectionSettingsUpdateRequest$inboundSchema;
  /** @deprecated use `VaultConnectionSettingsUpdateRequest$outboundSchema` instead. */
  export const outboundSchema =
    VaultConnectionSettingsUpdateRequest$outboundSchema;
  /** @deprecated use `VaultConnectionSettingsUpdateRequest$Outbound` instead. */
  export type Outbound = VaultConnectionSettingsUpdateRequest$Outbound;
}

/** @internal */
export const VaultConnectionSettingsUpdateResponse$inboundSchema: z.ZodType<
  VaultConnectionSettingsUpdateResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.UpdateConnectionResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type VaultConnectionSettingsUpdateResponse$Outbound =
  | components.UpdateConnectionResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const VaultConnectionSettingsUpdateResponse$outboundSchema: z.ZodType<
  VaultConnectionSettingsUpdateResponse$Outbound,
  z.ZodTypeDef,
  VaultConnectionSettingsUpdateResponse
> = z.union([
  components.UpdateConnectionResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VaultConnectionSettingsUpdateResponse$ {
  /** @deprecated use `VaultConnectionSettingsUpdateResponse$inboundSchema` instead. */
  export const inboundSchema =
    VaultConnectionSettingsUpdateResponse$inboundSchema;
  /** @deprecated use `VaultConnectionSettingsUpdateResponse$outboundSchema` instead. */
  export const outboundSchema =
    VaultConnectionSettingsUpdateResponse$outboundSchema;
  /** @deprecated use `VaultConnectionSettingsUpdateResponse$Outbound` instead. */
  export type Outbound = VaultConnectionSettingsUpdateResponse$Outbound;
}
