/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type FileStorageDrivesUpdateGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type FileStorageDrivesUpdateRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  drive: components.DriveInput;
};

export type FileStorageDrivesUpdateResponse =
  | components.UpdateDriveResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const FileStorageDrivesUpdateGlobals$inboundSchema: z.ZodType<
  FileStorageDrivesUpdateGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type FileStorageDrivesUpdateGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const FileStorageDrivesUpdateGlobals$outboundSchema: z.ZodType<
  FileStorageDrivesUpdateGlobals$Outbound,
  z.ZodTypeDef,
  FileStorageDrivesUpdateGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FileStorageDrivesUpdateGlobals$ {
  /** @deprecated use `FileStorageDrivesUpdateGlobals$inboundSchema` instead. */
  export const inboundSchema = FileStorageDrivesUpdateGlobals$inboundSchema;
  /** @deprecated use `FileStorageDrivesUpdateGlobals$outboundSchema` instead. */
  export const outboundSchema = FileStorageDrivesUpdateGlobals$outboundSchema;
  /** @deprecated use `FileStorageDrivesUpdateGlobals$Outbound` instead. */
  export type Outbound = FileStorageDrivesUpdateGlobals$Outbound;
}

/** @internal */
export const FileStorageDrivesUpdateRequest$inboundSchema: z.ZodType<
  FileStorageDrivesUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  Drive: components.DriveInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Drive": "drive",
  });
});

/** @internal */
export type FileStorageDrivesUpdateRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
  Drive: components.DriveInput$Outbound;
};

/** @internal */
export const FileStorageDrivesUpdateRequest$outboundSchema: z.ZodType<
  FileStorageDrivesUpdateRequest$Outbound,
  z.ZodTypeDef,
  FileStorageDrivesUpdateRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  drive: components.DriveInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    drive: "Drive",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FileStorageDrivesUpdateRequest$ {
  /** @deprecated use `FileStorageDrivesUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = FileStorageDrivesUpdateRequest$inboundSchema;
  /** @deprecated use `FileStorageDrivesUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = FileStorageDrivesUpdateRequest$outboundSchema;
  /** @deprecated use `FileStorageDrivesUpdateRequest$Outbound` instead. */
  export type Outbound = FileStorageDrivesUpdateRequest$Outbound;
}

/** @internal */
export const FileStorageDrivesUpdateResponse$inboundSchema: z.ZodType<
  FileStorageDrivesUpdateResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.UpdateDriveResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type FileStorageDrivesUpdateResponse$Outbound =
  | components.UpdateDriveResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const FileStorageDrivesUpdateResponse$outboundSchema: z.ZodType<
  FileStorageDrivesUpdateResponse$Outbound,
  z.ZodTypeDef,
  FileStorageDrivesUpdateResponse
> = z.union([
  components.UpdateDriveResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FileStorageDrivesUpdateResponse$ {
  /** @deprecated use `FileStorageDrivesUpdateResponse$inboundSchema` instead. */
  export const inboundSchema = FileStorageDrivesUpdateResponse$inboundSchema;
  /** @deprecated use `FileStorageDrivesUpdateResponse$outboundSchema` instead. */
  export const outboundSchema = FileStorageDrivesUpdateResponse$outboundSchema;
  /** @deprecated use `FileStorageDrivesUpdateResponse$Outbound` instead. */
  export type Outbound = FileStorageDrivesUpdateResponse$Outbound;
}
