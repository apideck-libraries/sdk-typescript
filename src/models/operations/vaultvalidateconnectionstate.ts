/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type VaultValidateConnectionStateGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type VaultValidateConnectionStateRequestBody = {};

export type VaultValidateConnectionStateRequest = {
  /**
   * Service ID of the resource to return
   */
  serviceId: string;
  /**
   * Unified API
   */
  unifiedApi: string;
  requestBody?: VaultValidateConnectionStateRequestBody | undefined;
};

export type VaultValidateConnectionStateResponse =
  | components.ValidateConnectionStateResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const VaultValidateConnectionStateGlobals$inboundSchema: z.ZodType<
  VaultValidateConnectionStateGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type VaultValidateConnectionStateGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const VaultValidateConnectionStateGlobals$outboundSchema: z.ZodType<
  VaultValidateConnectionStateGlobals$Outbound,
  z.ZodTypeDef,
  VaultValidateConnectionStateGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VaultValidateConnectionStateGlobals$ {
  /** @deprecated use `VaultValidateConnectionStateGlobals$inboundSchema` instead. */
  export const inboundSchema =
    VaultValidateConnectionStateGlobals$inboundSchema;
  /** @deprecated use `VaultValidateConnectionStateGlobals$outboundSchema` instead. */
  export const outboundSchema =
    VaultValidateConnectionStateGlobals$outboundSchema;
  /** @deprecated use `VaultValidateConnectionStateGlobals$Outbound` instead. */
  export type Outbound = VaultValidateConnectionStateGlobals$Outbound;
}

/** @internal */
export const VaultValidateConnectionStateRequestBody$inboundSchema: z.ZodType<
  VaultValidateConnectionStateRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type VaultValidateConnectionStateRequestBody$Outbound = {};

/** @internal */
export const VaultValidateConnectionStateRequestBody$outboundSchema: z.ZodType<
  VaultValidateConnectionStateRequestBody$Outbound,
  z.ZodTypeDef,
  VaultValidateConnectionStateRequestBody
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VaultValidateConnectionStateRequestBody$ {
  /** @deprecated use `VaultValidateConnectionStateRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    VaultValidateConnectionStateRequestBody$inboundSchema;
  /** @deprecated use `VaultValidateConnectionStateRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    VaultValidateConnectionStateRequestBody$outboundSchema;
  /** @deprecated use `VaultValidateConnectionStateRequestBody$Outbound` instead. */
  export type Outbound = VaultValidateConnectionStateRequestBody$Outbound;
}

/** @internal */
export const VaultValidateConnectionStateRequest$inboundSchema: z.ZodType<
  VaultValidateConnectionStateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  service_id: z.string(),
  unified_api: z.string(),
  RequestBody: z.lazy(() =>
    VaultValidateConnectionStateRequestBody$inboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "service_id": "serviceId",
    "unified_api": "unifiedApi",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type VaultValidateConnectionStateRequest$Outbound = {
  service_id: string;
  unified_api: string;
  RequestBody?: VaultValidateConnectionStateRequestBody$Outbound | undefined;
};

/** @internal */
export const VaultValidateConnectionStateRequest$outboundSchema: z.ZodType<
  VaultValidateConnectionStateRequest$Outbound,
  z.ZodTypeDef,
  VaultValidateConnectionStateRequest
> = z.object({
  serviceId: z.string(),
  unifiedApi: z.string(),
  requestBody: z.lazy(() =>
    VaultValidateConnectionStateRequestBody$outboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    serviceId: "service_id",
    unifiedApi: "unified_api",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VaultValidateConnectionStateRequest$ {
  /** @deprecated use `VaultValidateConnectionStateRequest$inboundSchema` instead. */
  export const inboundSchema =
    VaultValidateConnectionStateRequest$inboundSchema;
  /** @deprecated use `VaultValidateConnectionStateRequest$outboundSchema` instead. */
  export const outboundSchema =
    VaultValidateConnectionStateRequest$outboundSchema;
  /** @deprecated use `VaultValidateConnectionStateRequest$Outbound` instead. */
  export type Outbound = VaultValidateConnectionStateRequest$Outbound;
}

/** @internal */
export const VaultValidateConnectionStateResponse$inboundSchema: z.ZodType<
  VaultValidateConnectionStateResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.ValidateConnectionStateResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type VaultValidateConnectionStateResponse$Outbound =
  | components.ValidateConnectionStateResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const VaultValidateConnectionStateResponse$outboundSchema: z.ZodType<
  VaultValidateConnectionStateResponse$Outbound,
  z.ZodTypeDef,
  VaultValidateConnectionStateResponse
> = z.union([
  components.ValidateConnectionStateResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VaultValidateConnectionStateResponse$ {
  /** @deprecated use `VaultValidateConnectionStateResponse$inboundSchema` instead. */
  export const inboundSchema =
    VaultValidateConnectionStateResponse$inboundSchema;
  /** @deprecated use `VaultValidateConnectionStateResponse$outboundSchema` instead. */
  export const outboundSchema =
    VaultValidateConnectionStateResponse$outboundSchema;
  /** @deprecated use `VaultValidateConnectionStateResponse$Outbound` instead. */
  export type Outbound = VaultValidateConnectionStateResponse$Outbound;
}
