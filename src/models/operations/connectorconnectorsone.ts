/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type ConnectorConnectorsOneGlobals = {
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type ConnectorConnectorsOneRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
};

export type ConnectorConnectorsOneResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * Connectors
   */
  getConnectorResponse?: components.GetConnectorResponse | undefined;
  /**
   * Unexpected error
   */
  unexpectedErrorResponse?: components.UnexpectedErrorResponse | undefined;
};

/** @internal */
export const ConnectorConnectorsOneGlobals$inboundSchema: z.ZodType<
  ConnectorConnectorsOneGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.string().optional(),
});

/** @internal */
export type ConnectorConnectorsOneGlobals$Outbound = {
  appId?: string | undefined;
};

/** @internal */
export const ConnectorConnectorsOneGlobals$outboundSchema: z.ZodType<
  ConnectorConnectorsOneGlobals$Outbound,
  z.ZodTypeDef,
  ConnectorConnectorsOneGlobals
> = z.object({
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConnectorConnectorsOneGlobals$ {
  /** @deprecated use `ConnectorConnectorsOneGlobals$inboundSchema` instead. */
  export const inboundSchema = ConnectorConnectorsOneGlobals$inboundSchema;
  /** @deprecated use `ConnectorConnectorsOneGlobals$outboundSchema` instead. */
  export const outboundSchema = ConnectorConnectorsOneGlobals$outboundSchema;
  /** @deprecated use `ConnectorConnectorsOneGlobals$Outbound` instead. */
  export type Outbound = ConnectorConnectorsOneGlobals$Outbound;
}

/** @internal */
export const ConnectorConnectorsOneRequest$inboundSchema: z.ZodType<
  ConnectorConnectorsOneRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type ConnectorConnectorsOneRequest$Outbound = {
  id: string;
};

/** @internal */
export const ConnectorConnectorsOneRequest$outboundSchema: z.ZodType<
  ConnectorConnectorsOneRequest$Outbound,
  z.ZodTypeDef,
  ConnectorConnectorsOneRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConnectorConnectorsOneRequest$ {
  /** @deprecated use `ConnectorConnectorsOneRequest$inboundSchema` instead. */
  export const inboundSchema = ConnectorConnectorsOneRequest$inboundSchema;
  /** @deprecated use `ConnectorConnectorsOneRequest$outboundSchema` instead. */
  export const outboundSchema = ConnectorConnectorsOneRequest$outboundSchema;
  /** @deprecated use `ConnectorConnectorsOneRequest$Outbound` instead. */
  export type Outbound = ConnectorConnectorsOneRequest$Outbound;
}

/** @internal */
export const ConnectorConnectorsOneResponse$inboundSchema: z.ZodType<
  ConnectorConnectorsOneResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  GetConnectorResponse: components.GetConnectorResponse$inboundSchema
    .optional(),
  UnexpectedErrorResponse: components.UnexpectedErrorResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "GetConnectorResponse": "getConnectorResponse",
    "UnexpectedErrorResponse": "unexpectedErrorResponse",
  });
});

/** @internal */
export type ConnectorConnectorsOneResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  GetConnectorResponse?: components.GetConnectorResponse$Outbound | undefined;
  UnexpectedErrorResponse?:
    | components.UnexpectedErrorResponse$Outbound
    | undefined;
};

/** @internal */
export const ConnectorConnectorsOneResponse$outboundSchema: z.ZodType<
  ConnectorConnectorsOneResponse$Outbound,
  z.ZodTypeDef,
  ConnectorConnectorsOneResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  getConnectorResponse: components.GetConnectorResponse$outboundSchema
    .optional(),
  unexpectedErrorResponse: components.UnexpectedErrorResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    getConnectorResponse: "GetConnectorResponse",
    unexpectedErrorResponse: "UnexpectedErrorResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConnectorConnectorsOneResponse$ {
  /** @deprecated use `ConnectorConnectorsOneResponse$inboundSchema` instead. */
  export const inboundSchema = ConnectorConnectorsOneResponse$inboundSchema;
  /** @deprecated use `ConnectorConnectorsOneResponse$outboundSchema` instead. */
  export const outboundSchema = ConnectorConnectorsOneResponse$outboundSchema;
  /** @deprecated use `ConnectorConnectorsOneResponse$Outbound` instead. */
  export type Outbound = ConnectorConnectorsOneResponse$Outbound;
}
