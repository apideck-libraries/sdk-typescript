/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type WebhookEventLogsAllGlobals = {
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type WebhookEventLogsAllRequest = {
  /**
   * Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
   */
  cursor?: string | null | undefined;
  /**
   * Number of results to return. Minimum 1, Maximum 200, Default 20
   */
  limit?: number | undefined;
  /**
   * Filter results
   */
  filter?: components.WebhookEventLogsFilter | undefined;
};

export type WebhookEventLogsAllResponse =
  | components.GetWebhookEventLogsResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const WebhookEventLogsAllGlobals$inboundSchema: z.ZodType<
  WebhookEventLogsAllGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.string().optional(),
});

/** @internal */
export type WebhookEventLogsAllGlobals$Outbound = {
  appId?: string | undefined;
};

/** @internal */
export const WebhookEventLogsAllGlobals$outboundSchema: z.ZodType<
  WebhookEventLogsAllGlobals$Outbound,
  z.ZodTypeDef,
  WebhookEventLogsAllGlobals
> = z.object({
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookEventLogsAllGlobals$ {
  /** @deprecated use `WebhookEventLogsAllGlobals$inboundSchema` instead. */
  export const inboundSchema = WebhookEventLogsAllGlobals$inboundSchema;
  /** @deprecated use `WebhookEventLogsAllGlobals$outboundSchema` instead. */
  export const outboundSchema = WebhookEventLogsAllGlobals$outboundSchema;
  /** @deprecated use `WebhookEventLogsAllGlobals$Outbound` instead. */
  export type Outbound = WebhookEventLogsAllGlobals$Outbound;
}

/** @internal */
export const WebhookEventLogsAllRequest$inboundSchema: z.ZodType<
  WebhookEventLogsAllRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  cursor: z.nullable(z.string()).optional(),
  limit: z.number().int().default(20),
  filter: components.WebhookEventLogsFilter$inboundSchema.optional(),
});

/** @internal */
export type WebhookEventLogsAllRequest$Outbound = {
  cursor?: string | null | undefined;
  limit: number;
  filter?: components.WebhookEventLogsFilter$Outbound | undefined;
};

/** @internal */
export const WebhookEventLogsAllRequest$outboundSchema: z.ZodType<
  WebhookEventLogsAllRequest$Outbound,
  z.ZodTypeDef,
  WebhookEventLogsAllRequest
> = z.object({
  cursor: z.nullable(z.string()).optional(),
  limit: z.number().int().default(20),
  filter: components.WebhookEventLogsFilter$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookEventLogsAllRequest$ {
  /** @deprecated use `WebhookEventLogsAllRequest$inboundSchema` instead. */
  export const inboundSchema = WebhookEventLogsAllRequest$inboundSchema;
  /** @deprecated use `WebhookEventLogsAllRequest$outboundSchema` instead. */
  export const outboundSchema = WebhookEventLogsAllRequest$outboundSchema;
  /** @deprecated use `WebhookEventLogsAllRequest$Outbound` instead. */
  export type Outbound = WebhookEventLogsAllRequest$Outbound;
}

/** @internal */
export const WebhookEventLogsAllResponse$inboundSchema: z.ZodType<
  WebhookEventLogsAllResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.GetWebhookEventLogsResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type WebhookEventLogsAllResponse$Outbound =
  | components.GetWebhookEventLogsResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const WebhookEventLogsAllResponse$outboundSchema: z.ZodType<
  WebhookEventLogsAllResponse$Outbound,
  z.ZodTypeDef,
  WebhookEventLogsAllResponse
> = z.union([
  components.GetWebhookEventLogsResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookEventLogsAllResponse$ {
  /** @deprecated use `WebhookEventLogsAllResponse$inboundSchema` instead. */
  export const inboundSchema = WebhookEventLogsAllResponse$inboundSchema;
  /** @deprecated use `WebhookEventLogsAllResponse$outboundSchema` instead. */
  export const outboundSchema = WebhookEventLogsAllResponse$outboundSchema;
  /** @deprecated use `WebhookEventLogsAllResponse$Outbound` instead. */
  export type Outbound = WebhookEventLogsAllResponse$Outbound;
}
