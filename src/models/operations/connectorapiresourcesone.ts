/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ConnectorApiResourcesOneGlobals = {
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type ConnectorApiResourcesOneRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * ID of the resource you are acting upon.
   */
  resourceId: string;
};

export type ConnectorApiResourcesOneResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * ApiResources
   */
  getApiResourceResponse?: components.GetApiResourceResponse | undefined;
  /**
   * Unexpected error
   */
  unexpectedErrorResponse?: components.UnexpectedErrorResponse | undefined;
};

/** @internal */
export const ConnectorApiResourcesOneGlobals$inboundSchema: z.ZodType<
  ConnectorApiResourcesOneGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.string().optional(),
});

/** @internal */
export type ConnectorApiResourcesOneGlobals$Outbound = {
  appId?: string | undefined;
};

/** @internal */
export const ConnectorApiResourcesOneGlobals$outboundSchema: z.ZodType<
  ConnectorApiResourcesOneGlobals$Outbound,
  z.ZodTypeDef,
  ConnectorApiResourcesOneGlobals
> = z.object({
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConnectorApiResourcesOneGlobals$ {
  /** @deprecated use `ConnectorApiResourcesOneGlobals$inboundSchema` instead. */
  export const inboundSchema = ConnectorApiResourcesOneGlobals$inboundSchema;
  /** @deprecated use `ConnectorApiResourcesOneGlobals$outboundSchema` instead. */
  export const outboundSchema = ConnectorApiResourcesOneGlobals$outboundSchema;
  /** @deprecated use `ConnectorApiResourcesOneGlobals$Outbound` instead. */
  export type Outbound = ConnectorApiResourcesOneGlobals$Outbound;
}

export function connectorApiResourcesOneGlobalsToJSON(
  connectorApiResourcesOneGlobals: ConnectorApiResourcesOneGlobals,
): string {
  return JSON.stringify(
    ConnectorApiResourcesOneGlobals$outboundSchema.parse(
      connectorApiResourcesOneGlobals,
    ),
  );
}

export function connectorApiResourcesOneGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<ConnectorApiResourcesOneGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ConnectorApiResourcesOneGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ConnectorApiResourcesOneGlobals' from JSON`,
  );
}

/** @internal */
export const ConnectorApiResourcesOneRequest$inboundSchema: z.ZodType<
  ConnectorApiResourcesOneRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  resource_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "resource_id": "resourceId",
  });
});

/** @internal */
export type ConnectorApiResourcesOneRequest$Outbound = {
  id: string;
  resource_id: string;
};

/** @internal */
export const ConnectorApiResourcesOneRequest$outboundSchema: z.ZodType<
  ConnectorApiResourcesOneRequest$Outbound,
  z.ZodTypeDef,
  ConnectorApiResourcesOneRequest
> = z.object({
  id: z.string(),
  resourceId: z.string(),
}).transform((v) => {
  return remap$(v, {
    resourceId: "resource_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConnectorApiResourcesOneRequest$ {
  /** @deprecated use `ConnectorApiResourcesOneRequest$inboundSchema` instead. */
  export const inboundSchema = ConnectorApiResourcesOneRequest$inboundSchema;
  /** @deprecated use `ConnectorApiResourcesOneRequest$outboundSchema` instead. */
  export const outboundSchema = ConnectorApiResourcesOneRequest$outboundSchema;
  /** @deprecated use `ConnectorApiResourcesOneRequest$Outbound` instead. */
  export type Outbound = ConnectorApiResourcesOneRequest$Outbound;
}

export function connectorApiResourcesOneRequestToJSON(
  connectorApiResourcesOneRequest: ConnectorApiResourcesOneRequest,
): string {
  return JSON.stringify(
    ConnectorApiResourcesOneRequest$outboundSchema.parse(
      connectorApiResourcesOneRequest,
    ),
  );
}

export function connectorApiResourcesOneRequestFromJSON(
  jsonString: string,
): SafeParseResult<ConnectorApiResourcesOneRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ConnectorApiResourcesOneRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ConnectorApiResourcesOneRequest' from JSON`,
  );
}

/** @internal */
export const ConnectorApiResourcesOneResponse$inboundSchema: z.ZodType<
  ConnectorApiResourcesOneResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  GetApiResourceResponse: components.GetApiResourceResponse$inboundSchema
    .optional(),
  UnexpectedErrorResponse: components.UnexpectedErrorResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "GetApiResourceResponse": "getApiResourceResponse",
    "UnexpectedErrorResponse": "unexpectedErrorResponse",
  });
});

/** @internal */
export type ConnectorApiResourcesOneResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  GetApiResourceResponse?:
    | components.GetApiResourceResponse$Outbound
    | undefined;
  UnexpectedErrorResponse?:
    | components.UnexpectedErrorResponse$Outbound
    | undefined;
};

/** @internal */
export const ConnectorApiResourcesOneResponse$outboundSchema: z.ZodType<
  ConnectorApiResourcesOneResponse$Outbound,
  z.ZodTypeDef,
  ConnectorApiResourcesOneResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  getApiResourceResponse: components.GetApiResourceResponse$outboundSchema
    .optional(),
  unexpectedErrorResponse: components.UnexpectedErrorResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    getApiResourceResponse: "GetApiResourceResponse",
    unexpectedErrorResponse: "UnexpectedErrorResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConnectorApiResourcesOneResponse$ {
  /** @deprecated use `ConnectorApiResourcesOneResponse$inboundSchema` instead. */
  export const inboundSchema = ConnectorApiResourcesOneResponse$inboundSchema;
  /** @deprecated use `ConnectorApiResourcesOneResponse$outboundSchema` instead. */
  export const outboundSchema = ConnectorApiResourcesOneResponse$outboundSchema;
  /** @deprecated use `ConnectorApiResourcesOneResponse$Outbound` instead. */
  export type Outbound = ConnectorApiResourcesOneResponse$Outbound;
}

export function connectorApiResourcesOneResponseToJSON(
  connectorApiResourcesOneResponse: ConnectorApiResourcesOneResponse,
): string {
  return JSON.stringify(
    ConnectorApiResourcesOneResponse$outboundSchema.parse(
      connectorApiResourcesOneResponse,
    ),
  );
}

export function connectorApiResourcesOneResponseFromJSON(
  jsonString: string,
): SafeParseResult<ConnectorApiResourcesOneResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ConnectorApiResourcesOneResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ConnectorApiResourcesOneResponse' from JSON`,
  );
}
