/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type PosModifiersUpdateGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type PosModifiersUpdateRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  modifier: components.ModifierInput;
};

export type PosModifiersUpdateResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * Modifiers
   */
  updateModifierResponse?: components.UpdateModifierResponse | undefined;
  /**
   * Unexpected error
   */
  unexpectedErrorResponse?: components.UnexpectedErrorResponse | undefined;
};

/** @internal */
export const PosModifiersUpdateGlobals$inboundSchema: z.ZodType<
  PosModifiersUpdateGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type PosModifiersUpdateGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const PosModifiersUpdateGlobals$outboundSchema: z.ZodType<
  PosModifiersUpdateGlobals$Outbound,
  z.ZodTypeDef,
  PosModifiersUpdateGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosModifiersUpdateGlobals$ {
  /** @deprecated use `PosModifiersUpdateGlobals$inboundSchema` instead. */
  export const inboundSchema = PosModifiersUpdateGlobals$inboundSchema;
  /** @deprecated use `PosModifiersUpdateGlobals$outboundSchema` instead. */
  export const outboundSchema = PosModifiersUpdateGlobals$outboundSchema;
  /** @deprecated use `PosModifiersUpdateGlobals$Outbound` instead. */
  export type Outbound = PosModifiersUpdateGlobals$Outbound;
}

/** @internal */
export const PosModifiersUpdateRequest$inboundSchema: z.ZodType<
  PosModifiersUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  Modifier: components.ModifierInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Modifier": "modifier",
  });
});

/** @internal */
export type PosModifiersUpdateRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
  Modifier: components.ModifierInput$Outbound;
};

/** @internal */
export const PosModifiersUpdateRequest$outboundSchema: z.ZodType<
  PosModifiersUpdateRequest$Outbound,
  z.ZodTypeDef,
  PosModifiersUpdateRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  modifier: components.ModifierInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    modifier: "Modifier",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosModifiersUpdateRequest$ {
  /** @deprecated use `PosModifiersUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = PosModifiersUpdateRequest$inboundSchema;
  /** @deprecated use `PosModifiersUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = PosModifiersUpdateRequest$outboundSchema;
  /** @deprecated use `PosModifiersUpdateRequest$Outbound` instead. */
  export type Outbound = PosModifiersUpdateRequest$Outbound;
}

/** @internal */
export const PosModifiersUpdateResponse$inboundSchema: z.ZodType<
  PosModifiersUpdateResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  UpdateModifierResponse: components.UpdateModifierResponse$inboundSchema
    .optional(),
  UnexpectedErrorResponse: components.UnexpectedErrorResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "UpdateModifierResponse": "updateModifierResponse",
    "UnexpectedErrorResponse": "unexpectedErrorResponse",
  });
});

/** @internal */
export type PosModifiersUpdateResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  UpdateModifierResponse?:
    | components.UpdateModifierResponse$Outbound
    | undefined;
  UnexpectedErrorResponse?:
    | components.UnexpectedErrorResponse$Outbound
    | undefined;
};

/** @internal */
export const PosModifiersUpdateResponse$outboundSchema: z.ZodType<
  PosModifiersUpdateResponse$Outbound,
  z.ZodTypeDef,
  PosModifiersUpdateResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  updateModifierResponse: components.UpdateModifierResponse$outboundSchema
    .optional(),
  unexpectedErrorResponse: components.UnexpectedErrorResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    updateModifierResponse: "UpdateModifierResponse",
    unexpectedErrorResponse: "UnexpectedErrorResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosModifiersUpdateResponse$ {
  /** @deprecated use `PosModifiersUpdateResponse$inboundSchema` instead. */
  export const inboundSchema = PosModifiersUpdateResponse$inboundSchema;
  /** @deprecated use `PosModifiersUpdateResponse$outboundSchema` instead. */
  export const outboundSchema = PosModifiersUpdateResponse$outboundSchema;
  /** @deprecated use `PosModifiersUpdateResponse$Outbound` instead. */
  export type Outbound = PosModifiersUpdateResponse$Outbound;
}
