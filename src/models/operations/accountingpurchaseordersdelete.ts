/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type AccountingPurchaseOrdersDeleteGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type AccountingPurchaseOrdersDeleteRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
};

export type AccountingPurchaseOrdersDeleteResponse =
  | components.DeletePurchaseOrderResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const AccountingPurchaseOrdersDeleteGlobals$inboundSchema: z.ZodType<
  AccountingPurchaseOrdersDeleteGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type AccountingPurchaseOrdersDeleteGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const AccountingPurchaseOrdersDeleteGlobals$outboundSchema: z.ZodType<
  AccountingPurchaseOrdersDeleteGlobals$Outbound,
  z.ZodTypeDef,
  AccountingPurchaseOrdersDeleteGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingPurchaseOrdersDeleteGlobals$ {
  /** @deprecated use `AccountingPurchaseOrdersDeleteGlobals$inboundSchema` instead. */
  export const inboundSchema =
    AccountingPurchaseOrdersDeleteGlobals$inboundSchema;
  /** @deprecated use `AccountingPurchaseOrdersDeleteGlobals$outboundSchema` instead. */
  export const outboundSchema =
    AccountingPurchaseOrdersDeleteGlobals$outboundSchema;
  /** @deprecated use `AccountingPurchaseOrdersDeleteGlobals$Outbound` instead. */
  export type Outbound = AccountingPurchaseOrdersDeleteGlobals$Outbound;
}

/** @internal */
export const AccountingPurchaseOrdersDeleteRequest$inboundSchema: z.ZodType<
  AccountingPurchaseOrdersDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/** @internal */
export type AccountingPurchaseOrdersDeleteRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
};

/** @internal */
export const AccountingPurchaseOrdersDeleteRequest$outboundSchema: z.ZodType<
  AccountingPurchaseOrdersDeleteRequest$Outbound,
  z.ZodTypeDef,
  AccountingPurchaseOrdersDeleteRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingPurchaseOrdersDeleteRequest$ {
  /** @deprecated use `AccountingPurchaseOrdersDeleteRequest$inboundSchema` instead. */
  export const inboundSchema =
    AccountingPurchaseOrdersDeleteRequest$inboundSchema;
  /** @deprecated use `AccountingPurchaseOrdersDeleteRequest$outboundSchema` instead. */
  export const outboundSchema =
    AccountingPurchaseOrdersDeleteRequest$outboundSchema;
  /** @deprecated use `AccountingPurchaseOrdersDeleteRequest$Outbound` instead. */
  export type Outbound = AccountingPurchaseOrdersDeleteRequest$Outbound;
}

/** @internal */
export const AccountingPurchaseOrdersDeleteResponse$inboundSchema: z.ZodType<
  AccountingPurchaseOrdersDeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.DeletePurchaseOrderResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type AccountingPurchaseOrdersDeleteResponse$Outbound =
  | components.DeletePurchaseOrderResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const AccountingPurchaseOrdersDeleteResponse$outboundSchema: z.ZodType<
  AccountingPurchaseOrdersDeleteResponse$Outbound,
  z.ZodTypeDef,
  AccountingPurchaseOrdersDeleteResponse
> = z.union([
  components.DeletePurchaseOrderResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingPurchaseOrdersDeleteResponse$ {
  /** @deprecated use `AccountingPurchaseOrdersDeleteResponse$inboundSchema` instead. */
  export const inboundSchema =
    AccountingPurchaseOrdersDeleteResponse$inboundSchema;
  /** @deprecated use `AccountingPurchaseOrdersDeleteResponse$outboundSchema` instead. */
  export const outboundSchema =
    AccountingPurchaseOrdersDeleteResponse$outboundSchema;
  /** @deprecated use `AccountingPurchaseOrdersDeleteResponse$Outbound` instead. */
  export type Outbound = AccountingPurchaseOrdersDeleteResponse$Outbound;
}
