/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type VaultLogsAllGlobals = {
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
};

export type VaultLogsAllRequest = {
  /**
   * Filter results
   */
  filter?: components.LogsFilter | undefined;
  /**
   * Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
   */
  cursor?: string | null | undefined;
  /**
   * Number of results to return. Minimum 1, Maximum 200, Default 20
   */
  limit?: number | undefined;
};

export type VaultLogsAllResponse =
  | components.GetLogsResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const VaultLogsAllGlobals$inboundSchema: z.ZodType<
  VaultLogsAllGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.string().optional(),
  customerId: z.string().optional(),
});

/** @internal */
export type VaultLogsAllGlobals$Outbound = {
  appId?: string | undefined;
  customerId?: string | undefined;
};

/** @internal */
export const VaultLogsAllGlobals$outboundSchema: z.ZodType<
  VaultLogsAllGlobals$Outbound,
  z.ZodTypeDef,
  VaultLogsAllGlobals
> = z.object({
  appId: z.string().optional(),
  customerId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VaultLogsAllGlobals$ {
  /** @deprecated use `VaultLogsAllGlobals$inboundSchema` instead. */
  export const inboundSchema = VaultLogsAllGlobals$inboundSchema;
  /** @deprecated use `VaultLogsAllGlobals$outboundSchema` instead. */
  export const outboundSchema = VaultLogsAllGlobals$outboundSchema;
  /** @deprecated use `VaultLogsAllGlobals$Outbound` instead. */
  export type Outbound = VaultLogsAllGlobals$Outbound;
}

/** @internal */
export const VaultLogsAllRequest$inboundSchema: z.ZodType<
  VaultLogsAllRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  filter: components.LogsFilter$inboundSchema.optional(),
  cursor: z.nullable(z.string()).optional(),
  limit: z.number().int().default(20),
});

/** @internal */
export type VaultLogsAllRequest$Outbound = {
  filter?: components.LogsFilter$Outbound | undefined;
  cursor?: string | null | undefined;
  limit: number;
};

/** @internal */
export const VaultLogsAllRequest$outboundSchema: z.ZodType<
  VaultLogsAllRequest$Outbound,
  z.ZodTypeDef,
  VaultLogsAllRequest
> = z.object({
  filter: components.LogsFilter$outboundSchema.optional(),
  cursor: z.nullable(z.string()).optional(),
  limit: z.number().int().default(20),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VaultLogsAllRequest$ {
  /** @deprecated use `VaultLogsAllRequest$inboundSchema` instead. */
  export const inboundSchema = VaultLogsAllRequest$inboundSchema;
  /** @deprecated use `VaultLogsAllRequest$outboundSchema` instead. */
  export const outboundSchema = VaultLogsAllRequest$outboundSchema;
  /** @deprecated use `VaultLogsAllRequest$Outbound` instead. */
  export type Outbound = VaultLogsAllRequest$Outbound;
}

/** @internal */
export const VaultLogsAllResponse$inboundSchema: z.ZodType<
  VaultLogsAllResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.GetLogsResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type VaultLogsAllResponse$Outbound =
  | components.GetLogsResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const VaultLogsAllResponse$outboundSchema: z.ZodType<
  VaultLogsAllResponse$Outbound,
  z.ZodTypeDef,
  VaultLogsAllResponse
> = z.union([
  components.GetLogsResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VaultLogsAllResponse$ {
  /** @deprecated use `VaultLogsAllResponse$inboundSchema` instead. */
  export const inboundSchema = VaultLogsAllResponse$inboundSchema;
  /** @deprecated use `VaultLogsAllResponse$outboundSchema` instead. */
  export const outboundSchema = VaultLogsAllResponse$outboundSchema;
  /** @deprecated use `VaultLogsAllResponse$Outbound` instead. */
  export type Outbound = VaultLogsAllResponse$Outbound;
}
