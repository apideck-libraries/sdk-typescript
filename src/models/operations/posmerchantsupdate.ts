/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type PosMerchantsUpdateGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type PosMerchantsUpdateRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  merchant: components.MerchantInput;
};

export type PosMerchantsUpdateResponse =
  | components.UpdateMerchantResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const PosMerchantsUpdateGlobals$inboundSchema: z.ZodType<
  PosMerchantsUpdateGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type PosMerchantsUpdateGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const PosMerchantsUpdateGlobals$outboundSchema: z.ZodType<
  PosMerchantsUpdateGlobals$Outbound,
  z.ZodTypeDef,
  PosMerchantsUpdateGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosMerchantsUpdateGlobals$ {
  /** @deprecated use `PosMerchantsUpdateGlobals$inboundSchema` instead. */
  export const inboundSchema = PosMerchantsUpdateGlobals$inboundSchema;
  /** @deprecated use `PosMerchantsUpdateGlobals$outboundSchema` instead. */
  export const outboundSchema = PosMerchantsUpdateGlobals$outboundSchema;
  /** @deprecated use `PosMerchantsUpdateGlobals$Outbound` instead. */
  export type Outbound = PosMerchantsUpdateGlobals$Outbound;
}

/** @internal */
export const PosMerchantsUpdateRequest$inboundSchema: z.ZodType<
  PosMerchantsUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  Merchant: components.MerchantInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Merchant": "merchant",
  });
});

/** @internal */
export type PosMerchantsUpdateRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
  Merchant: components.MerchantInput$Outbound;
};

/** @internal */
export const PosMerchantsUpdateRequest$outboundSchema: z.ZodType<
  PosMerchantsUpdateRequest$Outbound,
  z.ZodTypeDef,
  PosMerchantsUpdateRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  merchant: components.MerchantInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    merchant: "Merchant",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosMerchantsUpdateRequest$ {
  /** @deprecated use `PosMerchantsUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = PosMerchantsUpdateRequest$inboundSchema;
  /** @deprecated use `PosMerchantsUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = PosMerchantsUpdateRequest$outboundSchema;
  /** @deprecated use `PosMerchantsUpdateRequest$Outbound` instead. */
  export type Outbound = PosMerchantsUpdateRequest$Outbound;
}

/** @internal */
export const PosMerchantsUpdateResponse$inboundSchema: z.ZodType<
  PosMerchantsUpdateResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.UpdateMerchantResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type PosMerchantsUpdateResponse$Outbound =
  | components.UpdateMerchantResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const PosMerchantsUpdateResponse$outboundSchema: z.ZodType<
  PosMerchantsUpdateResponse$Outbound,
  z.ZodTypeDef,
  PosMerchantsUpdateResponse
> = z.union([
  components.UpdateMerchantResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosMerchantsUpdateResponse$ {
  /** @deprecated use `PosMerchantsUpdateResponse$inboundSchema` instead. */
  export const inboundSchema = PosMerchantsUpdateResponse$inboundSchema;
  /** @deprecated use `PosMerchantsUpdateResponse$outboundSchema` instead. */
  export const outboundSchema = PosMerchantsUpdateResponse$outboundSchema;
  /** @deprecated use `PosMerchantsUpdateResponse$Outbound` instead. */
  export type Outbound = PosMerchantsUpdateResponse$Outbound;
}
