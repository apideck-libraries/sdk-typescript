/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type PosModifierGroupsDeleteGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type PosModifierGroupsDeleteRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
};

export type PosModifierGroupsDeleteResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * ModifierGroups
   */
  deleteModifierGroupResponse?:
    | components.DeleteModifierGroupResponse
    | undefined;
  /**
   * Unexpected error
   */
  unexpectedErrorResponse?: components.UnexpectedErrorResponse | undefined;
};

/** @internal */
export const PosModifierGroupsDeleteGlobals$inboundSchema: z.ZodType<
  PosModifierGroupsDeleteGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type PosModifierGroupsDeleteGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const PosModifierGroupsDeleteGlobals$outboundSchema: z.ZodType<
  PosModifierGroupsDeleteGlobals$Outbound,
  z.ZodTypeDef,
  PosModifierGroupsDeleteGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosModifierGroupsDeleteGlobals$ {
  /** @deprecated use `PosModifierGroupsDeleteGlobals$inboundSchema` instead. */
  export const inboundSchema = PosModifierGroupsDeleteGlobals$inboundSchema;
  /** @deprecated use `PosModifierGroupsDeleteGlobals$outboundSchema` instead. */
  export const outboundSchema = PosModifierGroupsDeleteGlobals$outboundSchema;
  /** @deprecated use `PosModifierGroupsDeleteGlobals$Outbound` instead. */
  export type Outbound = PosModifierGroupsDeleteGlobals$Outbound;
}

/** @internal */
export const PosModifierGroupsDeleteRequest$inboundSchema: z.ZodType<
  PosModifierGroupsDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/** @internal */
export type PosModifierGroupsDeleteRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
};

/** @internal */
export const PosModifierGroupsDeleteRequest$outboundSchema: z.ZodType<
  PosModifierGroupsDeleteRequest$Outbound,
  z.ZodTypeDef,
  PosModifierGroupsDeleteRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosModifierGroupsDeleteRequest$ {
  /** @deprecated use `PosModifierGroupsDeleteRequest$inboundSchema` instead. */
  export const inboundSchema = PosModifierGroupsDeleteRequest$inboundSchema;
  /** @deprecated use `PosModifierGroupsDeleteRequest$outboundSchema` instead. */
  export const outboundSchema = PosModifierGroupsDeleteRequest$outboundSchema;
  /** @deprecated use `PosModifierGroupsDeleteRequest$Outbound` instead. */
  export type Outbound = PosModifierGroupsDeleteRequest$Outbound;
}

/** @internal */
export const PosModifierGroupsDeleteResponse$inboundSchema: z.ZodType<
  PosModifierGroupsDeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  DeleteModifierGroupResponse: components
    .DeleteModifierGroupResponse$inboundSchema.optional(),
  UnexpectedErrorResponse: components.UnexpectedErrorResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "DeleteModifierGroupResponse": "deleteModifierGroupResponse",
    "UnexpectedErrorResponse": "unexpectedErrorResponse",
  });
});

/** @internal */
export type PosModifierGroupsDeleteResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  DeleteModifierGroupResponse?:
    | components.DeleteModifierGroupResponse$Outbound
    | undefined;
  UnexpectedErrorResponse?:
    | components.UnexpectedErrorResponse$Outbound
    | undefined;
};

/** @internal */
export const PosModifierGroupsDeleteResponse$outboundSchema: z.ZodType<
  PosModifierGroupsDeleteResponse$Outbound,
  z.ZodTypeDef,
  PosModifierGroupsDeleteResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  deleteModifierGroupResponse: components
    .DeleteModifierGroupResponse$outboundSchema.optional(),
  unexpectedErrorResponse: components.UnexpectedErrorResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    deleteModifierGroupResponse: "DeleteModifierGroupResponse",
    unexpectedErrorResponse: "UnexpectedErrorResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosModifierGroupsDeleteResponse$ {
  /** @deprecated use `PosModifierGroupsDeleteResponse$inboundSchema` instead. */
  export const inboundSchema = PosModifierGroupsDeleteResponse$inboundSchema;
  /** @deprecated use `PosModifierGroupsDeleteResponse$outboundSchema` instead. */
  export const outboundSchema = PosModifierGroupsDeleteResponse$outboundSchema;
  /** @deprecated use `PosModifierGroupsDeleteResponse$Outbound` instead. */
  export type Outbound = PosModifierGroupsDeleteResponse$Outbound;
}
