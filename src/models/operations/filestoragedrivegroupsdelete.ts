/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type FileStorageDriveGroupsDeleteGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type FileStorageDriveGroupsDeleteRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
};

export type FileStorageDriveGroupsDeleteResponse =
  | components.DeleteDriveGroupResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const FileStorageDriveGroupsDeleteGlobals$inboundSchema: z.ZodType<
  FileStorageDriveGroupsDeleteGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type FileStorageDriveGroupsDeleteGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const FileStorageDriveGroupsDeleteGlobals$outboundSchema: z.ZodType<
  FileStorageDriveGroupsDeleteGlobals$Outbound,
  z.ZodTypeDef,
  FileStorageDriveGroupsDeleteGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FileStorageDriveGroupsDeleteGlobals$ {
  /** @deprecated use `FileStorageDriveGroupsDeleteGlobals$inboundSchema` instead. */
  export const inboundSchema =
    FileStorageDriveGroupsDeleteGlobals$inboundSchema;
  /** @deprecated use `FileStorageDriveGroupsDeleteGlobals$outboundSchema` instead. */
  export const outboundSchema =
    FileStorageDriveGroupsDeleteGlobals$outboundSchema;
  /** @deprecated use `FileStorageDriveGroupsDeleteGlobals$Outbound` instead. */
  export type Outbound = FileStorageDriveGroupsDeleteGlobals$Outbound;
}

/** @internal */
export const FileStorageDriveGroupsDeleteRequest$inboundSchema: z.ZodType<
  FileStorageDriveGroupsDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/** @internal */
export type FileStorageDriveGroupsDeleteRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
};

/** @internal */
export const FileStorageDriveGroupsDeleteRequest$outboundSchema: z.ZodType<
  FileStorageDriveGroupsDeleteRequest$Outbound,
  z.ZodTypeDef,
  FileStorageDriveGroupsDeleteRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FileStorageDriveGroupsDeleteRequest$ {
  /** @deprecated use `FileStorageDriveGroupsDeleteRequest$inboundSchema` instead. */
  export const inboundSchema =
    FileStorageDriveGroupsDeleteRequest$inboundSchema;
  /** @deprecated use `FileStorageDriveGroupsDeleteRequest$outboundSchema` instead. */
  export const outboundSchema =
    FileStorageDriveGroupsDeleteRequest$outboundSchema;
  /** @deprecated use `FileStorageDriveGroupsDeleteRequest$Outbound` instead. */
  export type Outbound = FileStorageDriveGroupsDeleteRequest$Outbound;
}

/** @internal */
export const FileStorageDriveGroupsDeleteResponse$inboundSchema: z.ZodType<
  FileStorageDriveGroupsDeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.DeleteDriveGroupResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type FileStorageDriveGroupsDeleteResponse$Outbound =
  | components.DeleteDriveGroupResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const FileStorageDriveGroupsDeleteResponse$outboundSchema: z.ZodType<
  FileStorageDriveGroupsDeleteResponse$Outbound,
  z.ZodTypeDef,
  FileStorageDriveGroupsDeleteResponse
> = z.union([
  components.DeleteDriveGroupResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FileStorageDriveGroupsDeleteResponse$ {
  /** @deprecated use `FileStorageDriveGroupsDeleteResponse$inboundSchema` instead. */
  export const inboundSchema =
    FileStorageDriveGroupsDeleteResponse$inboundSchema;
  /** @deprecated use `FileStorageDriveGroupsDeleteResponse$outboundSchema` instead. */
  export const outboundSchema =
    FileStorageDriveGroupsDeleteResponse$outboundSchema;
  /** @deprecated use `FileStorageDriveGroupsDeleteResponse$Outbound` instead. */
  export type Outbound = FileStorageDriveGroupsDeleteResponse$Outbound;
}
