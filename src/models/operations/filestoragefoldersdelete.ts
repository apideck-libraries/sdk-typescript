/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type FileStorageFoldersDeleteGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type FileStorageFoldersDeleteRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
};

export type FileStorageFoldersDeleteResponse =
  | components.DeleteFolderResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const FileStorageFoldersDeleteGlobals$inboundSchema: z.ZodType<
  FileStorageFoldersDeleteGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type FileStorageFoldersDeleteGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const FileStorageFoldersDeleteGlobals$outboundSchema: z.ZodType<
  FileStorageFoldersDeleteGlobals$Outbound,
  z.ZodTypeDef,
  FileStorageFoldersDeleteGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FileStorageFoldersDeleteGlobals$ {
  /** @deprecated use `FileStorageFoldersDeleteGlobals$inboundSchema` instead. */
  export const inboundSchema = FileStorageFoldersDeleteGlobals$inboundSchema;
  /** @deprecated use `FileStorageFoldersDeleteGlobals$outboundSchema` instead. */
  export const outboundSchema = FileStorageFoldersDeleteGlobals$outboundSchema;
  /** @deprecated use `FileStorageFoldersDeleteGlobals$Outbound` instead. */
  export type Outbound = FileStorageFoldersDeleteGlobals$Outbound;
}

/** @internal */
export const FileStorageFoldersDeleteRequest$inboundSchema: z.ZodType<
  FileStorageFoldersDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/** @internal */
export type FileStorageFoldersDeleteRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
};

/** @internal */
export const FileStorageFoldersDeleteRequest$outboundSchema: z.ZodType<
  FileStorageFoldersDeleteRequest$Outbound,
  z.ZodTypeDef,
  FileStorageFoldersDeleteRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FileStorageFoldersDeleteRequest$ {
  /** @deprecated use `FileStorageFoldersDeleteRequest$inboundSchema` instead. */
  export const inboundSchema = FileStorageFoldersDeleteRequest$inboundSchema;
  /** @deprecated use `FileStorageFoldersDeleteRequest$outboundSchema` instead. */
  export const outboundSchema = FileStorageFoldersDeleteRequest$outboundSchema;
  /** @deprecated use `FileStorageFoldersDeleteRequest$Outbound` instead. */
  export type Outbound = FileStorageFoldersDeleteRequest$Outbound;
}

/** @internal */
export const FileStorageFoldersDeleteResponse$inboundSchema: z.ZodType<
  FileStorageFoldersDeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.DeleteFolderResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type FileStorageFoldersDeleteResponse$Outbound =
  | components.DeleteFolderResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const FileStorageFoldersDeleteResponse$outboundSchema: z.ZodType<
  FileStorageFoldersDeleteResponse$Outbound,
  z.ZodTypeDef,
  FileStorageFoldersDeleteResponse
> = z.union([
  components.DeleteFolderResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FileStorageFoldersDeleteResponse$ {
  /** @deprecated use `FileStorageFoldersDeleteResponse$inboundSchema` instead. */
  export const inboundSchema = FileStorageFoldersDeleteResponse$inboundSchema;
  /** @deprecated use `FileStorageFoldersDeleteResponse$outboundSchema` instead. */
  export const outboundSchema = FileStorageFoldersDeleteResponse$outboundSchema;
  /** @deprecated use `FileStorageFoldersDeleteResponse$Outbound` instead. */
  export type Outbound = FileStorageFoldersDeleteResponse$Outbound;
}
