/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type AccountingDepartmentsAddGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type AccountingDepartmentsAddRequest = {
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  accountingDepartment: components.AccountingDepartmentInput;
};

export type AccountingDepartmentsAddResponse =
  | components.CreateAccountingDepartmentResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const AccountingDepartmentsAddGlobals$inboundSchema: z.ZodType<
  AccountingDepartmentsAddGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type AccountingDepartmentsAddGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const AccountingDepartmentsAddGlobals$outboundSchema: z.ZodType<
  AccountingDepartmentsAddGlobals$Outbound,
  z.ZodTypeDef,
  AccountingDepartmentsAddGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingDepartmentsAddGlobals$ {
  /** @deprecated use `AccountingDepartmentsAddGlobals$inboundSchema` instead. */
  export const inboundSchema = AccountingDepartmentsAddGlobals$inboundSchema;
  /** @deprecated use `AccountingDepartmentsAddGlobals$outboundSchema` instead. */
  export const outboundSchema = AccountingDepartmentsAddGlobals$outboundSchema;
  /** @deprecated use `AccountingDepartmentsAddGlobals$Outbound` instead. */
  export type Outbound = AccountingDepartmentsAddGlobals$Outbound;
}

/** @internal */
export const AccountingDepartmentsAddRequest$inboundSchema: z.ZodType<
  AccountingDepartmentsAddRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  AccountingDepartment: components.AccountingDepartmentInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "AccountingDepartment": "accountingDepartment",
  });
});

/** @internal */
export type AccountingDepartmentsAddRequest$Outbound = {
  raw: boolean;
  serviceId?: string | undefined;
  AccountingDepartment: components.AccountingDepartmentInput$Outbound;
};

/** @internal */
export const AccountingDepartmentsAddRequest$outboundSchema: z.ZodType<
  AccountingDepartmentsAddRequest$Outbound,
  z.ZodTypeDef,
  AccountingDepartmentsAddRequest
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  accountingDepartment: components.AccountingDepartmentInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    accountingDepartment: "AccountingDepartment",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingDepartmentsAddRequest$ {
  /** @deprecated use `AccountingDepartmentsAddRequest$inboundSchema` instead. */
  export const inboundSchema = AccountingDepartmentsAddRequest$inboundSchema;
  /** @deprecated use `AccountingDepartmentsAddRequest$outboundSchema` instead. */
  export const outboundSchema = AccountingDepartmentsAddRequest$outboundSchema;
  /** @deprecated use `AccountingDepartmentsAddRequest$Outbound` instead. */
  export type Outbound = AccountingDepartmentsAddRequest$Outbound;
}

/** @internal */
export const AccountingDepartmentsAddResponse$inboundSchema: z.ZodType<
  AccountingDepartmentsAddResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.CreateAccountingDepartmentResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type AccountingDepartmentsAddResponse$Outbound =
  | components.CreateAccountingDepartmentResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const AccountingDepartmentsAddResponse$outboundSchema: z.ZodType<
  AccountingDepartmentsAddResponse$Outbound,
  z.ZodTypeDef,
  AccountingDepartmentsAddResponse
> = z.union([
  components.CreateAccountingDepartmentResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingDepartmentsAddResponse$ {
  /** @deprecated use `AccountingDepartmentsAddResponse$inboundSchema` instead. */
  export const inboundSchema = AccountingDepartmentsAddResponse$inboundSchema;
  /** @deprecated use `AccountingDepartmentsAddResponse$outboundSchema` instead. */
  export const outboundSchema = AccountingDepartmentsAddResponse$outboundSchema;
  /** @deprecated use `AccountingDepartmentsAddResponse$Outbound` instead. */
  export type Outbound = AccountingDepartmentsAddResponse$Outbound;
}
