/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type AccountingAttachmentsDeleteGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type AccountingAttachmentsDeleteRequest = {
  /**
   * The reference type of the document.
   */
  referenceType: components.AttachmentReferenceType;
  /**
   * The reference id of the object to retrieve.
   */
  referenceId: string;
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
};

export type AccountingAttachmentsDeleteResponse =
  | components.DeleteAttachmentResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const AccountingAttachmentsDeleteGlobals$inboundSchema: z.ZodType<
  AccountingAttachmentsDeleteGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type AccountingAttachmentsDeleteGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const AccountingAttachmentsDeleteGlobals$outboundSchema: z.ZodType<
  AccountingAttachmentsDeleteGlobals$Outbound,
  z.ZodTypeDef,
  AccountingAttachmentsDeleteGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingAttachmentsDeleteGlobals$ {
  /** @deprecated use `AccountingAttachmentsDeleteGlobals$inboundSchema` instead. */
  export const inboundSchema = AccountingAttachmentsDeleteGlobals$inboundSchema;
  /** @deprecated use `AccountingAttachmentsDeleteGlobals$outboundSchema` instead. */
  export const outboundSchema =
    AccountingAttachmentsDeleteGlobals$outboundSchema;
  /** @deprecated use `AccountingAttachmentsDeleteGlobals$Outbound` instead. */
  export type Outbound = AccountingAttachmentsDeleteGlobals$Outbound;
}

/** @internal */
export const AccountingAttachmentsDeleteRequest$inboundSchema: z.ZodType<
  AccountingAttachmentsDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  reference_type: components.AttachmentReferenceType$inboundSchema,
  reference_id: z.string(),
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    "reference_type": "referenceType",
    "reference_id": "referenceId",
  });
});

/** @internal */
export type AccountingAttachmentsDeleteRequest$Outbound = {
  reference_type: string;
  reference_id: string;
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
};

/** @internal */
export const AccountingAttachmentsDeleteRequest$outboundSchema: z.ZodType<
  AccountingAttachmentsDeleteRequest$Outbound,
  z.ZodTypeDef,
  AccountingAttachmentsDeleteRequest
> = z.object({
  referenceType: components.AttachmentReferenceType$outboundSchema,
  referenceId: z.string(),
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    referenceType: "reference_type",
    referenceId: "reference_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingAttachmentsDeleteRequest$ {
  /** @deprecated use `AccountingAttachmentsDeleteRequest$inboundSchema` instead. */
  export const inboundSchema = AccountingAttachmentsDeleteRequest$inboundSchema;
  /** @deprecated use `AccountingAttachmentsDeleteRequest$outboundSchema` instead. */
  export const outboundSchema =
    AccountingAttachmentsDeleteRequest$outboundSchema;
  /** @deprecated use `AccountingAttachmentsDeleteRequest$Outbound` instead. */
  export type Outbound = AccountingAttachmentsDeleteRequest$Outbound;
}

/** @internal */
export const AccountingAttachmentsDeleteResponse$inboundSchema: z.ZodType<
  AccountingAttachmentsDeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.DeleteAttachmentResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type AccountingAttachmentsDeleteResponse$Outbound =
  | components.DeleteAttachmentResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const AccountingAttachmentsDeleteResponse$outboundSchema: z.ZodType<
  AccountingAttachmentsDeleteResponse$Outbound,
  z.ZodTypeDef,
  AccountingAttachmentsDeleteResponse
> = z.union([
  components.DeleteAttachmentResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingAttachmentsDeleteResponse$ {
  /** @deprecated use `AccountingAttachmentsDeleteResponse$inboundSchema` instead. */
  export const inboundSchema =
    AccountingAttachmentsDeleteResponse$inboundSchema;
  /** @deprecated use `AccountingAttachmentsDeleteResponse$outboundSchema` instead. */
  export const outboundSchema =
    AccountingAttachmentsDeleteResponse$outboundSchema;
  /** @deprecated use `AccountingAttachmentsDeleteResponse$Outbound` instead. */
  export type Outbound = AccountingAttachmentsDeleteResponse$Outbound;
}
