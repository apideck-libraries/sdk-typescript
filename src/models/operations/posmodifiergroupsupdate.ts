/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type PosModifierGroupsUpdateGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type PosModifierGroupsUpdateRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  modifierGroup: components.ModifierGroupInput;
};

export type PosModifierGroupsUpdateResponse =
  | components.UpdateModifierGroupResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const PosModifierGroupsUpdateGlobals$inboundSchema: z.ZodType<
  PosModifierGroupsUpdateGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type PosModifierGroupsUpdateGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const PosModifierGroupsUpdateGlobals$outboundSchema: z.ZodType<
  PosModifierGroupsUpdateGlobals$Outbound,
  z.ZodTypeDef,
  PosModifierGroupsUpdateGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosModifierGroupsUpdateGlobals$ {
  /** @deprecated use `PosModifierGroupsUpdateGlobals$inboundSchema` instead. */
  export const inboundSchema = PosModifierGroupsUpdateGlobals$inboundSchema;
  /** @deprecated use `PosModifierGroupsUpdateGlobals$outboundSchema` instead. */
  export const outboundSchema = PosModifierGroupsUpdateGlobals$outboundSchema;
  /** @deprecated use `PosModifierGroupsUpdateGlobals$Outbound` instead. */
  export type Outbound = PosModifierGroupsUpdateGlobals$Outbound;
}

/** @internal */
export const PosModifierGroupsUpdateRequest$inboundSchema: z.ZodType<
  PosModifierGroupsUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  ModifierGroup: components.ModifierGroupInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "ModifierGroup": "modifierGroup",
  });
});

/** @internal */
export type PosModifierGroupsUpdateRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
  ModifierGroup: components.ModifierGroupInput$Outbound;
};

/** @internal */
export const PosModifierGroupsUpdateRequest$outboundSchema: z.ZodType<
  PosModifierGroupsUpdateRequest$Outbound,
  z.ZodTypeDef,
  PosModifierGroupsUpdateRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  modifierGroup: components.ModifierGroupInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    modifierGroup: "ModifierGroup",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosModifierGroupsUpdateRequest$ {
  /** @deprecated use `PosModifierGroupsUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = PosModifierGroupsUpdateRequest$inboundSchema;
  /** @deprecated use `PosModifierGroupsUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = PosModifierGroupsUpdateRequest$outboundSchema;
  /** @deprecated use `PosModifierGroupsUpdateRequest$Outbound` instead. */
  export type Outbound = PosModifierGroupsUpdateRequest$Outbound;
}

/** @internal */
export const PosModifierGroupsUpdateResponse$inboundSchema: z.ZodType<
  PosModifierGroupsUpdateResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.UpdateModifierGroupResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type PosModifierGroupsUpdateResponse$Outbound =
  | components.UpdateModifierGroupResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const PosModifierGroupsUpdateResponse$outboundSchema: z.ZodType<
  PosModifierGroupsUpdateResponse$Outbound,
  z.ZodTypeDef,
  PosModifierGroupsUpdateResponse
> = z.union([
  components.UpdateModifierGroupResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosModifierGroupsUpdateResponse$ {
  /** @deprecated use `PosModifierGroupsUpdateResponse$inboundSchema` instead. */
  export const inboundSchema = PosModifierGroupsUpdateResponse$inboundSchema;
  /** @deprecated use `PosModifierGroupsUpdateResponse$outboundSchema` instead. */
  export const outboundSchema = PosModifierGroupsUpdateResponse$outboundSchema;
  /** @deprecated use `PosModifierGroupsUpdateResponse$Outbound` instead. */
  export type Outbound = PosModifierGroupsUpdateResponse$Outbound;
}
