/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type PosOrderTypesAddGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type PosOrderTypesAddRequest = {
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  orderType: components.OrderTypeInput;
};

export type PosOrderTypesAddResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OrderTypes
   */
  createOrderTypeResponse?: components.CreateOrderTypeResponse | undefined;
  /**
   * Unexpected error
   */
  unexpectedErrorResponse?: components.UnexpectedErrorResponse | undefined;
};

/** @internal */
export const PosOrderTypesAddGlobals$inboundSchema: z.ZodType<
  PosOrderTypesAddGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type PosOrderTypesAddGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const PosOrderTypesAddGlobals$outboundSchema: z.ZodType<
  PosOrderTypesAddGlobals$Outbound,
  z.ZodTypeDef,
  PosOrderTypesAddGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosOrderTypesAddGlobals$ {
  /** @deprecated use `PosOrderTypesAddGlobals$inboundSchema` instead. */
  export const inboundSchema = PosOrderTypesAddGlobals$inboundSchema;
  /** @deprecated use `PosOrderTypesAddGlobals$outboundSchema` instead. */
  export const outboundSchema = PosOrderTypesAddGlobals$outboundSchema;
  /** @deprecated use `PosOrderTypesAddGlobals$Outbound` instead. */
  export type Outbound = PosOrderTypesAddGlobals$Outbound;
}

/** @internal */
export const PosOrderTypesAddRequest$inboundSchema: z.ZodType<
  PosOrderTypesAddRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  OrderType: components.OrderTypeInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "OrderType": "orderType",
  });
});

/** @internal */
export type PosOrderTypesAddRequest$Outbound = {
  raw: boolean;
  serviceId?: string | undefined;
  OrderType: components.OrderTypeInput$Outbound;
};

/** @internal */
export const PosOrderTypesAddRequest$outboundSchema: z.ZodType<
  PosOrderTypesAddRequest$Outbound,
  z.ZodTypeDef,
  PosOrderTypesAddRequest
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  orderType: components.OrderTypeInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    orderType: "OrderType",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosOrderTypesAddRequest$ {
  /** @deprecated use `PosOrderTypesAddRequest$inboundSchema` instead. */
  export const inboundSchema = PosOrderTypesAddRequest$inboundSchema;
  /** @deprecated use `PosOrderTypesAddRequest$outboundSchema` instead. */
  export const outboundSchema = PosOrderTypesAddRequest$outboundSchema;
  /** @deprecated use `PosOrderTypesAddRequest$Outbound` instead. */
  export type Outbound = PosOrderTypesAddRequest$Outbound;
}

/** @internal */
export const PosOrderTypesAddResponse$inboundSchema: z.ZodType<
  PosOrderTypesAddResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  CreateOrderTypeResponse: components.CreateOrderTypeResponse$inboundSchema
    .optional(),
  UnexpectedErrorResponse: components.UnexpectedErrorResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "CreateOrderTypeResponse": "createOrderTypeResponse",
    "UnexpectedErrorResponse": "unexpectedErrorResponse",
  });
});

/** @internal */
export type PosOrderTypesAddResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  CreateOrderTypeResponse?:
    | components.CreateOrderTypeResponse$Outbound
    | undefined;
  UnexpectedErrorResponse?:
    | components.UnexpectedErrorResponse$Outbound
    | undefined;
};

/** @internal */
export const PosOrderTypesAddResponse$outboundSchema: z.ZodType<
  PosOrderTypesAddResponse$Outbound,
  z.ZodTypeDef,
  PosOrderTypesAddResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  createOrderTypeResponse: components.CreateOrderTypeResponse$outboundSchema
    .optional(),
  unexpectedErrorResponse: components.UnexpectedErrorResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    createOrderTypeResponse: "CreateOrderTypeResponse",
    unexpectedErrorResponse: "UnexpectedErrorResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosOrderTypesAddResponse$ {
  /** @deprecated use `PosOrderTypesAddResponse$inboundSchema` instead. */
  export const inboundSchema = PosOrderTypesAddResponse$inboundSchema;
  /** @deprecated use `PosOrderTypesAddResponse$outboundSchema` instead. */
  export const outboundSchema = PosOrderTypesAddResponse$outboundSchema;
  /** @deprecated use `PosOrderTypesAddResponse$Outbound` instead. */
  export type Outbound = PosOrderTypesAddResponse$Outbound;
}
