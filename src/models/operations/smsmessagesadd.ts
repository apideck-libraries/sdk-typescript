/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type SmsMessagesAddGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type SmsMessagesAddRequest = {
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  message: components.MessageInput;
};

export type SmsMessagesAddResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * Messages
   */
  createMessageResponse?: components.CreateMessageResponse | undefined;
  /**
   * Unexpected error
   */
  unexpectedErrorResponse?: components.UnexpectedErrorResponse | undefined;
};

/** @internal */
export const SmsMessagesAddGlobals$inboundSchema: z.ZodType<
  SmsMessagesAddGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type SmsMessagesAddGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const SmsMessagesAddGlobals$outboundSchema: z.ZodType<
  SmsMessagesAddGlobals$Outbound,
  z.ZodTypeDef,
  SmsMessagesAddGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SmsMessagesAddGlobals$ {
  /** @deprecated use `SmsMessagesAddGlobals$inboundSchema` instead. */
  export const inboundSchema = SmsMessagesAddGlobals$inboundSchema;
  /** @deprecated use `SmsMessagesAddGlobals$outboundSchema` instead. */
  export const outboundSchema = SmsMessagesAddGlobals$outboundSchema;
  /** @deprecated use `SmsMessagesAddGlobals$Outbound` instead. */
  export type Outbound = SmsMessagesAddGlobals$Outbound;
}

/** @internal */
export const SmsMessagesAddRequest$inboundSchema: z.ZodType<
  SmsMessagesAddRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  Message: components.MessageInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Message": "message",
  });
});

/** @internal */
export type SmsMessagesAddRequest$Outbound = {
  raw: boolean;
  serviceId?: string | undefined;
  Message: components.MessageInput$Outbound;
};

/** @internal */
export const SmsMessagesAddRequest$outboundSchema: z.ZodType<
  SmsMessagesAddRequest$Outbound,
  z.ZodTypeDef,
  SmsMessagesAddRequest
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  message: components.MessageInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    message: "Message",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SmsMessagesAddRequest$ {
  /** @deprecated use `SmsMessagesAddRequest$inboundSchema` instead. */
  export const inboundSchema = SmsMessagesAddRequest$inboundSchema;
  /** @deprecated use `SmsMessagesAddRequest$outboundSchema` instead. */
  export const outboundSchema = SmsMessagesAddRequest$outboundSchema;
  /** @deprecated use `SmsMessagesAddRequest$Outbound` instead. */
  export type Outbound = SmsMessagesAddRequest$Outbound;
}

/** @internal */
export const SmsMessagesAddResponse$inboundSchema: z.ZodType<
  SmsMessagesAddResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  CreateMessageResponse: components.CreateMessageResponse$inboundSchema
    .optional(),
  UnexpectedErrorResponse: components.UnexpectedErrorResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "CreateMessageResponse": "createMessageResponse",
    "UnexpectedErrorResponse": "unexpectedErrorResponse",
  });
});

/** @internal */
export type SmsMessagesAddResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  CreateMessageResponse?: components.CreateMessageResponse$Outbound | undefined;
  UnexpectedErrorResponse?:
    | components.UnexpectedErrorResponse$Outbound
    | undefined;
};

/** @internal */
export const SmsMessagesAddResponse$outboundSchema: z.ZodType<
  SmsMessagesAddResponse$Outbound,
  z.ZodTypeDef,
  SmsMessagesAddResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  createMessageResponse: components.CreateMessageResponse$outboundSchema
    .optional(),
  unexpectedErrorResponse: components.UnexpectedErrorResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    createMessageResponse: "CreateMessageResponse",
    unexpectedErrorResponse: "UnexpectedErrorResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SmsMessagesAddResponse$ {
  /** @deprecated use `SmsMessagesAddResponse$inboundSchema` instead. */
  export const inboundSchema = SmsMessagesAddResponse$inboundSchema;
  /** @deprecated use `SmsMessagesAddResponse$outboundSchema` instead. */
  export const outboundSchema = SmsMessagesAddResponse$outboundSchema;
  /** @deprecated use `SmsMessagesAddResponse$Outbound` instead. */
  export type Outbound = SmsMessagesAddResponse$Outbound;
}
