/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type AccountingExpensesDeleteGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type AccountingExpensesDeleteRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
};

export type AccountingExpensesDeleteResponse =
  | components.DeleteExpenseResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const AccountingExpensesDeleteGlobals$inboundSchema: z.ZodType<
  AccountingExpensesDeleteGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type AccountingExpensesDeleteGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const AccountingExpensesDeleteGlobals$outboundSchema: z.ZodType<
  AccountingExpensesDeleteGlobals$Outbound,
  z.ZodTypeDef,
  AccountingExpensesDeleteGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingExpensesDeleteGlobals$ {
  /** @deprecated use `AccountingExpensesDeleteGlobals$inboundSchema` instead. */
  export const inboundSchema = AccountingExpensesDeleteGlobals$inboundSchema;
  /** @deprecated use `AccountingExpensesDeleteGlobals$outboundSchema` instead. */
  export const outboundSchema = AccountingExpensesDeleteGlobals$outboundSchema;
  /** @deprecated use `AccountingExpensesDeleteGlobals$Outbound` instead. */
  export type Outbound = AccountingExpensesDeleteGlobals$Outbound;
}

/** @internal */
export const AccountingExpensesDeleteRequest$inboundSchema: z.ZodType<
  AccountingExpensesDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/** @internal */
export type AccountingExpensesDeleteRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
};

/** @internal */
export const AccountingExpensesDeleteRequest$outboundSchema: z.ZodType<
  AccountingExpensesDeleteRequest$Outbound,
  z.ZodTypeDef,
  AccountingExpensesDeleteRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingExpensesDeleteRequest$ {
  /** @deprecated use `AccountingExpensesDeleteRequest$inboundSchema` instead. */
  export const inboundSchema = AccountingExpensesDeleteRequest$inboundSchema;
  /** @deprecated use `AccountingExpensesDeleteRequest$outboundSchema` instead. */
  export const outboundSchema = AccountingExpensesDeleteRequest$outboundSchema;
  /** @deprecated use `AccountingExpensesDeleteRequest$Outbound` instead. */
  export type Outbound = AccountingExpensesDeleteRequest$Outbound;
}

/** @internal */
export const AccountingExpensesDeleteResponse$inboundSchema: z.ZodType<
  AccountingExpensesDeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.DeleteExpenseResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type AccountingExpensesDeleteResponse$Outbound =
  | components.DeleteExpenseResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const AccountingExpensesDeleteResponse$outboundSchema: z.ZodType<
  AccountingExpensesDeleteResponse$Outbound,
  z.ZodTypeDef,
  AccountingExpensesDeleteResponse
> = z.union([
  components.DeleteExpenseResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingExpensesDeleteResponse$ {
  /** @deprecated use `AccountingExpensesDeleteResponse$inboundSchema` instead. */
  export const inboundSchema = AccountingExpensesDeleteResponse$inboundSchema;
  /** @deprecated use `AccountingExpensesDeleteResponse$outboundSchema` instead. */
  export const outboundSchema = AccountingExpensesDeleteResponse$outboundSchema;
  /** @deprecated use `AccountingExpensesDeleteResponse$Outbound` instead. */
  export type Outbound = AccountingExpensesDeleteResponse$Outbound;
}
