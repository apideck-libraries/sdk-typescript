/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type CrmUsersUpdateGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type CrmUsersUpdateRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  user: components.UserInput;
};

export type CrmUsersUpdateResponse =
  | components.UpdateUserResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const CrmUsersUpdateGlobals$inboundSchema: z.ZodType<
  CrmUsersUpdateGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type CrmUsersUpdateGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const CrmUsersUpdateGlobals$outboundSchema: z.ZodType<
  CrmUsersUpdateGlobals$Outbound,
  z.ZodTypeDef,
  CrmUsersUpdateGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CrmUsersUpdateGlobals$ {
  /** @deprecated use `CrmUsersUpdateGlobals$inboundSchema` instead. */
  export const inboundSchema = CrmUsersUpdateGlobals$inboundSchema;
  /** @deprecated use `CrmUsersUpdateGlobals$outboundSchema` instead. */
  export const outboundSchema = CrmUsersUpdateGlobals$outboundSchema;
  /** @deprecated use `CrmUsersUpdateGlobals$Outbound` instead. */
  export type Outbound = CrmUsersUpdateGlobals$Outbound;
}

/** @internal */
export const CrmUsersUpdateRequest$inboundSchema: z.ZodType<
  CrmUsersUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  User: components.UserInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "User": "user",
  });
});

/** @internal */
export type CrmUsersUpdateRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
  User: components.UserInput$Outbound;
};

/** @internal */
export const CrmUsersUpdateRequest$outboundSchema: z.ZodType<
  CrmUsersUpdateRequest$Outbound,
  z.ZodTypeDef,
  CrmUsersUpdateRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  user: components.UserInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    user: "User",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CrmUsersUpdateRequest$ {
  /** @deprecated use `CrmUsersUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = CrmUsersUpdateRequest$inboundSchema;
  /** @deprecated use `CrmUsersUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = CrmUsersUpdateRequest$outboundSchema;
  /** @deprecated use `CrmUsersUpdateRequest$Outbound` instead. */
  export type Outbound = CrmUsersUpdateRequest$Outbound;
}

/** @internal */
export const CrmUsersUpdateResponse$inboundSchema: z.ZodType<
  CrmUsersUpdateResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.UpdateUserResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type CrmUsersUpdateResponse$Outbound =
  | components.UpdateUserResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const CrmUsersUpdateResponse$outboundSchema: z.ZodType<
  CrmUsersUpdateResponse$Outbound,
  z.ZodTypeDef,
  CrmUsersUpdateResponse
> = z.union([
  components.UpdateUserResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CrmUsersUpdateResponse$ {
  /** @deprecated use `CrmUsersUpdateResponse$inboundSchema` instead. */
  export const inboundSchema = CrmUsersUpdateResponse$inboundSchema;
  /** @deprecated use `CrmUsersUpdateResponse$outboundSchema` instead. */
  export const outboundSchema = CrmUsersUpdateResponse$outboundSchema;
  /** @deprecated use `CrmUsersUpdateResponse$Outbound` instead. */
  export type Outbound = CrmUsersUpdateResponse$Outbound;
}
