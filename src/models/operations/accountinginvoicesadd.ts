/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type AccountingInvoicesAddGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type AccountingInvoicesAddRequest = {
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  invoice: components.InvoiceInput;
};

export type AccountingInvoicesAddResponse =
  | components.CreateInvoiceResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const AccountingInvoicesAddGlobals$inboundSchema: z.ZodType<
  AccountingInvoicesAddGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type AccountingInvoicesAddGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const AccountingInvoicesAddGlobals$outboundSchema: z.ZodType<
  AccountingInvoicesAddGlobals$Outbound,
  z.ZodTypeDef,
  AccountingInvoicesAddGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingInvoicesAddGlobals$ {
  /** @deprecated use `AccountingInvoicesAddGlobals$inboundSchema` instead. */
  export const inboundSchema = AccountingInvoicesAddGlobals$inboundSchema;
  /** @deprecated use `AccountingInvoicesAddGlobals$outboundSchema` instead. */
  export const outboundSchema = AccountingInvoicesAddGlobals$outboundSchema;
  /** @deprecated use `AccountingInvoicesAddGlobals$Outbound` instead. */
  export type Outbound = AccountingInvoicesAddGlobals$Outbound;
}

/** @internal */
export const AccountingInvoicesAddRequest$inboundSchema: z.ZodType<
  AccountingInvoicesAddRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  Invoice: components.InvoiceInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Invoice": "invoice",
  });
});

/** @internal */
export type AccountingInvoicesAddRequest$Outbound = {
  raw: boolean;
  serviceId?: string | undefined;
  Invoice: components.InvoiceInput$Outbound;
};

/** @internal */
export const AccountingInvoicesAddRequest$outboundSchema: z.ZodType<
  AccountingInvoicesAddRequest$Outbound,
  z.ZodTypeDef,
  AccountingInvoicesAddRequest
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  invoice: components.InvoiceInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    invoice: "Invoice",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingInvoicesAddRequest$ {
  /** @deprecated use `AccountingInvoicesAddRequest$inboundSchema` instead. */
  export const inboundSchema = AccountingInvoicesAddRequest$inboundSchema;
  /** @deprecated use `AccountingInvoicesAddRequest$outboundSchema` instead. */
  export const outboundSchema = AccountingInvoicesAddRequest$outboundSchema;
  /** @deprecated use `AccountingInvoicesAddRequest$Outbound` instead. */
  export type Outbound = AccountingInvoicesAddRequest$Outbound;
}

/** @internal */
export const AccountingInvoicesAddResponse$inboundSchema: z.ZodType<
  AccountingInvoicesAddResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.CreateInvoiceResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type AccountingInvoicesAddResponse$Outbound =
  | components.CreateInvoiceResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const AccountingInvoicesAddResponse$outboundSchema: z.ZodType<
  AccountingInvoicesAddResponse$Outbound,
  z.ZodTypeDef,
  AccountingInvoicesAddResponse
> = z.union([
  components.CreateInvoiceResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingInvoicesAddResponse$ {
  /** @deprecated use `AccountingInvoicesAddResponse$inboundSchema` instead. */
  export const inboundSchema = AccountingInvoicesAddResponse$inboundSchema;
  /** @deprecated use `AccountingInvoicesAddResponse$outboundSchema` instead. */
  export const outboundSchema = AccountingInvoicesAddResponse$outboundSchema;
  /** @deprecated use `AccountingInvoicesAddResponse$Outbound` instead. */
  export type Outbound = AccountingInvoicesAddResponse$Outbound;
}
