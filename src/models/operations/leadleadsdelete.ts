/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type LeadLeadsDeleteGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type LeadLeadsDeleteRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
};

export type LeadLeadsDeleteResponse =
  | components.DeleteLeadResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const LeadLeadsDeleteGlobals$inboundSchema: z.ZodType<
  LeadLeadsDeleteGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type LeadLeadsDeleteGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const LeadLeadsDeleteGlobals$outboundSchema: z.ZodType<
  LeadLeadsDeleteGlobals$Outbound,
  z.ZodTypeDef,
  LeadLeadsDeleteGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LeadLeadsDeleteGlobals$ {
  /** @deprecated use `LeadLeadsDeleteGlobals$inboundSchema` instead. */
  export const inboundSchema = LeadLeadsDeleteGlobals$inboundSchema;
  /** @deprecated use `LeadLeadsDeleteGlobals$outboundSchema` instead. */
  export const outboundSchema = LeadLeadsDeleteGlobals$outboundSchema;
  /** @deprecated use `LeadLeadsDeleteGlobals$Outbound` instead. */
  export type Outbound = LeadLeadsDeleteGlobals$Outbound;
}

/** @internal */
export const LeadLeadsDeleteRequest$inboundSchema: z.ZodType<
  LeadLeadsDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/** @internal */
export type LeadLeadsDeleteRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
};

/** @internal */
export const LeadLeadsDeleteRequest$outboundSchema: z.ZodType<
  LeadLeadsDeleteRequest$Outbound,
  z.ZodTypeDef,
  LeadLeadsDeleteRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LeadLeadsDeleteRequest$ {
  /** @deprecated use `LeadLeadsDeleteRequest$inboundSchema` instead. */
  export const inboundSchema = LeadLeadsDeleteRequest$inboundSchema;
  /** @deprecated use `LeadLeadsDeleteRequest$outboundSchema` instead. */
  export const outboundSchema = LeadLeadsDeleteRequest$outboundSchema;
  /** @deprecated use `LeadLeadsDeleteRequest$Outbound` instead. */
  export type Outbound = LeadLeadsDeleteRequest$Outbound;
}

/** @internal */
export const LeadLeadsDeleteResponse$inboundSchema: z.ZodType<
  LeadLeadsDeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.DeleteLeadResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type LeadLeadsDeleteResponse$Outbound =
  | components.DeleteLeadResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const LeadLeadsDeleteResponse$outboundSchema: z.ZodType<
  LeadLeadsDeleteResponse$Outbound,
  z.ZodTypeDef,
  LeadLeadsDeleteResponse
> = z.union([
  components.DeleteLeadResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LeadLeadsDeleteResponse$ {
  /** @deprecated use `LeadLeadsDeleteResponse$inboundSchema` instead. */
  export const inboundSchema = LeadLeadsDeleteResponse$inboundSchema;
  /** @deprecated use `LeadLeadsDeleteResponse$outboundSchema` instead. */
  export const outboundSchema = LeadLeadsDeleteResponse$outboundSchema;
  /** @deprecated use `LeadLeadsDeleteResponse$Outbound` instead. */
  export type Outbound = LeadLeadsDeleteResponse$Outbound;
}
