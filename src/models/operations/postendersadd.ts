/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type PosTendersAddGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type PosTendersAddRequest = {
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  tender: components.TenderInput;
};

export type PosTendersAddResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * Tenders
   */
  createTenderResponse?: components.CreateTenderResponse | undefined;
  /**
   * Unexpected error
   */
  unexpectedErrorResponse?: components.UnexpectedErrorResponse | undefined;
};

/** @internal */
export const PosTendersAddGlobals$inboundSchema: z.ZodType<
  PosTendersAddGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type PosTendersAddGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const PosTendersAddGlobals$outboundSchema: z.ZodType<
  PosTendersAddGlobals$Outbound,
  z.ZodTypeDef,
  PosTendersAddGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosTendersAddGlobals$ {
  /** @deprecated use `PosTendersAddGlobals$inboundSchema` instead. */
  export const inboundSchema = PosTendersAddGlobals$inboundSchema;
  /** @deprecated use `PosTendersAddGlobals$outboundSchema` instead. */
  export const outboundSchema = PosTendersAddGlobals$outboundSchema;
  /** @deprecated use `PosTendersAddGlobals$Outbound` instead. */
  export type Outbound = PosTendersAddGlobals$Outbound;
}

/** @internal */
export const PosTendersAddRequest$inboundSchema: z.ZodType<
  PosTendersAddRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  Tender: components.TenderInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Tender": "tender",
  });
});

/** @internal */
export type PosTendersAddRequest$Outbound = {
  raw: boolean;
  serviceId?: string | undefined;
  Tender: components.TenderInput$Outbound;
};

/** @internal */
export const PosTendersAddRequest$outboundSchema: z.ZodType<
  PosTendersAddRequest$Outbound,
  z.ZodTypeDef,
  PosTendersAddRequest
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  tender: components.TenderInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    tender: "Tender",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosTendersAddRequest$ {
  /** @deprecated use `PosTendersAddRequest$inboundSchema` instead. */
  export const inboundSchema = PosTendersAddRequest$inboundSchema;
  /** @deprecated use `PosTendersAddRequest$outboundSchema` instead. */
  export const outboundSchema = PosTendersAddRequest$outboundSchema;
  /** @deprecated use `PosTendersAddRequest$Outbound` instead. */
  export type Outbound = PosTendersAddRequest$Outbound;
}

/** @internal */
export const PosTendersAddResponse$inboundSchema: z.ZodType<
  PosTendersAddResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  CreateTenderResponse: components.CreateTenderResponse$inboundSchema
    .optional(),
  UnexpectedErrorResponse: components.UnexpectedErrorResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "CreateTenderResponse": "createTenderResponse",
    "UnexpectedErrorResponse": "unexpectedErrorResponse",
  });
});

/** @internal */
export type PosTendersAddResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  CreateTenderResponse?: components.CreateTenderResponse$Outbound | undefined;
  UnexpectedErrorResponse?:
    | components.UnexpectedErrorResponse$Outbound
    | undefined;
};

/** @internal */
export const PosTendersAddResponse$outboundSchema: z.ZodType<
  PosTendersAddResponse$Outbound,
  z.ZodTypeDef,
  PosTendersAddResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  createTenderResponse: components.CreateTenderResponse$outboundSchema
    .optional(),
  unexpectedErrorResponse: components.UnexpectedErrorResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    createTenderResponse: "CreateTenderResponse",
    unexpectedErrorResponse: "UnexpectedErrorResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosTendersAddResponse$ {
  /** @deprecated use `PosTendersAddResponse$inboundSchema` instead. */
  export const inboundSchema = PosTendersAddResponse$inboundSchema;
  /** @deprecated use `PosTendersAddResponse$outboundSchema` instead. */
  export const outboundSchema = PosTendersAddResponse$outboundSchema;
  /** @deprecated use `PosTendersAddResponse$Outbound` instead. */
  export type Outbound = PosTendersAddResponse$Outbound;
}
