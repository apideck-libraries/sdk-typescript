/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type VaultCustomFieldsAllGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type VaultCustomFieldsAllRequest = {
  /**
   * Unified API
   */
  unifiedApi: string;
  /**
   * Service ID of the resource to return
   */
  serviceId: string;
  /**
   * Name of the resource (plural)
   */
  resource: string;
  /**
   * This is the id of the resource you want to fetch when listing custom fields. For example, if you want to fetch custom fields for a specific contact, you would use the contact id.
   */
  resourceId?: string | undefined;
};

export type VaultCustomFieldsAllResponse =
  | components.GetCustomFieldsResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const VaultCustomFieldsAllGlobals$inboundSchema: z.ZodType<
  VaultCustomFieldsAllGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type VaultCustomFieldsAllGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const VaultCustomFieldsAllGlobals$outboundSchema: z.ZodType<
  VaultCustomFieldsAllGlobals$Outbound,
  z.ZodTypeDef,
  VaultCustomFieldsAllGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VaultCustomFieldsAllGlobals$ {
  /** @deprecated use `VaultCustomFieldsAllGlobals$inboundSchema` instead. */
  export const inboundSchema = VaultCustomFieldsAllGlobals$inboundSchema;
  /** @deprecated use `VaultCustomFieldsAllGlobals$outboundSchema` instead. */
  export const outboundSchema = VaultCustomFieldsAllGlobals$outboundSchema;
  /** @deprecated use `VaultCustomFieldsAllGlobals$Outbound` instead. */
  export type Outbound = VaultCustomFieldsAllGlobals$Outbound;
}

/** @internal */
export const VaultCustomFieldsAllRequest$inboundSchema: z.ZodType<
  VaultCustomFieldsAllRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  unified_api: z.string(),
  service_id: z.string(),
  resource: z.string(),
  resource_id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "unified_api": "unifiedApi",
    "service_id": "serviceId",
    "resource_id": "resourceId",
  });
});

/** @internal */
export type VaultCustomFieldsAllRequest$Outbound = {
  unified_api: string;
  service_id: string;
  resource: string;
  resource_id?: string | undefined;
};

/** @internal */
export const VaultCustomFieldsAllRequest$outboundSchema: z.ZodType<
  VaultCustomFieldsAllRequest$Outbound,
  z.ZodTypeDef,
  VaultCustomFieldsAllRequest
> = z.object({
  unifiedApi: z.string(),
  serviceId: z.string(),
  resource: z.string(),
  resourceId: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    unifiedApi: "unified_api",
    serviceId: "service_id",
    resourceId: "resource_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VaultCustomFieldsAllRequest$ {
  /** @deprecated use `VaultCustomFieldsAllRequest$inboundSchema` instead. */
  export const inboundSchema = VaultCustomFieldsAllRequest$inboundSchema;
  /** @deprecated use `VaultCustomFieldsAllRequest$outboundSchema` instead. */
  export const outboundSchema = VaultCustomFieldsAllRequest$outboundSchema;
  /** @deprecated use `VaultCustomFieldsAllRequest$Outbound` instead. */
  export type Outbound = VaultCustomFieldsAllRequest$Outbound;
}

/** @internal */
export const VaultCustomFieldsAllResponse$inboundSchema: z.ZodType<
  VaultCustomFieldsAllResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.GetCustomFieldsResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type VaultCustomFieldsAllResponse$Outbound =
  | components.GetCustomFieldsResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const VaultCustomFieldsAllResponse$outboundSchema: z.ZodType<
  VaultCustomFieldsAllResponse$Outbound,
  z.ZodTypeDef,
  VaultCustomFieldsAllResponse
> = z.union([
  components.GetCustomFieldsResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VaultCustomFieldsAllResponse$ {
  /** @deprecated use `VaultCustomFieldsAllResponse$inboundSchema` instead. */
  export const inboundSchema = VaultCustomFieldsAllResponse$inboundSchema;
  /** @deprecated use `VaultCustomFieldsAllResponse$outboundSchema` instead. */
  export const outboundSchema = VaultCustomFieldsAllResponse$outboundSchema;
  /** @deprecated use `VaultCustomFieldsAllResponse$Outbound` instead. */
  export type Outbound = VaultCustomFieldsAllResponse$Outbound;
}
