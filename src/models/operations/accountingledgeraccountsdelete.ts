/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type AccountingLedgerAccountsDeleteGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type AccountingLedgerAccountsDeleteRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
};

export type AccountingLedgerAccountsDeleteResponse =
  | components.DeleteLedgerAccountResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const AccountingLedgerAccountsDeleteGlobals$inboundSchema: z.ZodType<
  AccountingLedgerAccountsDeleteGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type AccountingLedgerAccountsDeleteGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const AccountingLedgerAccountsDeleteGlobals$outboundSchema: z.ZodType<
  AccountingLedgerAccountsDeleteGlobals$Outbound,
  z.ZodTypeDef,
  AccountingLedgerAccountsDeleteGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingLedgerAccountsDeleteGlobals$ {
  /** @deprecated use `AccountingLedgerAccountsDeleteGlobals$inboundSchema` instead. */
  export const inboundSchema =
    AccountingLedgerAccountsDeleteGlobals$inboundSchema;
  /** @deprecated use `AccountingLedgerAccountsDeleteGlobals$outboundSchema` instead. */
  export const outboundSchema =
    AccountingLedgerAccountsDeleteGlobals$outboundSchema;
  /** @deprecated use `AccountingLedgerAccountsDeleteGlobals$Outbound` instead. */
  export type Outbound = AccountingLedgerAccountsDeleteGlobals$Outbound;
}

/** @internal */
export const AccountingLedgerAccountsDeleteRequest$inboundSchema: z.ZodType<
  AccountingLedgerAccountsDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/** @internal */
export type AccountingLedgerAccountsDeleteRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
};

/** @internal */
export const AccountingLedgerAccountsDeleteRequest$outboundSchema: z.ZodType<
  AccountingLedgerAccountsDeleteRequest$Outbound,
  z.ZodTypeDef,
  AccountingLedgerAccountsDeleteRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingLedgerAccountsDeleteRequest$ {
  /** @deprecated use `AccountingLedgerAccountsDeleteRequest$inboundSchema` instead. */
  export const inboundSchema =
    AccountingLedgerAccountsDeleteRequest$inboundSchema;
  /** @deprecated use `AccountingLedgerAccountsDeleteRequest$outboundSchema` instead. */
  export const outboundSchema =
    AccountingLedgerAccountsDeleteRequest$outboundSchema;
  /** @deprecated use `AccountingLedgerAccountsDeleteRequest$Outbound` instead. */
  export type Outbound = AccountingLedgerAccountsDeleteRequest$Outbound;
}

/** @internal */
export const AccountingLedgerAccountsDeleteResponse$inboundSchema: z.ZodType<
  AccountingLedgerAccountsDeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.DeleteLedgerAccountResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type AccountingLedgerAccountsDeleteResponse$Outbound =
  | components.DeleteLedgerAccountResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const AccountingLedgerAccountsDeleteResponse$outboundSchema: z.ZodType<
  AccountingLedgerAccountsDeleteResponse$Outbound,
  z.ZodTypeDef,
  AccountingLedgerAccountsDeleteResponse
> = z.union([
  components.DeleteLedgerAccountResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingLedgerAccountsDeleteResponse$ {
  /** @deprecated use `AccountingLedgerAccountsDeleteResponse$inboundSchema` instead. */
  export const inboundSchema =
    AccountingLedgerAccountsDeleteResponse$inboundSchema;
  /** @deprecated use `AccountingLedgerAccountsDeleteResponse$outboundSchema` instead. */
  export const outboundSchema =
    AccountingLedgerAccountsDeleteResponse$outboundSchema;
  /** @deprecated use `AccountingLedgerAccountsDeleteResponse$Outbound` instead. */
  export type Outbound = AccountingLedgerAccountsDeleteResponse$Outbound;
}
