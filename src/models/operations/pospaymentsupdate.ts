/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type PosPaymentsUpdateGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type PosPaymentsUpdateRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  posPayment: components.PosPaymentInput;
};

export type PosPaymentsUpdateResponse =
  | components.UpdatePosPaymentResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const PosPaymentsUpdateGlobals$inboundSchema: z.ZodType<
  PosPaymentsUpdateGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type PosPaymentsUpdateGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const PosPaymentsUpdateGlobals$outboundSchema: z.ZodType<
  PosPaymentsUpdateGlobals$Outbound,
  z.ZodTypeDef,
  PosPaymentsUpdateGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosPaymentsUpdateGlobals$ {
  /** @deprecated use `PosPaymentsUpdateGlobals$inboundSchema` instead. */
  export const inboundSchema = PosPaymentsUpdateGlobals$inboundSchema;
  /** @deprecated use `PosPaymentsUpdateGlobals$outboundSchema` instead. */
  export const outboundSchema = PosPaymentsUpdateGlobals$outboundSchema;
  /** @deprecated use `PosPaymentsUpdateGlobals$Outbound` instead. */
  export type Outbound = PosPaymentsUpdateGlobals$Outbound;
}

/** @internal */
export const PosPaymentsUpdateRequest$inboundSchema: z.ZodType<
  PosPaymentsUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  PosPayment: components.PosPaymentInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "PosPayment": "posPayment",
  });
});

/** @internal */
export type PosPaymentsUpdateRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
  PosPayment: components.PosPaymentInput$Outbound;
};

/** @internal */
export const PosPaymentsUpdateRequest$outboundSchema: z.ZodType<
  PosPaymentsUpdateRequest$Outbound,
  z.ZodTypeDef,
  PosPaymentsUpdateRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
  posPayment: components.PosPaymentInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    posPayment: "PosPayment",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosPaymentsUpdateRequest$ {
  /** @deprecated use `PosPaymentsUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = PosPaymentsUpdateRequest$inboundSchema;
  /** @deprecated use `PosPaymentsUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = PosPaymentsUpdateRequest$outboundSchema;
  /** @deprecated use `PosPaymentsUpdateRequest$Outbound` instead. */
  export type Outbound = PosPaymentsUpdateRequest$Outbound;
}

/** @internal */
export const PosPaymentsUpdateResponse$inboundSchema: z.ZodType<
  PosPaymentsUpdateResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.UpdatePosPaymentResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type PosPaymentsUpdateResponse$Outbound =
  | components.UpdatePosPaymentResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const PosPaymentsUpdateResponse$outboundSchema: z.ZodType<
  PosPaymentsUpdateResponse$Outbound,
  z.ZodTypeDef,
  PosPaymentsUpdateResponse
> = z.union([
  components.UpdatePosPaymentResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosPaymentsUpdateResponse$ {
  /** @deprecated use `PosPaymentsUpdateResponse$inboundSchema` instead. */
  export const inboundSchema = PosPaymentsUpdateResponse$inboundSchema;
  /** @deprecated use `PosPaymentsUpdateResponse$outboundSchema` instead. */
  export const outboundSchema = PosPaymentsUpdateResponse$outboundSchema;
  /** @deprecated use `PosPaymentsUpdateResponse$Outbound` instead. */
  export type Outbound = PosPaymentsUpdateResponse$Outbound;
}
