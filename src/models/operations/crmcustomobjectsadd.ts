/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CrmCustomObjectsAddGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  consumerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type CrmCustomObjectsAddRequest = {
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  /**
   * ID of the consumer which you want to get or push data from
   */
  consumerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * The id of the custom object to query
   */
  objectId: string;
  customObject: components.CustomObjectInput;
};

export type CrmCustomObjectsAddResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * Custom object created
   */
  createCustomObjectResponse?:
    | components.CreateCustomObjectResponse
    | undefined;
  /**
   * Unexpected error
   */
  unexpectedErrorResponse?: components.UnexpectedErrorResponse | undefined;
};

/** @internal */
export const CrmCustomObjectsAddGlobals$inboundSchema: z.ZodType<
  CrmCustomObjectsAddGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  consumerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type CrmCustomObjectsAddGlobals$Outbound = {
  consumerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const CrmCustomObjectsAddGlobals$outboundSchema: z.ZodType<
  CrmCustomObjectsAddGlobals$Outbound,
  z.ZodTypeDef,
  CrmCustomObjectsAddGlobals
> = z.object({
  consumerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CrmCustomObjectsAddGlobals$ {
  /** @deprecated use `CrmCustomObjectsAddGlobals$inboundSchema` instead. */
  export const inboundSchema = CrmCustomObjectsAddGlobals$inboundSchema;
  /** @deprecated use `CrmCustomObjectsAddGlobals$outboundSchema` instead. */
  export const outboundSchema = CrmCustomObjectsAddGlobals$outboundSchema;
  /** @deprecated use `CrmCustomObjectsAddGlobals$Outbound` instead. */
  export type Outbound = CrmCustomObjectsAddGlobals$Outbound;
}

export function crmCustomObjectsAddGlobalsToJSON(
  crmCustomObjectsAddGlobals: CrmCustomObjectsAddGlobals,
): string {
  return JSON.stringify(
    CrmCustomObjectsAddGlobals$outboundSchema.parse(crmCustomObjectsAddGlobals),
  );
}

export function crmCustomObjectsAddGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<CrmCustomObjectsAddGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CrmCustomObjectsAddGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CrmCustomObjectsAddGlobals' from JSON`,
  );
}

/** @internal */
export const CrmCustomObjectsAddRequest$inboundSchema: z.ZodType<
  CrmCustomObjectsAddRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  raw: z.boolean().default(false),
  consumerId: z.string().optional(),
  appId: z.string().optional(),
  serviceId: z.string().optional(),
  object_id: z.string(),
  CustomObject: components.CustomObjectInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "object_id": "objectId",
    "CustomObject": "customObject",
  });
});

/** @internal */
export type CrmCustomObjectsAddRequest$Outbound = {
  raw: boolean;
  consumerId?: string | undefined;
  appId?: string | undefined;
  serviceId?: string | undefined;
  object_id: string;
  CustomObject: components.CustomObjectInput$Outbound;
};

/** @internal */
export const CrmCustomObjectsAddRequest$outboundSchema: z.ZodType<
  CrmCustomObjectsAddRequest$Outbound,
  z.ZodTypeDef,
  CrmCustomObjectsAddRequest
> = z.object({
  raw: z.boolean().default(false),
  consumerId: z.string().optional(),
  appId: z.string().optional(),
  serviceId: z.string().optional(),
  objectId: z.string(),
  customObject: components.CustomObjectInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    objectId: "object_id",
    customObject: "CustomObject",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CrmCustomObjectsAddRequest$ {
  /** @deprecated use `CrmCustomObjectsAddRequest$inboundSchema` instead. */
  export const inboundSchema = CrmCustomObjectsAddRequest$inboundSchema;
  /** @deprecated use `CrmCustomObjectsAddRequest$outboundSchema` instead. */
  export const outboundSchema = CrmCustomObjectsAddRequest$outboundSchema;
  /** @deprecated use `CrmCustomObjectsAddRequest$Outbound` instead. */
  export type Outbound = CrmCustomObjectsAddRequest$Outbound;
}

export function crmCustomObjectsAddRequestToJSON(
  crmCustomObjectsAddRequest: CrmCustomObjectsAddRequest,
): string {
  return JSON.stringify(
    CrmCustomObjectsAddRequest$outboundSchema.parse(crmCustomObjectsAddRequest),
  );
}

export function crmCustomObjectsAddRequestFromJSON(
  jsonString: string,
): SafeParseResult<CrmCustomObjectsAddRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CrmCustomObjectsAddRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CrmCustomObjectsAddRequest' from JSON`,
  );
}

/** @internal */
export const CrmCustomObjectsAddResponse$inboundSchema: z.ZodType<
  CrmCustomObjectsAddResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  CreateCustomObjectResponse: components
    .CreateCustomObjectResponse$inboundSchema.optional(),
  UnexpectedErrorResponse: components.UnexpectedErrorResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "CreateCustomObjectResponse": "createCustomObjectResponse",
    "UnexpectedErrorResponse": "unexpectedErrorResponse",
  });
});

/** @internal */
export type CrmCustomObjectsAddResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  CreateCustomObjectResponse?:
    | components.CreateCustomObjectResponse$Outbound
    | undefined;
  UnexpectedErrorResponse?:
    | components.UnexpectedErrorResponse$Outbound
    | undefined;
};

/** @internal */
export const CrmCustomObjectsAddResponse$outboundSchema: z.ZodType<
  CrmCustomObjectsAddResponse$Outbound,
  z.ZodTypeDef,
  CrmCustomObjectsAddResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  createCustomObjectResponse: components
    .CreateCustomObjectResponse$outboundSchema.optional(),
  unexpectedErrorResponse: components.UnexpectedErrorResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    createCustomObjectResponse: "CreateCustomObjectResponse",
    unexpectedErrorResponse: "UnexpectedErrorResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CrmCustomObjectsAddResponse$ {
  /** @deprecated use `CrmCustomObjectsAddResponse$inboundSchema` instead. */
  export const inboundSchema = CrmCustomObjectsAddResponse$inboundSchema;
  /** @deprecated use `CrmCustomObjectsAddResponse$outboundSchema` instead. */
  export const outboundSchema = CrmCustomObjectsAddResponse$outboundSchema;
  /** @deprecated use `CrmCustomObjectsAddResponse$Outbound` instead. */
  export type Outbound = CrmCustomObjectsAddResponse$Outbound;
}

export function crmCustomObjectsAddResponseToJSON(
  crmCustomObjectsAddResponse: CrmCustomObjectsAddResponse,
): string {
  return JSON.stringify(
    CrmCustomObjectsAddResponse$outboundSchema.parse(
      crmCustomObjectsAddResponse,
    ),
  );
}

export function crmCustomObjectsAddResponseFromJSON(
  jsonString: string,
): SafeParseResult<CrmCustomObjectsAddResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CrmCustomObjectsAddResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CrmCustomObjectsAddResponse' from JSON`,
  );
}
