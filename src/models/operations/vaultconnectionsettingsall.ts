/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type VaultConnectionSettingsAllGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type VaultConnectionSettingsAllRequest = {
  /**
   * Unified API
   */
  unifiedApi: string;
  /**
   * Service ID of the resource to return
   */
  serviceId: string;
  /**
   * Name of the resource (plural)
   */
  resource: string;
};

export type VaultConnectionSettingsAllResponse =
  | components.GetConnectionResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const VaultConnectionSettingsAllGlobals$inboundSchema: z.ZodType<
  VaultConnectionSettingsAllGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type VaultConnectionSettingsAllGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const VaultConnectionSettingsAllGlobals$outboundSchema: z.ZodType<
  VaultConnectionSettingsAllGlobals$Outbound,
  z.ZodTypeDef,
  VaultConnectionSettingsAllGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VaultConnectionSettingsAllGlobals$ {
  /** @deprecated use `VaultConnectionSettingsAllGlobals$inboundSchema` instead. */
  export const inboundSchema = VaultConnectionSettingsAllGlobals$inboundSchema;
  /** @deprecated use `VaultConnectionSettingsAllGlobals$outboundSchema` instead. */
  export const outboundSchema =
    VaultConnectionSettingsAllGlobals$outboundSchema;
  /** @deprecated use `VaultConnectionSettingsAllGlobals$Outbound` instead. */
  export type Outbound = VaultConnectionSettingsAllGlobals$Outbound;
}

/** @internal */
export const VaultConnectionSettingsAllRequest$inboundSchema: z.ZodType<
  VaultConnectionSettingsAllRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  unified_api: z.string(),
  service_id: z.string(),
  resource: z.string(),
}).transform((v) => {
  return remap$(v, {
    "unified_api": "unifiedApi",
    "service_id": "serviceId",
  });
});

/** @internal */
export type VaultConnectionSettingsAllRequest$Outbound = {
  unified_api: string;
  service_id: string;
  resource: string;
};

/** @internal */
export const VaultConnectionSettingsAllRequest$outboundSchema: z.ZodType<
  VaultConnectionSettingsAllRequest$Outbound,
  z.ZodTypeDef,
  VaultConnectionSettingsAllRequest
> = z.object({
  unifiedApi: z.string(),
  serviceId: z.string(),
  resource: z.string(),
}).transform((v) => {
  return remap$(v, {
    unifiedApi: "unified_api",
    serviceId: "service_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VaultConnectionSettingsAllRequest$ {
  /** @deprecated use `VaultConnectionSettingsAllRequest$inboundSchema` instead. */
  export const inboundSchema = VaultConnectionSettingsAllRequest$inboundSchema;
  /** @deprecated use `VaultConnectionSettingsAllRequest$outboundSchema` instead. */
  export const outboundSchema =
    VaultConnectionSettingsAllRequest$outboundSchema;
  /** @deprecated use `VaultConnectionSettingsAllRequest$Outbound` instead. */
  export type Outbound = VaultConnectionSettingsAllRequest$Outbound;
}

/** @internal */
export const VaultConnectionSettingsAllResponse$inboundSchema: z.ZodType<
  VaultConnectionSettingsAllResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.GetConnectionResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type VaultConnectionSettingsAllResponse$Outbound =
  | components.GetConnectionResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const VaultConnectionSettingsAllResponse$outboundSchema: z.ZodType<
  VaultConnectionSettingsAllResponse$Outbound,
  z.ZodTypeDef,
  VaultConnectionSettingsAllResponse
> = z.union([
  components.GetConnectionResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VaultConnectionSettingsAllResponse$ {
  /** @deprecated use `VaultConnectionSettingsAllResponse$inboundSchema` instead. */
  export const inboundSchema = VaultConnectionSettingsAllResponse$inboundSchema;
  /** @deprecated use `VaultConnectionSettingsAllResponse$outboundSchema` instead. */
  export const outboundSchema =
    VaultConnectionSettingsAllResponse$outboundSchema;
  /** @deprecated use `VaultConnectionSettingsAllResponse$Outbound` instead. */
  export type Outbound = VaultConnectionSettingsAllResponse$Outbound;
}
