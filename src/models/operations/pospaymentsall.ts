/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type PosPaymentsAllGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type PosPaymentsAllRequest = {
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
   */
  cursor?: string | null | undefined;
  /**
   * Number of results to return. Minimum 1, Maximum 200, Default 20
   */
  limit?: number | undefined;
  /**
   * The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.
   */
  fields?: string | null | undefined;
};

export type PosPaymentsAllResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * PosPayments
   */
  getPosPaymentsResponse?: components.GetPosPaymentsResponse | undefined;
  /**
   * Unexpected error
   */
  unexpectedErrorResponse?: components.UnexpectedErrorResponse | undefined;
};

/** @internal */
export const PosPaymentsAllGlobals$inboundSchema: z.ZodType<
  PosPaymentsAllGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type PosPaymentsAllGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const PosPaymentsAllGlobals$outboundSchema: z.ZodType<
  PosPaymentsAllGlobals$Outbound,
  z.ZodTypeDef,
  PosPaymentsAllGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosPaymentsAllGlobals$ {
  /** @deprecated use `PosPaymentsAllGlobals$inboundSchema` instead. */
  export const inboundSchema = PosPaymentsAllGlobals$inboundSchema;
  /** @deprecated use `PosPaymentsAllGlobals$outboundSchema` instead. */
  export const outboundSchema = PosPaymentsAllGlobals$outboundSchema;
  /** @deprecated use `PosPaymentsAllGlobals$Outbound` instead. */
  export type Outbound = PosPaymentsAllGlobals$Outbound;
}

/** @internal */
export const PosPaymentsAllRequest$inboundSchema: z.ZodType<
  PosPaymentsAllRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  cursor: z.nullable(z.string()).optional(),
  limit: z.number().int().default(20),
  fields: z.nullable(z.string()).optional(),
});

/** @internal */
export type PosPaymentsAllRequest$Outbound = {
  raw: boolean;
  serviceId?: string | undefined;
  cursor?: string | null | undefined;
  limit: number;
  fields?: string | null | undefined;
};

/** @internal */
export const PosPaymentsAllRequest$outboundSchema: z.ZodType<
  PosPaymentsAllRequest$Outbound,
  z.ZodTypeDef,
  PosPaymentsAllRequest
> = z.object({
  raw: z.boolean().default(false),
  serviceId: z.string().optional(),
  cursor: z.nullable(z.string()).optional(),
  limit: z.number().int().default(20),
  fields: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosPaymentsAllRequest$ {
  /** @deprecated use `PosPaymentsAllRequest$inboundSchema` instead. */
  export const inboundSchema = PosPaymentsAllRequest$inboundSchema;
  /** @deprecated use `PosPaymentsAllRequest$outboundSchema` instead. */
  export const outboundSchema = PosPaymentsAllRequest$outboundSchema;
  /** @deprecated use `PosPaymentsAllRequest$Outbound` instead. */
  export type Outbound = PosPaymentsAllRequest$Outbound;
}

/** @internal */
export const PosPaymentsAllResponse$inboundSchema: z.ZodType<
  PosPaymentsAllResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  GetPosPaymentsResponse: components.GetPosPaymentsResponse$inboundSchema
    .optional(),
  UnexpectedErrorResponse: components.UnexpectedErrorResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "GetPosPaymentsResponse": "getPosPaymentsResponse",
    "UnexpectedErrorResponse": "unexpectedErrorResponse",
  });
});

/** @internal */
export type PosPaymentsAllResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  GetPosPaymentsResponse?:
    | components.GetPosPaymentsResponse$Outbound
    | undefined;
  UnexpectedErrorResponse?:
    | components.UnexpectedErrorResponse$Outbound
    | undefined;
};

/** @internal */
export const PosPaymentsAllResponse$outboundSchema: z.ZodType<
  PosPaymentsAllResponse$Outbound,
  z.ZodTypeDef,
  PosPaymentsAllResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  getPosPaymentsResponse: components.GetPosPaymentsResponse$outboundSchema
    .optional(),
  unexpectedErrorResponse: components.UnexpectedErrorResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    getPosPaymentsResponse: "GetPosPaymentsResponse",
    unexpectedErrorResponse: "UnexpectedErrorResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PosPaymentsAllResponse$ {
  /** @deprecated use `PosPaymentsAllResponse$inboundSchema` instead. */
  export const inboundSchema = PosPaymentsAllResponse$inboundSchema;
  /** @deprecated use `PosPaymentsAllResponse$outboundSchema` instead. */
  export const outboundSchema = PosPaymentsAllResponse$outboundSchema;
  /** @deprecated use `PosPaymentsAllResponse$Outbound` instead. */
  export type Outbound = PosPaymentsAllResponse$Outbound;
}
