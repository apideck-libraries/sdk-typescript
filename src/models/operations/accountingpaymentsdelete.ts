/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type AccountingPaymentsDeleteGlobals = {
  /**
   * ID of the consumer which you want to get or push data from
   */
  customerId?: string | undefined;
  /**
   * The ID of your Unify application
   */
  appId?: string | undefined;
};

export type AccountingPaymentsDeleteRequest = {
  /**
   * ID of the record you are acting upon.
   */
  id: string;
  /**
   * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
   */
  serviceId?: string | undefined;
  /**
   * Include raw response. Mostly used for debugging purposes
   */
  raw?: boolean | undefined;
};

export type AccountingPaymentsDeleteResponse =
  | components.DeletePaymentResponse
  | components.UnexpectedErrorResponse;

/** @internal */
export const AccountingPaymentsDeleteGlobals$inboundSchema: z.ZodType<
  AccountingPaymentsDeleteGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/** @internal */
export type AccountingPaymentsDeleteGlobals$Outbound = {
  customerId?: string | undefined;
  appId?: string | undefined;
};

/** @internal */
export const AccountingPaymentsDeleteGlobals$outboundSchema: z.ZodType<
  AccountingPaymentsDeleteGlobals$Outbound,
  z.ZodTypeDef,
  AccountingPaymentsDeleteGlobals
> = z.object({
  customerId: z.string().optional(),
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingPaymentsDeleteGlobals$ {
  /** @deprecated use `AccountingPaymentsDeleteGlobals$inboundSchema` instead. */
  export const inboundSchema = AccountingPaymentsDeleteGlobals$inboundSchema;
  /** @deprecated use `AccountingPaymentsDeleteGlobals$outboundSchema` instead. */
  export const outboundSchema = AccountingPaymentsDeleteGlobals$outboundSchema;
  /** @deprecated use `AccountingPaymentsDeleteGlobals$Outbound` instead. */
  export type Outbound = AccountingPaymentsDeleteGlobals$Outbound;
}

/** @internal */
export const AccountingPaymentsDeleteRequest$inboundSchema: z.ZodType<
  AccountingPaymentsDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/** @internal */
export type AccountingPaymentsDeleteRequest$Outbound = {
  id: string;
  serviceId?: string | undefined;
  raw: boolean;
};

/** @internal */
export const AccountingPaymentsDeleteRequest$outboundSchema: z.ZodType<
  AccountingPaymentsDeleteRequest$Outbound,
  z.ZodTypeDef,
  AccountingPaymentsDeleteRequest
> = z.object({
  id: z.string(),
  serviceId: z.string().optional(),
  raw: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingPaymentsDeleteRequest$ {
  /** @deprecated use `AccountingPaymentsDeleteRequest$inboundSchema` instead. */
  export const inboundSchema = AccountingPaymentsDeleteRequest$inboundSchema;
  /** @deprecated use `AccountingPaymentsDeleteRequest$outboundSchema` instead. */
  export const outboundSchema = AccountingPaymentsDeleteRequest$outboundSchema;
  /** @deprecated use `AccountingPaymentsDeleteRequest$Outbound` instead. */
  export type Outbound = AccountingPaymentsDeleteRequest$Outbound;
}

/** @internal */
export const AccountingPaymentsDeleteResponse$inboundSchema: z.ZodType<
  AccountingPaymentsDeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.DeletePaymentResponse$inboundSchema,
  components.UnexpectedErrorResponse$inboundSchema,
]);

/** @internal */
export type AccountingPaymentsDeleteResponse$Outbound =
  | components.DeletePaymentResponse$Outbound
  | components.UnexpectedErrorResponse$Outbound;

/** @internal */
export const AccountingPaymentsDeleteResponse$outboundSchema: z.ZodType<
  AccountingPaymentsDeleteResponse$Outbound,
  z.ZodTypeDef,
  AccountingPaymentsDeleteResponse
> = z.union([
  components.DeletePaymentResponse$outboundSchema,
  components.UnexpectedErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingPaymentsDeleteResponse$ {
  /** @deprecated use `AccountingPaymentsDeleteResponse$inboundSchema` instead. */
  export const inboundSchema = AccountingPaymentsDeleteResponse$inboundSchema;
  /** @deprecated use `AccountingPaymentsDeleteResponse$outboundSchema` instead. */
  export const outboundSchema = AccountingPaymentsDeleteResponse$outboundSchema;
  /** @deprecated use `AccountingPaymentsDeleteResponse$Outbound` instead. */
  export type Outbound = AccountingPaymentsDeleteResponse$Outbound;
}
