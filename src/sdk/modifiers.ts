/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { posModifiersCreate } from "../funcs/posModifiersCreate.js";
import { posModifiersDelete } from "../funcs/posModifiersDelete.js";
import { posModifiersGet } from "../funcs/posModifiersGet.js";
import { posModifiersList } from "../funcs/posModifiersList.js";
import { posModifiersUpdate } from "../funcs/posModifiersUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Modifiers extends ClientSDK {
  /**
   * List Modifiers
   *
   * @remarks
   * List Modifiers
   */
  async list(
    request: operations.PosModifiersAllRequest,
    options?: RequestOptions,
  ): Promise<operations.PosModifiersAllResponse> {
    return unwrapAsync(posModifiersList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Modifier
   *
   * @remarks
   * Create Modifier
   */
  async create(
    request: operations.PosModifiersAddRequest,
    options?: RequestOptions,
  ): Promise<operations.PosModifiersAddResponse> {
    return unwrapAsync(posModifiersCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Modifier
   *
   * @remarks
   * Get Modifier
   */
  async get(
    request: operations.PosModifiersOneRequest,
    options?: RequestOptions,
  ): Promise<operations.PosModifiersOneResponse> {
    return unwrapAsync(posModifiersGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Modifier
   *
   * @remarks
   * Update Modifier
   */
  async update(
    request: operations.PosModifiersUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.PosModifiersUpdateResponse> {
    return unwrapAsync(posModifiersUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Modifier
   *
   * @remarks
   * Delete Modifier
   */
  async delete(
    request: operations.PosModifiersDeleteRequest,
    options?: RequestOptions,
  ): Promise<operations.PosModifiersDeleteResponse> {
    return unwrapAsync(posModifiersDelete(
      this,
      request,
      options,
    ));
  }
}
