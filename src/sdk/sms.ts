/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { smsSmsMessagesAdd } from "../funcs/smsSmsMessagesAdd.js";
import { smsSmsMessagesAll } from "../funcs/smsSmsMessagesAll.js";
import { smsSmsMessagesDelete } from "../funcs/smsSmsMessagesDelete.js";
import { smsSmsMessagesOne } from "../funcs/smsSmsMessagesOne.js";
import { smsSmsMessagesUpdate } from "../funcs/smsSmsMessagesUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Sms extends ClientSDK {
  /**
   * List Messages
   *
   * @remarks
   * List Messages
   */
  async smsMessagesAll(
    request: operations.SmsMessagesAllRequest,
    options?: RequestOptions,
  ): Promise<operations.SmsMessagesAllResponse> {
    return unwrapAsync(smsSmsMessagesAll(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Message
   *
   * @remarks
   * Create Message
   */
  async smsMessagesAdd(
    request: operations.SmsMessagesAddRequest,
    options?: RequestOptions,
  ): Promise<operations.SmsMessagesAddResponse> {
    return unwrapAsync(smsSmsMessagesAdd(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Message
   *
   * @remarks
   * Get Message
   */
  async smsMessagesOne(
    request: operations.SmsMessagesOneRequest,
    options?: RequestOptions,
  ): Promise<operations.SmsMessagesOneResponse> {
    return unwrapAsync(smsSmsMessagesOne(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Message
   *
   * @remarks
   * Update Message
   */
  async smsMessagesUpdate(
    request: operations.SmsMessagesUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.SmsMessagesUpdateResponse> {
    return unwrapAsync(smsSmsMessagesUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Message
   *
   * @remarks
   * Delete Message
   */
  async smsMessagesDelete(
    request: operations.SmsMessagesDeleteRequest,
    options?: RequestOptions,
  ): Promise<operations.SmsMessagesDeleteResponse> {
    return unwrapAsync(smsSmsMessagesDelete(
      this,
      request,
      options,
    ));
  }
}
