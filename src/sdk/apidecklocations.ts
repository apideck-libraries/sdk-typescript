/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { posLocationsCreate } from "../funcs/posLocationsCreate.js";
import { posLocationsDelete } from "../funcs/posLocationsDelete.js";
import { posLocationsGet } from "../funcs/posLocationsGet.js";
import { posLocationsList } from "../funcs/posLocationsList.js";
import { posLocationsUpdate } from "../funcs/posLocationsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class ApideckLocations extends ClientSDK {
  /**
   * List Locations
   *
   * @remarks
   * List Locations
   */
  async list(
    request: operations.PosLocationsAllRequest,
    options?: RequestOptions,
  ): Promise<operations.PosLocationsAllResponse> {
    return unwrapAsync(posLocationsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Location
   *
   * @remarks
   * Create Location
   */
  async create(
    request: operations.PosLocationsAddRequest,
    options?: RequestOptions,
  ): Promise<operations.PosLocationsAddResponse> {
    return unwrapAsync(posLocationsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Location
   *
   * @remarks
   * Get Location
   */
  async get(
    request: operations.PosLocationsOneRequest,
    options?: RequestOptions,
  ): Promise<operations.PosLocationsOneResponse> {
    return unwrapAsync(posLocationsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Location
   *
   * @remarks
   * Update Location
   */
  async update(
    request: operations.PosLocationsUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.PosLocationsUpdateResponse> {
    return unwrapAsync(posLocationsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Location
   *
   * @remarks
   * Delete Location
   */
  async delete(
    request: operations.PosLocationsDeleteRequest,
    options?: RequestOptions,
  ): Promise<operations.PosLocationsDeleteResponse> {
    return unwrapAsync(posLocationsDelete(
      this,
      request,
      options,
    ));
  }
}
