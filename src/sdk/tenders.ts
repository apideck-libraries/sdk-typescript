/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { posTendersCreate } from "../funcs/posTendersCreate.js";
import { posTendersDelete } from "../funcs/posTendersDelete.js";
import { posTendersGet } from "../funcs/posTendersGet.js";
import { posTendersList } from "../funcs/posTendersList.js";
import { posTendersUpdate } from "../funcs/posTendersUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Tenders extends ClientSDK {
  /**
   * List Tenders
   *
   * @remarks
   * List Tenders
   */
  async list(
    request: operations.PosTendersAllRequest,
    options?: RequestOptions,
  ): Promise<operations.PosTendersAllResponse> {
    return unwrapAsync(posTendersList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Tender
   *
   * @remarks
   * Create Tender
   */
  async create(
    request: operations.PosTendersAddRequest,
    options?: RequestOptions,
  ): Promise<operations.PosTendersAddResponse> {
    return unwrapAsync(posTendersCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Tender
   *
   * @remarks
   * Get Tender
   */
  async get(
    request: operations.PosTendersOneRequest,
    options?: RequestOptions,
  ): Promise<operations.PosTendersOneResponse> {
    return unwrapAsync(posTendersGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Tender
   *
   * @remarks
   * Update Tender
   */
  async update(
    request: operations.PosTendersUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.PosTendersUpdateResponse> {
    return unwrapAsync(posTendersUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Tender
   *
   * @remarks
   * Delete Tender
   */
  async delete(
    request: operations.PosTendersDeleteRequest,
    options?: RequestOptions,
  ): Promise<operations.PosTendersDeleteResponse> {
    return unwrapAsync(posTendersDelete(
      this,
      request,
      options,
    ));
  }
}
