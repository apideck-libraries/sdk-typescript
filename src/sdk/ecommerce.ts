/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ecommerceEcommerceCustomersAll } from "../funcs/ecommerceEcommerceCustomersAll.js";
import { ecommerceEcommerceCustomersOne } from "../funcs/ecommerceEcommerceCustomersOne.js";
import { ecommerceEcommerceOrdersAll } from "../funcs/ecommerceEcommerceOrdersAll.js";
import { ecommerceEcommerceOrdersOne } from "../funcs/ecommerceEcommerceOrdersOne.js";
import { ecommerceEcommerceProductsAll } from "../funcs/ecommerceEcommerceProductsAll.js";
import { ecommerceEcommerceProductsOne } from "../funcs/ecommerceEcommerceProductsOne.js";
import { ecommerceEcommerceStoresOne } from "../funcs/ecommerceEcommerceStoresOne.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Ecommerce extends ClientSDK {
  /**
   * List Orders
   *
   * @remarks
   * List Orders
   */
  async ecommerceOrdersAll(
    request: operations.EcommerceOrdersAllRequest,
    options?: RequestOptions,
  ): Promise<operations.EcommerceOrdersAllResponse> {
    return unwrapAsync(ecommerceEcommerceOrdersAll(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Order
   *
   * @remarks
   * Get Order
   */
  async ecommerceOrdersOne(
    request: operations.EcommerceOrdersOneRequest,
    options?: RequestOptions,
  ): Promise<operations.EcommerceOrdersOneResponse> {
    return unwrapAsync(ecommerceEcommerceOrdersOne(
      this,
      request,
      options,
    ));
  }

  /**
   * List Products
   *
   * @remarks
   * List Products
   */
  async ecommerceProductsAll(
    request: operations.EcommerceProductsAllRequest,
    options?: RequestOptions,
  ): Promise<operations.EcommerceProductsAllResponse> {
    return unwrapAsync(ecommerceEcommerceProductsAll(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Product
   *
   * @remarks
   * Get Product
   */
  async ecommerceProductsOne(
    request: operations.EcommerceProductsOneRequest,
    options?: RequestOptions,
  ): Promise<operations.EcommerceProductsOneResponse> {
    return unwrapAsync(ecommerceEcommerceProductsOne(
      this,
      request,
      options,
    ));
  }

  /**
   * List Customers
   *
   * @remarks
   * List Customers
   */
  async ecommerceCustomersAll(
    request: operations.EcommerceCustomersAllRequest,
    options?: RequestOptions,
  ): Promise<operations.EcommerceCustomersAllResponse> {
    return unwrapAsync(ecommerceEcommerceCustomersAll(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Customer
   *
   * @remarks
   * Get Customer
   */
  async ecommerceCustomersOne(
    request: operations.EcommerceCustomersOneRequest,
    options?: RequestOptions,
  ): Promise<operations.EcommerceCustomersOneResponse> {
    return unwrapAsync(ecommerceEcommerceCustomersOne(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Store
   *
   * @remarks
   * Get Store
   */
  async ecommerceStoresOne(
    request: operations.EcommerceStoresOneRequest,
    options?: RequestOptions,
  ): Promise<operations.EcommerceStoresOneResponse> {
    return unwrapAsync(ecommerceEcommerceStoresOne(
      this,
      request,
      options,
    ));
  }
}
