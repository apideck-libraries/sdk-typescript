/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { crmCustomObjectSchemasCreate } from "../funcs/crmCustomObjectSchemasCreate.js";
import { crmCustomObjectSchemasDelete } from "../funcs/crmCustomObjectSchemasDelete.js";
import { crmCustomObjectSchemasGet } from "../funcs/crmCustomObjectSchemasGet.js";
import { crmCustomObjectSchemasList } from "../funcs/crmCustomObjectSchemasList.js";
import { crmCustomObjectSchemasUpdate } from "../funcs/crmCustomObjectSchemasUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class CustomObjectSchemas extends ClientSDK {
  /**
   * List custom object schemas
   *
   * @remarks
   * List custom object schemas
   */
  async list(
    request: operations.CrmCustomObjectSchemasAllRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.CrmCustomObjectSchemasAllResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(crmCustomObjectSchemasList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create custom object schema
   *
   * @remarks
   * Create custom object schema
   */
  async create(
    request: operations.CrmCustomObjectSchemasAddRequest,
    options?: RequestOptions,
  ): Promise<operations.CrmCustomObjectSchemasAddResponse> {
    return unwrapAsync(crmCustomObjectSchemasCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get custom object schema
   *
   * @remarks
   * Get custom object schema
   */
  async get(
    request: operations.CrmCustomObjectSchemasOneRequest,
    options?: RequestOptions,
  ): Promise<operations.CrmCustomObjectSchemasOneResponse> {
    return unwrapAsync(crmCustomObjectSchemasGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update custom object schema
   *
   * @remarks
   * Update custom object schema
   */
  async update(
    request: operations.CrmCustomObjectSchemasUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.CrmCustomObjectSchemasUpdateResponse> {
    return unwrapAsync(crmCustomObjectSchemasUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete custom object schema
   *
   * @remarks
   * Delete custom object schema
   */
  async delete(
    request: operations.CrmCustomObjectSchemasDeleteRequest,
    options?: RequestOptions,
  ): Promise<operations.CrmCustomObjectSchemasDeleteResponse> {
    return unwrapAsync(crmCustomObjectSchemasDelete(
      this,
      request,
      options,
    ));
  }
}
