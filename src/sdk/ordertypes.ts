/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { posOrderTypesCreate } from "../funcs/posOrderTypesCreate.js";
import { posOrderTypesDelete } from "../funcs/posOrderTypesDelete.js";
import { posOrderTypesGet } from "../funcs/posOrderTypesGet.js";
import { posOrderTypesList } from "../funcs/posOrderTypesList.js";
import { posOrderTypesUpdate } from "../funcs/posOrderTypesUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class OrderTypes extends ClientSDK {
  /**
   * List Order Types
   *
   * @remarks
   * List Order Types
   */
  async list(
    request: operations.PosOrderTypesAllRequest,
    options?: RequestOptions,
  ): Promise<operations.PosOrderTypesAllResponse> {
    return unwrapAsync(posOrderTypesList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Order Type
   *
   * @remarks
   * Create Order Type
   */
  async create(
    request: operations.PosOrderTypesAddRequest,
    options?: RequestOptions,
  ): Promise<operations.PosOrderTypesAddResponse> {
    return unwrapAsync(posOrderTypesCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Order Type
   *
   * @remarks
   * Get Order Type
   */
  async get(
    request: operations.PosOrderTypesOneRequest,
    options?: RequestOptions,
  ): Promise<operations.PosOrderTypesOneResponse> {
    return unwrapAsync(posOrderTypesGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Order Type
   *
   * @remarks
   * Update Order Type
   */
  async update(
    request: operations.PosOrderTypesUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.PosOrderTypesUpdateResponse> {
    return unwrapAsync(posOrderTypesUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Order Type
   *
   * @remarks
   * Delete Order Type
   */
  async delete(
    request: operations.PosOrderTypesDeleteRequest,
    options?: RequestOptions,
  ): Promise<operations.PosOrderTypesDeleteResponse> {
    return unwrapAsync(posOrderTypesDelete(
      this,
      request,
      options,
    ));
  }
}
