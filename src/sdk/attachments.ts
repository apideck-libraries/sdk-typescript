/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountingAttachmentsDelete } from "../funcs/accountingAttachmentsDelete.js";
import {
  accountingAttachmentsDownload,
  DownloadAcceptEnum,
} from "../funcs/accountingAttachmentsDownload.js";
import { accountingAttachmentsGet } from "../funcs/accountingAttachmentsGet.js";
import { accountingAttachmentsList } from "../funcs/accountingAttachmentsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { DownloadAcceptEnum } from "../funcs/accountingAttachmentsDownload.js";

export class Attachments extends ClientSDK {
  /**
   * List Attachments
   *
   * @remarks
   * List Attachments
   */
  async list(
    request: operations.AccountingAttachmentsAllRequest,
    options?: RequestOptions,
  ): Promise<operations.AccountingAttachmentsAllResponse> {
    return unwrapAsync(accountingAttachmentsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Attachment
   *
   * @remarks
   * Get Attachment
   */
  async get(
    request: operations.AccountingAttachmentsOneRequest,
    options?: RequestOptions,
  ): Promise<operations.AccountingAttachmentsOneResponse> {
    return unwrapAsync(accountingAttachmentsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Attachment
   *
   * @remarks
   * Delete Attachment
   */
  async delete(
    request: operations.AccountingAttachmentsDeleteRequest,
    options?: RequestOptions,
  ): Promise<operations.AccountingAttachmentsDeleteResponse> {
    return unwrapAsync(accountingAttachmentsDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Download Attachment
   *
   * @remarks
   * Download Attachment
   */
  async download(
    request: operations.AccountingAttachmentsDownloadRequest,
    options?: RequestOptions & { acceptHeaderOverride?: DownloadAcceptEnum },
  ): Promise<operations.AccountingAttachmentsDownloadResponse> {
    return unwrapAsync(accountingAttachmentsDownload(
      this,
      request,
      options,
    ));
  }
}
