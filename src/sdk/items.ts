/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { posItemsCreate } from "../funcs/posItemsCreate.js";
import { posItemsDelete } from "../funcs/posItemsDelete.js";
import { posItemsGet } from "../funcs/posItemsGet.js";
import { posItemsList } from "../funcs/posItemsList.js";
import { posItemsUpdate } from "../funcs/posItemsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Items extends ClientSDK {
  /**
   * List Items
   *
   * @remarks
   * List Items
   */
  async list(
    request: operations.PosItemsAllRequest,
    options?: RequestOptions,
  ): Promise<operations.PosItemsAllResponse> {
    return unwrapAsync(posItemsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Item
   *
   * @remarks
   * Create Item
   */
  async create(
    request: operations.PosItemsAddRequest,
    options?: RequestOptions,
  ): Promise<operations.PosItemsAddResponse> {
    return unwrapAsync(posItemsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Item
   *
   * @remarks
   * Get Item
   */
  async get(
    request: operations.PosItemsOneRequest,
    options?: RequestOptions,
  ): Promise<operations.PosItemsOneResponse> {
    return unwrapAsync(posItemsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Item
   *
   * @remarks
   * Update Item
   */
  async update(
    request: operations.PosItemsUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.PosItemsUpdateResponse> {
    return unwrapAsync(posItemsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Item
   *
   * @remarks
   * Delete Item
   */
  async delete(
    request: operations.PosItemsDeleteRequest,
    options?: RequestOptions,
  ): Promise<operations.PosItemsDeleteResponse> {
    return unwrapAsync(posItemsDelete(
      this,
      request,
      options,
    ));
  }
}
