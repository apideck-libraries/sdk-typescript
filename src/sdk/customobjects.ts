/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { crmCustomObjectsCreate } from "../funcs/crmCustomObjectsCreate.js";
import { crmCustomObjectsDelete } from "../funcs/crmCustomObjectsDelete.js";
import { crmCustomObjectsGet } from "../funcs/crmCustomObjectsGet.js";
import { crmCustomObjectsList } from "../funcs/crmCustomObjectsList.js";
import { crmCustomObjectsUpdate } from "../funcs/crmCustomObjectsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class CustomObjects extends ClientSDK {
  /**
   * List custom objects
   *
   * @remarks
   * List custom objects
   */
  async list(
    request: operations.CrmCustomObjectsAllRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.CrmCustomObjectsAllResponse, { cursor: string }>
  > {
    return unwrapResultIterator(crmCustomObjectsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create custom object
   *
   * @remarks
   * Create custom object
   */
  async create(
    request: operations.CrmCustomObjectsAddRequest,
    options?: RequestOptions,
  ): Promise<operations.CrmCustomObjectsAddResponse> {
    return unwrapAsync(crmCustomObjectsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get custom object
   *
   * @remarks
   * Get custom object
   */
  async get(
    request: operations.CrmCustomObjectsOneRequest,
    options?: RequestOptions,
  ): Promise<operations.CrmCustomObjectsOneResponse> {
    return unwrapAsync(crmCustomObjectsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update custom object
   *
   * @remarks
   * Update custom object
   */
  async update(
    request: operations.CrmCustomObjectsUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.CrmCustomObjectsUpdateResponse> {
    return unwrapAsync(crmCustomObjectsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete custom object
   *
   * @remarks
   * Delete custom object
   */
  async delete(
    request: operations.CrmCustomObjectsDeleteRequest,
    options?: RequestOptions,
  ): Promise<operations.CrmCustomObjectsDeleteResponse> {
    return unwrapAsync(crmCustomObjectsDelete(
      this,
      request,
      options,
    ));
  }
}
