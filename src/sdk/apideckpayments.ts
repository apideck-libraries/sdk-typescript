/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { posPaymentsCreate } from "../funcs/posPaymentsCreate.js";
import { posPaymentsDelete } from "../funcs/posPaymentsDelete.js";
import { posPaymentsGet } from "../funcs/posPaymentsGet.js";
import { posPaymentsList } from "../funcs/posPaymentsList.js";
import { posPaymentsUpdate } from "../funcs/posPaymentsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class ApideckPayments extends ClientSDK {
  /**
   * List Payments
   *
   * @remarks
   * List Payments
   */
  async list(
    request: operations.PosPaymentsAllRequest,
    options?: RequestOptions,
  ): Promise<operations.PosPaymentsAllResponse> {
    return unwrapAsync(posPaymentsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Payment
   *
   * @remarks
   * Create Payment
   */
  async create(
    request: operations.PosPaymentsAddRequest,
    options?: RequestOptions,
  ): Promise<operations.PosPaymentsAddResponse> {
    return unwrapAsync(posPaymentsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Payment
   *
   * @remarks
   * Get Payment
   */
  async get(
    request: operations.PosPaymentsOneRequest,
    options?: RequestOptions,
  ): Promise<operations.PosPaymentsOneResponse> {
    return unwrapAsync(posPaymentsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Payment
   *
   * @remarks
   * Update Payment
   */
  async update(
    request: operations.PosPaymentsUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.PosPaymentsUpdateResponse> {
    return unwrapAsync(posPaymentsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Payment
   *
   * @remarks
   * Delete Payment
   */
  async delete(
    request: operations.PosPaymentsDeleteRequest,
    options?: RequestOptions,
  ): Promise<operations.PosPaymentsDeleteResponse> {
    return unwrapAsync(posPaymentsDelete(
      this,
      request,
      options,
    ));
  }
}
