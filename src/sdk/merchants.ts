/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { posMerchantsCreate } from "../funcs/posMerchantsCreate.js";
import { posMerchantsDelete } from "../funcs/posMerchantsDelete.js";
import { posMerchantsGet } from "../funcs/posMerchantsGet.js";
import { posMerchantsList } from "../funcs/posMerchantsList.js";
import { posMerchantsUpdate } from "../funcs/posMerchantsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Merchants extends ClientSDK {
  /**
   * List Merchants
   *
   * @remarks
   * List Merchants
   */
  async list(
    request: operations.PosMerchantsAllRequest,
    options?: RequestOptions,
  ): Promise<operations.PosMerchantsAllResponse> {
    return unwrapAsync(posMerchantsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Merchant
   *
   * @remarks
   * Create Merchant
   */
  async create(
    request: operations.PosMerchantsAddRequest,
    options?: RequestOptions,
  ): Promise<operations.PosMerchantsAddResponse> {
    return unwrapAsync(posMerchantsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Merchant
   *
   * @remarks
   * Get Merchant
   */
  async get(
    request: operations.PosMerchantsOneRequest,
    options?: RequestOptions,
  ): Promise<operations.PosMerchantsOneResponse> {
    return unwrapAsync(posMerchantsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Merchant
   *
   * @remarks
   * Update Merchant
   */
  async update(
    request: operations.PosMerchantsUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.PosMerchantsUpdateResponse> {
    return unwrapAsync(posMerchantsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Merchant
   *
   * @remarks
   * Delete Merchant
   */
  async delete(
    request: operations.PosMerchantsDeleteRequest,
    options?: RequestOptions,
  ): Promise<operations.PosMerchantsDeleteResponse> {
    return unwrapAsync(posMerchantsDelete(
      this,
      request,
      options,
    ));
  }
}
