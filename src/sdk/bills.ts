/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountingBillsCreate } from "../funcs/accountingBillsCreate.js";
import { accountingBillsDelete } from "../funcs/accountingBillsDelete.js";
import { accountingBillsGet } from "../funcs/accountingBillsGet.js";
import { accountingBillsList } from "../funcs/accountingBillsList.js";
import { accountingBillsUpdate } from "../funcs/accountingBillsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Bills extends ClientSDK {
  /**
   * List Bills
   *
   * @remarks
   * List Bills
   */
  async list(
    request: operations.AccountingBillsAllRequest,
    options?: RequestOptions,
  ): Promise<operations.AccountingBillsAllResponse> {
    return unwrapAsync(accountingBillsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Bill
   *
   * @remarks
   * Create Bill
   */
  async create(
    request: operations.AccountingBillsAddRequest,
    options?: RequestOptions,
  ): Promise<operations.AccountingBillsAddResponse> {
    return unwrapAsync(accountingBillsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Bill
   *
   * @remarks
   * Get Bill
   */
  async get(
    request: operations.AccountingBillsOneRequest,
    options?: RequestOptions,
  ): Promise<operations.AccountingBillsOneResponse> {
    return unwrapAsync(accountingBillsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Bill
   *
   * @remarks
   * Update Bill
   */
  async update(
    request: operations.AccountingBillsUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.AccountingBillsUpdateResponse> {
    return unwrapAsync(accountingBillsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Bill
   *
   * @remarks
   * Delete Bill
   */
  async delete(
    request: operations.AccountingBillsDeleteRequest,
    options?: RequestOptions,
  ): Promise<operations.AccountingBillsDeleteResponse> {
    return unwrapAsync(accountingBillsDelete(
      this,
      request,
      options,
    ));
  }
}
