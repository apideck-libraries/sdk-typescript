lockVersion: 2.0.0
id: 7bffa198-5d29-4efa-9942-d549cc832085
management:
  docChecksum: 8d9c85df713492bb9fe416a01201df13
  docVersion: 10.9.1
  speakeasyVersion: 1.468.5
  generationVersion: 2.493.11
  releaseVersion: 0.13.7
  configChecksum: 74090b1a077c28b7a39fb7422d3f6717
  repoURL: https://github.com/apideck-libraries/sdk-typescript.git
  installationURL: https://github.com/apideck-libraries/sdk-typescript
  published: true
features:
  typescript:
    acceptHeaders: 2.81.2
    additionalDependencies: 0.1.0
    constsAndDefaults: 0.1.11
    core: 3.18.14
    deepObjectParams: 0.1.0
    defaultEnabledRetries: 0.1.0
    deprecations: 2.81.1
    downloadStreams: 0.1.1
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.1.2
    errors: 2.84.0
    globalSecurity: 2.82.12
    globalSecurityCallbacks: 0.1.0
    globalSecurityFlattening: 0.1.0
    globalServerURLs: 2.82.4
    globals: 2.82.1
    groups: 2.81.2
    hiddenGlobals: 0.1.0
    inputOutputModels: 2.82.0
    methodServerURLs: 2.82.1
    nameOverrides: 2.81.2
    nullables: 0.1.0
    pagination: 2.82.8
    responseFormat: 0.2.3
    retries: 2.83.0
    sdkHooks: 0.2.0
    typeOverrides: 2.81.1
    unions: 2.85.8
generatedFiles:
  - .eslintrc.cjs
  - .gitattributes
  - .npmignore
  - FUNCTIONS.md
  - RUNTIMES.md
  - USAGE.md
  - docs/lib/utils/retryconfig.md
  - docs/models/components/accountingdepartment.md
  - docs/models/components/accountingdepartmentinput.md
  - docs/models/components/accountingdepartmentsfilter.md
  - docs/models/components/accountinglocation.md
  - docs/models/components/accountinglocationinput.md
  - docs/models/components/accountinglocationsfilter.md
  - docs/models/components/accountstatus.md
  - docs/models/components/accounttype.md
  - docs/models/components/activitiesfilter.md
  - docs/models/components/activitiessort.md
  - docs/models/components/activitiessortby.md
  - docs/models/components/activity.md
  - docs/models/components/activityattendee.md
  - docs/models/components/activityattendeeinput.md
  - docs/models/components/activityattendeestatus.md
  - docs/models/components/activityinput.md
  - docs/models/components/activitytype.md
  - docs/models/components/address.md
  - docs/models/components/addresses.md
  - docs/models/components/ageddebtors.md
  - docs/models/components/agedreportfilter.md
  - docs/models/components/allocation.md
  - docs/models/components/allocationinput.md
  - docs/models/components/allocations.md
  - docs/models/components/allocationtype.md
  - docs/models/components/allowactions.md
  - docs/models/components/api.md
  - docs/models/components/apiresource.md
  - docs/models/components/apiresourcecoverage.md
  - docs/models/components/apisfilter.md
  - docs/models/components/apistatus.md
  - docs/models/components/apitype.md
  - docs/models/components/applicant.md
  - docs/models/components/applicantinput.md
  - docs/models/components/applicantsfilter.md
  - docs/models/components/applicanttype.md
  - docs/models/components/application.md
  - docs/models/components/applicationinput.md
  - docs/models/components/applicationstatus.md
  - docs/models/components/assignee.md
  - docs/models/components/assigneeinput.md
  - docs/models/components/attachment.md
  - docs/models/components/attachmentreference.md
  - docs/models/components/attachmentreferencetype.md
  - docs/models/components/attempts.md
  - docs/models/components/audience.md
  - docs/models/components/authtype.md
  - docs/models/components/balancebyperiod.md
  - docs/models/components/balancebytransaction.md
  - docs/models/components/balancesheet.md
  - docs/models/components/balancesheetassetsaccount.md
  - docs/models/components/balancesheetequityaccount.md
  - docs/models/components/balancesheetfilter.md
  - docs/models/components/balancesheetliabilitiesaccount.md
  - docs/models/components/balancesheetuncategorizeditemsaccount.md
  - docs/models/components/bankaccount.md
  - docs/models/components/benefit.md
  - docs/models/components/bill.md
  - docs/models/components/billinput.md
  - docs/models/components/billlineitem.md
  - docs/models/components/billlineiteminput.md
  - docs/models/components/billlineitemtype.md
  - docs/models/components/billpayment.md
  - docs/models/components/billpaymentallocations.md
  - docs/models/components/billpaymentallocationtype.md
  - docs/models/components/billpaymentinput.md
  - docs/models/components/billpaymenttype.md
  - docs/models/components/billsfilter.md
  - docs/models/components/billssort.md
  - docs/models/components/billstatus.md
  - docs/models/components/blocks.md
  - docs/models/components/branch.md
  - docs/models/components/by.md
  - docs/models/components/categories.md
  - docs/models/components/classification.md
  - docs/models/components/collection.md
  - docs/models/components/collectionssort.md
  - docs/models/components/collectionssortby.md
  - docs/models/components/collectiontag.md
  - docs/models/components/collectiontaginput.md
  - docs/models/components/collectionticketcomment.md
  - docs/models/components/collectionticketcommentinput.md
  - docs/models/components/collectionuser.md
  - docs/models/components/commentssort.md
  - docs/models/components/commentssortby.md
  - docs/models/components/companiesfilter.md
  - docs/models/components/companiessort.md
  - docs/models/components/companiessortby.md
  - docs/models/components/company.md
  - docs/models/components/companyinfo.md
  - docs/models/components/companyinput.md
  - docs/models/components/companyrowtype.md
  - docs/models/components/companystatus.md
  - docs/models/components/compensation.md
  - docs/models/components/components.md
  - docs/models/components/configuration.md
  - docs/models/components/connection.md
  - docs/models/components/connectionconfiguration.md
  - docs/models/components/connectiondefaults.md
  - docs/models/components/connectionimportdata.md
  - docs/models/components/connectionimportdatasettings.md
  - docs/models/components/connectioninput.md
  - docs/models/components/connectionstate.md
  - docs/models/components/connectionstatus.md
  - docs/models/components/connectionvalue.md
  - docs/models/components/connector.md
  - docs/models/components/connectorauthtype.md
  - docs/models/components/connectordoc.md
  - docs/models/components/connectorevent.md
  - docs/models/components/connectoroauthgranttype.md
  - docs/models/components/connectoroauthscopes.md
  - docs/models/components/connectorresource.md
  - docs/models/components/connectorsetting.md
  - docs/models/components/connectorsettingtype.md
  - docs/models/components/connectorsfilter.md
  - docs/models/components/connectorstatus.md
  - docs/models/components/consumer.md
  - docs/models/components/consumerconnection.md
  - docs/models/components/consumerinput.md
  - docs/models/components/consumermetadata.md
  - docs/models/components/consumerrequestcountsindaterangeresponse.md
  - docs/models/components/consumerrequestcountsindaterangeresponsedata.md
  - docs/models/components/contact.md
  - docs/models/components/contactgender.md
  - docs/models/components/contactinput.md
  - docs/models/components/contactsfilter.md
  - docs/models/components/contactssort.md
  - docs/models/components/contactssortby.md
  - docs/models/components/contacttype.md
  - docs/models/components/copyfolderrequest.md
  - docs/models/components/coverage.md
  - docs/models/components/createaccountingdepartmentresponse.md
  - docs/models/components/createaccountinglocationresponse.md
  - docs/models/components/createactivityresponse.md
  - docs/models/components/createapplicantresponse.md
  - docs/models/components/createapplicationresponse.md
  - docs/models/components/createbillpaymentresponse.md
  - docs/models/components/createbillresponse.md
  - docs/models/components/createcallbackstate.md
  - docs/models/components/createcallbackstateresponse.md
  - docs/models/components/createcallbackstateresponsedata.md
  - docs/models/components/createcommentresponse.md
  - docs/models/components/createcompanyresponse.md
  - docs/models/components/createconnectionresponse.md
  - docs/models/components/createconsumerresponse.md
  - docs/models/components/createcontactresponse.md
  - docs/models/components/createcreditnoteresponse.md
  - docs/models/components/createcustomerresponse.md
  - docs/models/components/createdepartmentresponse.md
  - docs/models/components/createdrivegroupresponse.md
  - docs/models/components/createdriveresponse.md
  - docs/models/components/createemployeeresponse.md
  - docs/models/components/createexpenseresponse.md
  - docs/models/components/createfolderrequest.md
  - docs/models/components/createfolderresponse.md
  - docs/models/components/createhriscompanyresponse.md
  - docs/models/components/createinvoiceitemresponse.md
  - docs/models/components/createinvoiceresponse.md
  - docs/models/components/createjournalentryresponse.md
  - docs/models/components/createleadresponse.md
  - docs/models/components/createledgeraccountresponse.md
  - docs/models/components/createmessageresponse.md
  - docs/models/components/createnoteresponse.md
  - docs/models/components/createopportunityresponse.md
  - docs/models/components/createpaymentresponse.md
  - docs/models/components/createpurchaseorderresponse.md
  - docs/models/components/createsessionresponse.md
  - docs/models/components/createsessionresponsedata.md
  - docs/models/components/createsharedlinkresponse.md
  - docs/models/components/createsubsidiaryresponse.md
  - docs/models/components/createsupplierresponse.md
  - docs/models/components/createtaxrateresponse.md
  - docs/models/components/createticketresponse.md
  - docs/models/components/createtimeoffrequestresponse.md
  - docs/models/components/createtrackingcategoryresponse.md
  - docs/models/components/createuploadsessionrequest.md
  - docs/models/components/createuploadsessionresponse.md
  - docs/models/components/createuserresponse.md
  - docs/models/components/createwebhookrequest.md
  - docs/models/components/createwebhookresponse.md
  - docs/models/components/credentials.md
  - docs/models/components/creditnote.md
  - docs/models/components/creditnoteinput.md
  - docs/models/components/creditnotesfilter.md
  - docs/models/components/creditnotessort.md
  - docs/models/components/creditnotessortby.md
  - docs/models/components/creditnotestatus.md
  - docs/models/components/creditnotetype.md
  - docs/models/components/currency.md
  - docs/models/components/cursors.md
  - docs/models/components/customer.md
  - docs/models/components/customerinput.md
  - docs/models/components/customersfilter.md
  - docs/models/components/customersfilterstatus.md
  - docs/models/components/customerssort.md
  - docs/models/components/customerssortby.md
  - docs/models/components/customerstatus.md
  - docs/models/components/customerstatusstatus.md
  - docs/models/components/customfield.md
  - docs/models/components/customfieldfinder.md
  - docs/models/components/custommapping.md
  - docs/models/components/custommappinginput.md
  - docs/models/components/custommappings.md
  - docs/models/components/data.md
  - docs/models/components/deduction.md
  - docs/models/components/defaults.md
  - docs/models/components/deleteaccountingdepartmentresponse.md
  - docs/models/components/deleteaccountinglocationresponse.md
  - docs/models/components/deleteactivityresponse.md
  - docs/models/components/deleteapplicantresponse.md
  - docs/models/components/deleteapplicationresponse.md
  - docs/models/components/deleteattachmentresponse.md
  - docs/models/components/deletebillpaymentresponse.md
  - docs/models/components/deletebillresponse.md
  - docs/models/components/deletecommentresponse.md
  - docs/models/components/deletecompanyresponse.md
  - docs/models/components/deleteconsumerresponse.md
  - docs/models/components/deleteconsumerresponsedata.md
  - docs/models/components/deletecontactresponse.md
  - docs/models/components/deletecreditnoteresponse.md
  - docs/models/components/deletecustomerresponse.md
  - docs/models/components/deletedepartmentresponse.md
  - docs/models/components/deletedrivegroupresponse.md
  - docs/models/components/deletedriveresponse.md
  - docs/models/components/deleteemployeeresponse.md
  - docs/models/components/deleteexpenseresponse.md
  - docs/models/components/deletefileresponse.md
  - docs/models/components/deletefolderresponse.md
  - docs/models/components/deletehriscompanyresponse.md
  - docs/models/components/deleteinvoiceresponse.md
  - docs/models/components/deletejournalentryresponse.md
  - docs/models/components/deleteleadresponse.md
  - docs/models/components/deleteledgeraccountresponse.md
  - docs/models/components/deletemessageresponse.md
  - docs/models/components/deletenoteresponse.md
  - docs/models/components/deleteopportunityresponse.md
  - docs/models/components/deletepaymentresponse.md
  - docs/models/components/deletepurchaseorderresponse.md
  - docs/models/components/deletesharedlinkresponse.md
  - docs/models/components/deletesubsidiaryresponse.md
  - docs/models/components/deletesupplierresponse.md
  - docs/models/components/deletetaxrateresponse.md
  - docs/models/components/deleteticketresponse.md
  - docs/models/components/deletetimeoffrequestresponse.md
  - docs/models/components/deletetrackingcategoryresponse.md
  - docs/models/components/deleteuploadsessionresponse.md
  - docs/models/components/deleteuserresponse.md
  - docs/models/components/deletewebhookresponse.md
  - docs/models/components/department.md
  - docs/models/components/departmentinput.md
  - docs/models/components/departmentstatus.md
  - docs/models/components/deprecatedlinkedsupplier.md
  - docs/models/components/deprecatedlinkedsupplierinput.md
  - docs/models/components/deprecatedlinkedtrackingcategory.md
  - docs/models/components/detail.md
  - docs/models/components/direction.md
  - docs/models/components/disabledreason.md
  - docs/models/components/drive.md
  - docs/models/components/drivegroup.md
  - docs/models/components/drivegroupinput.md
  - docs/models/components/drivegroupsfilter.md
  - docs/models/components/driveinput.md
  - docs/models/components/drivesfilter.md
  - docs/models/components/ecommerceaddress.md
  - docs/models/components/ecommercecustomer.md
  - docs/models/components/ecommercecustomersfilter.md
  - docs/models/components/ecommercecustomertype.md
  - docs/models/components/ecommercediscount.md
  - docs/models/components/ecommerceorder.md
  - docs/models/components/ecommerceorderlineitem.md
  - docs/models/components/ecommerceorderpaymentstatus.md
  - docs/models/components/ecommerceordersfilter.md
  - docs/models/components/ecommerceorderstatus.md
  - docs/models/components/ecommerceproduct.md
  - docs/models/components/ecommerceproductcategories.md
  - docs/models/components/ecommerceproductimages.md
  - docs/models/components/ecommerceproductoptions.md
  - docs/models/components/ecommerceproductvariantsoptions.md
  - docs/models/components/ecommercestore.md
  - docs/models/components/email.md
  - docs/models/components/emailtype.md
  - docs/models/components/employee.md
  - docs/models/components/employeecompensation.md
  - docs/models/components/employeecompensationinput.md
  - docs/models/components/employeeinput.md
  - docs/models/components/employeejob.md
  - docs/models/components/employeejobinput.md
  - docs/models/components/employeejobstatus.md
  - docs/models/components/employeepayroll.md
  - docs/models/components/employeeschedules.md
  - docs/models/components/employeesfilter.md
  - docs/models/components/employeesfilteremploymentstatus.md
  - docs/models/components/employeesonefilter.md
  - docs/models/components/employeessort.md
  - docs/models/components/employeessortby.md
  - docs/models/components/employmentrole.md
  - docs/models/components/employmentstatus.md
  - docs/models/components/employmentsubtype.md
  - docs/models/components/employmentterms.md
  - docs/models/components/employmenttype.md
  - docs/models/components/errort.md
  - docs/models/components/eventsource.md
  - docs/models/components/evenweeks.md
  - docs/models/components/expense.md
  - docs/models/components/expenseinput.md
  - docs/models/components/expenselineitem.md
  - docs/models/components/expenselineiteminput.md
  - docs/models/components/expensepaymenttype.md
  - docs/models/components/expenses.md
  - docs/models/components/expensetype.md
  - docs/models/components/extendpaths.md
  - docs/models/components/filesfilter.md
  - docs/models/components/filessearch.md
  - docs/models/components/filessort.md
  - docs/models/components/filessortby.md
  - docs/models/components/filetype.md
  - docs/models/components/five.md
  - docs/models/components/flsastatus.md
  - docs/models/components/folder.md
  - docs/models/components/format.md
  - docs/models/components/formfield.md
  - docs/models/components/formfieldoption.md
  - docs/models/components/formfieldoptiongroup.md
  - docs/models/components/formfieldtype.md
  - docs/models/components/four.md
  - docs/models/components/fulfillmentstatus.md
  - docs/models/components/gender.md
  - docs/models/components/getaccountingdepartmentresponse.md
  - docs/models/components/getaccountingdepartmentsresponse.md
  - docs/models/components/getaccountinglocationresponse.md
  - docs/models/components/getaccountinglocationsresponse.md
  - docs/models/components/getactivitiesresponse.md
  - docs/models/components/getactivityresponse.md
  - docs/models/components/getageddebtorsresponse.md
  - docs/models/components/getapiresourcecoverageresponse.md
  - docs/models/components/getapiresourceresponse.md
  - docs/models/components/getapiresponse.md
  - docs/models/components/getapisresponse.md
  - docs/models/components/getapplicantresponse.md
  - docs/models/components/getapplicantsresponse.md
  - docs/models/components/getapplicationresponse.md
  - docs/models/components/getapplicationsresponse.md
  - docs/models/components/getattachmentresponse.md
  - docs/models/components/getattachmentsresponse.md
  - docs/models/components/getbalancesheetresponse.md
  - docs/models/components/getbillpaymentresponse.md
  - docs/models/components/getbillpaymentsresponse.md
  - docs/models/components/getbillresponse.md
  - docs/models/components/getbillsresponse.md
  - docs/models/components/getcollectionresponse.md
  - docs/models/components/getcollectionsresponse.md
  - docs/models/components/getcollectiontagsresponse.md
  - docs/models/components/getcollectionuserresponse.md
  - docs/models/components/getcollectionusersresponse.md
  - docs/models/components/getcommentresponse.md
  - docs/models/components/getcommentsresponse.md
  - docs/models/components/getcompaniesresponse.md
  - docs/models/components/getcompanyinforesponse.md
  - docs/models/components/getcompanyresponse.md
  - docs/models/components/getconnectionresponse.md
  - docs/models/components/getconnectionsresponse.md
  - docs/models/components/getconnectorresourceresponse.md
  - docs/models/components/getconnectorresponse.md
  - docs/models/components/getconnectorsresponse.md
  - docs/models/components/getconsumerresponse.md
  - docs/models/components/getconsumersresponse.md
  - docs/models/components/getcontactresponse.md
  - docs/models/components/getcontactsresponse.md
  - docs/models/components/getcreditnoteresponse.md
  - docs/models/components/getcreditnotesresponse.md
  - docs/models/components/getcustomerresponse.md
  - docs/models/components/getcustomersresponse.md
  - docs/models/components/getcustomfieldsresponse.md
  - docs/models/components/getcustommappingsresponse.md
  - docs/models/components/getdepartmentresponse.md
  - docs/models/components/getdepartmentsresponse.md
  - docs/models/components/getdrivegroupresponse.md
  - docs/models/components/getdrivegroupsresponse.md
  - docs/models/components/getdriveresponse.md
  - docs/models/components/getdrivesresponse.md
  - docs/models/components/getecommercecustomerresponse.md
  - docs/models/components/getecommercecustomersresponse.md
  - docs/models/components/getecommerceorderresponse.md
  - docs/models/components/getecommerceordersresponse.md
  - docs/models/components/getemployeepayrollresponse.md
  - docs/models/components/getemployeepayrollsresponse.md
  - docs/models/components/getemployeeresponse.md
  - docs/models/components/getemployeeschedulesresponse.md
  - docs/models/components/getemployeesresponse.md
  - docs/models/components/getexpenseresponse.md
  - docs/models/components/getexpensesresponse.md
  - docs/models/components/getfileresponse.md
  - docs/models/components/getfilesresponse.md
  - docs/models/components/getfolderresponse.md
  - docs/models/components/gethriscompaniesresponse.md
  - docs/models/components/gethriscompanyresponse.md
  - docs/models/components/getinvoiceitemresponse.md
  - docs/models/components/getinvoiceitemsresponse.md
  - docs/models/components/getinvoiceresponse.md
  - docs/models/components/getinvoicesresponse.md
  - docs/models/components/getjobresponse.md
  - docs/models/components/getjobsresponse.md
  - docs/models/components/getjournalentriesresponse.md
  - docs/models/components/getjournalentryresponse.md
  - docs/models/components/getleadresponse.md
  - docs/models/components/getleadsresponse.md
  - docs/models/components/getledgeraccountresponse.md
  - docs/models/components/getledgeraccountsresponse.md
  - docs/models/components/getlogsresponse.md
  - docs/models/components/getmessageresponse.md
  - docs/models/components/getmessagesresponse.md
  - docs/models/components/getnoteresponse.md
  - docs/models/components/getnotesresponse.md
  - docs/models/components/getopportunitiesresponse.md
  - docs/models/components/getopportunityresponse.md
  - docs/models/components/getpaymentresponse.md
  - docs/models/components/getpaymentsresponse.md
  - docs/models/components/getpayrollresponse.md
  - docs/models/components/getpayrollsresponse.md
  - docs/models/components/getpipelinesresponse.md
  - docs/models/components/getproductresponse.md
  - docs/models/components/getproductsresponse.md
  - docs/models/components/getprofitandlossresponse.md
  - docs/models/components/getpurchaseorderresponse.md
  - docs/models/components/getpurchaseordersresponse.md
  - docs/models/components/getsharedlinkresponse.md
  - docs/models/components/getsharedlinksresponse.md
  - docs/models/components/getstoreresponse.md
  - docs/models/components/getsubsidiariesresponse.md
  - docs/models/components/getsubsidiaryresponse.md
  - docs/models/components/getsupplierresponse.md
  - docs/models/components/getsuppliersresponse.md
  - docs/models/components/gettaxrateresponse.md
  - docs/models/components/gettaxratesresponse.md
  - docs/models/components/getticketresponse.md
  - docs/models/components/getticketsresponse.md
  - docs/models/components/gettimeoffrequestresponse.md
  - docs/models/components/gettimeoffrequestsresponse.md
  - docs/models/components/gettrackingcategoriesresponse.md
  - docs/models/components/gettrackingcategoryresponse.md
  - docs/models/components/getuploadsessionresponse.md
  - docs/models/components/getuserresponse.md
  - docs/models/components/getusersresponse.md
  - docs/models/components/getwebhookeventlogsresponse.md
  - docs/models/components/getwebhookresponse.md
  - docs/models/components/getwebhooksresponse.md
  - docs/models/components/grossprofit.md
  - docs/models/components/hriscompany.md
  - docs/models/components/hriscompanyinput.md
  - docs/models/components/hriscompanystatus.md
  - docs/models/components/httpmetadata.md
  - docs/models/components/images.md
  - docs/models/components/income.md
  - docs/models/components/integrationstate.md
  - docs/models/components/invoice.md
  - docs/models/components/invoiceinput.md
  - docs/models/components/invoiceitem.md
  - docs/models/components/invoiceitemfilter.md
  - docs/models/components/invoiceitemfilterinvoiceitemtype.md
  - docs/models/components/invoiceiteminput.md
  - docs/models/components/invoiceitempurchasedetails.md
  - docs/models/components/invoiceitemsalesdetails.md
  - docs/models/components/invoiceitemsfilter.md
  - docs/models/components/invoiceitemtype.md
  - docs/models/components/invoiceitemtypetype.md
  - docs/models/components/invoicelineitem.md
  - docs/models/components/invoicelineiteminput.md
  - docs/models/components/invoicelineitemtype.md
  - docs/models/components/invoiceresponse.md
  - docs/models/components/invoicesfilter.md
  - docs/models/components/invoicessort.md
  - docs/models/components/invoicessortby.md
  - docs/models/components/invoicestatus.md
  - docs/models/components/invoicetype.md
  - docs/models/components/issuesfilter.md
  - docs/models/components/job.md
  - docs/models/components/joblinks.md
  - docs/models/components/jobstatus.md
  - docs/models/components/jobtype.md
  - docs/models/components/journalentriesfilter.md
  - docs/models/components/journalentriessort.md
  - docs/models/components/journalentriessortby.md
  - docs/models/components/journalentry.md
  - docs/models/components/journalentryinput.md
  - docs/models/components/journalentrylineitem.md
  - docs/models/components/journalentrylineiteminput.md
  - docs/models/components/journalentrylineitemtype.md
  - docs/models/components/lead.md
  - docs/models/components/leadinput.md
  - docs/models/components/leadsfilter.md
  - docs/models/components/leadssort.md
  - docs/models/components/leadssortby.md
  - docs/models/components/leavingreason.md
  - docs/models/components/ledgeraccount.md
  - docs/models/components/ledgeraccountinput.md
  - docs/models/components/ledgeraccountsfilter.md
  - docs/models/components/ledgeraccountssort.md
  - docs/models/components/ledgeraccountssortby.md
  - docs/models/components/ledgeraccountsubsidiaries.md
  - docs/models/components/ledgeraccounttype.md
  - docs/models/components/linkedconnectorresource.md
  - docs/models/components/linkedcustomer.md
  - docs/models/components/linkedcustomerinput.md
  - docs/models/components/linkedecommercecustomer.md
  - docs/models/components/linkedecommerceorder.md
  - docs/models/components/linkedfolder.md
  - docs/models/components/linkedinvoiceitem.md
  - docs/models/components/linkedledgeraccount.md
  - docs/models/components/linkedledgeraccountinput.md
  - docs/models/components/linkedparentcustomer.md
  - docs/models/components/linkedresources.md
  - docs/models/components/linkedsupplier.md
  - docs/models/components/linkedsupplierinput.md
  - docs/models/components/linkedtaxrate.md
  - docs/models/components/linkedtaxrateinput.md
  - docs/models/components/linkedtrackingcategory.md
  - docs/models/components/links.md
  - docs/models/components/locationstatus.md
  - docs/models/components/log.md
  - docs/models/components/logsfilter.md
  - docs/models/components/managedvia.md
  - docs/models/components/manager.md
  - docs/models/components/message.md
  - docs/models/components/messageinput.md
  - docs/models/components/messagestatus.md
  - docs/models/components/messagetype.md
  - docs/models/components/meta.md
  - docs/models/components/mode.md
  - docs/models/components/netincome.md
  - docs/models/components/netoperatingincome.md
  - docs/models/components/note.md
  - docs/models/components/noteinput.md
  - docs/models/components/notes.md
  - docs/models/components/oauthcredentialssource.md
  - docs/models/components/oauthgranttype.md
  - docs/models/components/oauthscopes.md
  - docs/models/components/oddweeks.md
  - docs/models/components/operation.md
  - docs/models/components/opportunitiesfilter.md
  - docs/models/components/opportunitiessort.md
  - docs/models/components/opportunitiessortby.md
  - docs/models/components/opportunity.md
  - docs/models/components/opportunityinput.md
  - docs/models/components/options.md
  - docs/models/components/orderssort.md
  - docs/models/components/orderssortby.md
  - docs/models/components/outstandingbalancebycurrency.md
  - docs/models/components/outstandingbalancebycustomer.md
  - docs/models/components/owner.md
  - docs/models/components/paginationcoverage.md
  - docs/models/components/paginationcoveragemode.md
  - docs/models/components/parentaccount.md
  - docs/models/components/passthroughbody.md
  - docs/models/components/payment.md
  - docs/models/components/paymentfrequency.md
  - docs/models/components/paymentinput.md
  - docs/models/components/paymentsfilter.md
  - docs/models/components/paymentssort.md
  - docs/models/components/paymentssortby.md
  - docs/models/components/paymentstatus.md
  - docs/models/components/paymenttype.md
  - docs/models/components/paymentunit.md
  - docs/models/components/payroll.md
  - docs/models/components/payrollsfilter.md
  - docs/models/components/payrolltotals.md
  - docs/models/components/periodtype.md
  - docs/models/components/permissions.md
  - docs/models/components/person.md
  - docs/models/components/personinput.md
  - docs/models/components/phonenumber.md
  - docs/models/components/phonenumbertype.md
  - docs/models/components/pipeline.md
  - docs/models/components/price.md
  - docs/models/components/priority.md
  - docs/models/components/probationperiod.md
  - docs/models/components/productstatus.md
  - docs/models/components/profitandloss.md
  - docs/models/components/profitandlossfilter.md
  - docs/models/components/purchasedetails.md
  - docs/models/components/purchaseorder.md
  - docs/models/components/purchaseorderinput.md
  - docs/models/components/purchaseordersfilter.md
  - docs/models/components/purchaseorderssort.md
  - docs/models/components/purchaseorderssortby.md
  - docs/models/components/purchaseorderstatus.md
  - docs/models/components/reports.md
  - docs/models/components/requestcountallocation.md
  - docs/models/components/requestrate.md
  - docs/models/components/requesttype.md
  - docs/models/components/resources.md
  - docs/models/components/resourcestatus.md
  - docs/models/components/salary.md
  - docs/models/components/salesdetails.md
  - docs/models/components/schedule.md
  - docs/models/components/schema.md
  - docs/models/components/schemasupport.md
  - docs/models/components/scope.md
  - docs/models/components/security.md
  - docs/models/components/service.md
  - docs/models/components/session.md
  - docs/models/components/sessionsettings.md
  - docs/models/components/settings.md
  - docs/models/components/sharedlink.md
  - docs/models/components/sharedlinkinput.md
  - docs/models/components/sharedlinktarget.md
  - docs/models/components/showas.md
  - docs/models/components/simpleformfieldoption.md
  - docs/models/components/simpleformfieldoptionvalue.md
  - docs/models/components/six.md
  - docs/models/components/sociallink.md
  - docs/models/components/sociallinks.md
  - docs/models/components/sortdirection.md
  - docs/models/components/stage.md
  - docs/models/components/stages.md
  - docs/models/components/status.md
  - docs/models/components/subaccounts.md
  - docs/models/components/subscriptionlevel.md
  - docs/models/components/subsidiaries.md
  - docs/models/components/subsidiary.md
  - docs/models/components/subsidiaryinput.md
  - docs/models/components/subsidiaryreference.md
  - docs/models/components/subsidiaryreferenceinput.md
  - docs/models/components/subsidiarystatus.md
  - docs/models/components/supplier.md
  - docs/models/components/supplierinput.md
  - docs/models/components/suppliersfilter.md
  - docs/models/components/supplierssort.md
  - docs/models/components/supplierssortby.md
  - docs/models/components/supplierstatus.md
  - docs/models/components/supportedproperty.md
  - docs/models/components/target.md
  - docs/models/components/tax.md
  - docs/models/components/taxrate.md
  - docs/models/components/taxrateinput.md
  - docs/models/components/taxratesfilter.md
  - docs/models/components/taxratestatus.md
  - docs/models/components/team.md
  - docs/models/components/theme.md
  - docs/models/components/thestartmonthoffiscalyear.md
  - docs/models/components/ticket.md
  - docs/models/components/ticketinput.md
  - docs/models/components/ticketssort.md
  - docs/models/components/ticketssortby.md
  - docs/models/components/timeoffrequest.md
  - docs/models/components/timeoffrequestinput.md
  - docs/models/components/timeoffrequestsfilter.md
  - docs/models/components/timeoffrequeststatus.md
  - docs/models/components/timeoffrequeststatusstatus.md
  - docs/models/components/tlssupport.md
  - docs/models/components/trackingcategory.md
  - docs/models/components/trackingcategoryinput.md
  - docs/models/components/trackingcategorystatus.md
  - docs/models/components/trackingcategorysubsidiaries.md
  - docs/models/components/trackingitem.md
  - docs/models/components/transactiontype.md
  - docs/models/components/type.md
  - docs/models/components/unexpectederrorresponse.md
  - docs/models/components/unifiedapi.md
  - docs/models/components/unifiedapiid.md
  - docs/models/components/unifiedapis.md
  - docs/models/components/unifiedfile.md
  - docs/models/components/unifiedid.md
  - docs/models/components/unit.md
  - docs/models/components/units.md
  - docs/models/components/updateaccountingdepartmentresponse.md
  - docs/models/components/updateaccountinglocationresponse.md
  - docs/models/components/updateactivityresponse.md
  - docs/models/components/updateapplicantresponse.md
  - docs/models/components/updateapplicationresponse.md
  - docs/models/components/updatebillpaymentresponse.md
  - docs/models/components/updatebillresponse.md
  - docs/models/components/updatecommentresponse.md
  - docs/models/components/updatecompanyresponse.md
  - docs/models/components/updateconnectionresponse.md
  - docs/models/components/updateconsumerrequest.md
  - docs/models/components/updateconsumerresponse.md
  - docs/models/components/updatecontactresponse.md
  - docs/models/components/updatecreditnoteresponse.md
  - docs/models/components/updatecustomerresponse.md
  - docs/models/components/updatedepartmentresponse.md
  - docs/models/components/updatedrivegroupresponse.md
  - docs/models/components/updatedriveresponse.md
  - docs/models/components/updateemployeeresponse.md
  - docs/models/components/updateexpenseresponse.md
  - docs/models/components/updatefilerequest.md
  - docs/models/components/updatefileresponse.md
  - docs/models/components/updatefolderrequest.md
  - docs/models/components/updatefolderresponse.md
  - docs/models/components/updatehriscompanyresponse.md
  - docs/models/components/updateinvoiceitemsresponse.md
  - docs/models/components/updateinvoiceresponse.md
  - docs/models/components/updatejournalentryresponse.md
  - docs/models/components/updateleadresponse.md
  - docs/models/components/updateledgeraccountresponse.md
  - docs/models/components/updatemessageresponse.md
  - docs/models/components/updatenoteresponse.md
  - docs/models/components/updateopportunityresponse.md
  - docs/models/components/updatepaymentresponse.md
  - docs/models/components/updatepurchaseorderresponse.md
  - docs/models/components/updatesharedlinkresponse.md
  - docs/models/components/updatesubsidiaryresponse.md
  - docs/models/components/updatesupplierresponse.md
  - docs/models/components/updatetaxrateresponse.md
  - docs/models/components/updateticketresponse.md
  - docs/models/components/updatetimeoffrequestresponse.md
  - docs/models/components/updatetrackingcategoryresponse.md
  - docs/models/components/updateuserresponse.md
  - docs/models/components/updatewebhookrequest.md
  - docs/models/components/updatewebhookresponse.md
  - docs/models/components/uploadsession.md
  - docs/models/components/user.md
  - docs/models/components/userinput.md
  - docs/models/components/validateconnectionstateresponse.md
  - docs/models/components/validateconnectionstateresponsedata.md
  - docs/models/components/value.md
  - docs/models/components/value5.md
  - docs/models/components/variants.md
  - docs/models/components/virtualwebhooks.md
  - docs/models/components/visibility.md
  - docs/models/components/webhook.md
  - docs/models/components/webhookeventlog.md
  - docs/models/components/webhookeventlogservice.md
  - docs/models/components/webhookeventlogsfilter.md
  - docs/models/components/webhookeventlogsfilterservice.md
  - docs/models/components/webhookeventtype.md
  - docs/models/components/webhooksubscription.md
  - docs/models/components/webhooksupport.md
  - docs/models/components/webhooksupportresources.md
  - docs/models/components/website.md
  - docs/models/components/websites.md
  - docs/models/components/websitetype.md
  - docs/models/components/workpattern.md
  - docs/models/errors/badrequestresponse.md
  - docs/models/errors/detail.md
  - docs/models/errors/notfoundresponse.md
  - docs/models/errors/notfoundresponsedetail.md
  - docs/models/errors/paymentrequiredresponse.md
  - docs/models/errors/unauthorizedresponse.md
  - docs/models/errors/unauthorizedresponsedetail.md
  - docs/models/errors/unprocessableresponse.md
  - docs/models/errors/unprocessableresponsedetail.md
  - docs/models/operations/accountingageddebtorsoneglobals.md
  - docs/models/operations/accountingageddebtorsonerequest.md
  - docs/models/operations/accountingageddebtorsoneresponse.md
  - docs/models/operations/accountingattachmentsallglobals.md
  - docs/models/operations/accountingattachmentsallrequest.md
  - docs/models/operations/accountingattachmentsallresponse.md
  - docs/models/operations/accountingattachmentsdeleteglobals.md
  - docs/models/operations/accountingattachmentsdeleterequest.md
  - docs/models/operations/accountingattachmentsdeleteresponse.md
  - docs/models/operations/accountingattachmentsdownloadglobals.md
  - docs/models/operations/accountingattachmentsdownloadrequest.md
  - docs/models/operations/accountingattachmentsdownloadresponse.md
  - docs/models/operations/accountingattachmentsoneglobals.md
  - docs/models/operations/accountingattachmentsonerequest.md
  - docs/models/operations/accountingattachmentsoneresponse.md
  - docs/models/operations/accountingbalancesheetoneglobals.md
  - docs/models/operations/accountingbalancesheetonerequest.md
  - docs/models/operations/accountingbalancesheetoneresponse.md
  - docs/models/operations/accountingbillpaymentsaddglobals.md
  - docs/models/operations/accountingbillpaymentsaddrequest.md
  - docs/models/operations/accountingbillpaymentsaddresponse.md
  - docs/models/operations/accountingbillpaymentsallglobals.md
  - docs/models/operations/accountingbillpaymentsallrequest.md
  - docs/models/operations/accountingbillpaymentsallresponse.md
  - docs/models/operations/accountingbillpaymentsdeleteglobals.md
  - docs/models/operations/accountingbillpaymentsdeleterequest.md
  - docs/models/operations/accountingbillpaymentsdeleteresponse.md
  - docs/models/operations/accountingbillpaymentsoneglobals.md
  - docs/models/operations/accountingbillpaymentsonerequest.md
  - docs/models/operations/accountingbillpaymentsoneresponse.md
  - docs/models/operations/accountingbillpaymentsupdateglobals.md
  - docs/models/operations/accountingbillpaymentsupdaterequest.md
  - docs/models/operations/accountingbillpaymentsupdateresponse.md
  - docs/models/operations/accountingbillsaddglobals.md
  - docs/models/operations/accountingbillsaddrequest.md
  - docs/models/operations/accountingbillsaddresponse.md
  - docs/models/operations/accountingbillsallglobals.md
  - docs/models/operations/accountingbillsallrequest.md
  - docs/models/operations/accountingbillsallresponse.md
  - docs/models/operations/accountingbillsdeleteglobals.md
  - docs/models/operations/accountingbillsdeleterequest.md
  - docs/models/operations/accountingbillsdeleteresponse.md
  - docs/models/operations/accountingbillsoneglobals.md
  - docs/models/operations/accountingbillsonerequest.md
  - docs/models/operations/accountingbillsoneresponse.md
  - docs/models/operations/accountingbillsupdateglobals.md
  - docs/models/operations/accountingbillsupdaterequest.md
  - docs/models/operations/accountingbillsupdateresponse.md
  - docs/models/operations/accountingcompanyinfooneglobals.md
  - docs/models/operations/accountingcompanyinfoonerequest.md
  - docs/models/operations/accountingcompanyinfooneresponse.md
  - docs/models/operations/accountingcreditnotesaddglobals.md
  - docs/models/operations/accountingcreditnotesaddrequest.md
  - docs/models/operations/accountingcreditnotesaddresponse.md
  - docs/models/operations/accountingcreditnotesallglobals.md
  - docs/models/operations/accountingcreditnotesallrequest.md
  - docs/models/operations/accountingcreditnotesallresponse.md
  - docs/models/operations/accountingcreditnotesdeleteglobals.md
  - docs/models/operations/accountingcreditnotesdeleterequest.md
  - docs/models/operations/accountingcreditnotesdeleteresponse.md
  - docs/models/operations/accountingcreditnotesoneglobals.md
  - docs/models/operations/accountingcreditnotesonerequest.md
  - docs/models/operations/accountingcreditnotesoneresponse.md
  - docs/models/operations/accountingcreditnotesupdateglobals.md
  - docs/models/operations/accountingcreditnotesupdaterequest.md
  - docs/models/operations/accountingcreditnotesupdateresponse.md
  - docs/models/operations/accountingcustomersaddglobals.md
  - docs/models/operations/accountingcustomersaddrequest.md
  - docs/models/operations/accountingcustomersaddresponse.md
  - docs/models/operations/accountingcustomersallglobals.md
  - docs/models/operations/accountingcustomersallrequest.md
  - docs/models/operations/accountingcustomersallresponse.md
  - docs/models/operations/accountingcustomersdeleteglobals.md
  - docs/models/operations/accountingcustomersdeleterequest.md
  - docs/models/operations/accountingcustomersdeleteresponse.md
  - docs/models/operations/accountingcustomersoneglobals.md
  - docs/models/operations/accountingcustomersonerequest.md
  - docs/models/operations/accountingcustomersoneresponse.md
  - docs/models/operations/accountingcustomersupdateglobals.md
  - docs/models/operations/accountingcustomersupdaterequest.md
  - docs/models/operations/accountingcustomersupdateresponse.md
  - docs/models/operations/accountingdepartmentsaddglobals.md
  - docs/models/operations/accountingdepartmentsaddrequest.md
  - docs/models/operations/accountingdepartmentsaddresponse.md
  - docs/models/operations/accountingdepartmentsallglobals.md
  - docs/models/operations/accountingdepartmentsallrequest.md
  - docs/models/operations/accountingdepartmentsallresponse.md
  - docs/models/operations/accountingdepartmentsdeleteglobals.md
  - docs/models/operations/accountingdepartmentsdeleterequest.md
  - docs/models/operations/accountingdepartmentsdeleteresponse.md
  - docs/models/operations/accountingdepartmentsoneglobals.md
  - docs/models/operations/accountingdepartmentsonerequest.md
  - docs/models/operations/accountingdepartmentsoneresponse.md
  - docs/models/operations/accountingdepartmentsupdateglobals.md
  - docs/models/operations/accountingdepartmentsupdaterequest.md
  - docs/models/operations/accountingdepartmentsupdateresponse.md
  - docs/models/operations/accountingexpensesaddglobals.md
  - docs/models/operations/accountingexpensesaddrequest.md
  - docs/models/operations/accountingexpensesaddresponse.md
  - docs/models/operations/accountingexpensesallglobals.md
  - docs/models/operations/accountingexpensesallrequest.md
  - docs/models/operations/accountingexpensesallresponse.md
  - docs/models/operations/accountingexpensesdeleteglobals.md
  - docs/models/operations/accountingexpensesdeleterequest.md
  - docs/models/operations/accountingexpensesdeleteresponse.md
  - docs/models/operations/accountingexpensesoneglobals.md
  - docs/models/operations/accountingexpensesonerequest.md
  - docs/models/operations/accountingexpensesoneresponse.md
  - docs/models/operations/accountingexpensesupdateglobals.md
  - docs/models/operations/accountingexpensesupdaterequest.md
  - docs/models/operations/accountingexpensesupdateresponse.md
  - docs/models/operations/accountinginvoiceitemsaddglobals.md
  - docs/models/operations/accountinginvoiceitemsaddrequest.md
  - docs/models/operations/accountinginvoiceitemsaddresponse.md
  - docs/models/operations/accountinginvoiceitemsallglobals.md
  - docs/models/operations/accountinginvoiceitemsallrequest.md
  - docs/models/operations/accountinginvoiceitemsallresponse.md
  - docs/models/operations/accountinginvoiceitemsdeleteglobals.md
  - docs/models/operations/accountinginvoiceitemsdeleterequest.md
  - docs/models/operations/accountinginvoiceitemsdeleteresponse.md
  - docs/models/operations/accountinginvoiceitemsoneglobals.md
  - docs/models/operations/accountinginvoiceitemsonerequest.md
  - docs/models/operations/accountinginvoiceitemsoneresponse.md
  - docs/models/operations/accountinginvoiceitemsupdateglobals.md
  - docs/models/operations/accountinginvoiceitemsupdaterequest.md
  - docs/models/operations/accountinginvoiceitemsupdateresponse.md
  - docs/models/operations/accountinginvoicesaddglobals.md
  - docs/models/operations/accountinginvoicesaddrequest.md
  - docs/models/operations/accountinginvoicesaddresponse.md
  - docs/models/operations/accountinginvoicesallglobals.md
  - docs/models/operations/accountinginvoicesallrequest.md
  - docs/models/operations/accountinginvoicesallresponse.md
  - docs/models/operations/accountinginvoicesdeleteglobals.md
  - docs/models/operations/accountinginvoicesdeleterequest.md
  - docs/models/operations/accountinginvoicesdeleteresponse.md
  - docs/models/operations/accountinginvoicesoneglobals.md
  - docs/models/operations/accountinginvoicesonerequest.md
  - docs/models/operations/accountinginvoicesoneresponse.md
  - docs/models/operations/accountinginvoicesupdateglobals.md
  - docs/models/operations/accountinginvoicesupdaterequest.md
  - docs/models/operations/accountinginvoicesupdateresponse.md
  - docs/models/operations/accountingjournalentriesaddglobals.md
  - docs/models/operations/accountingjournalentriesaddrequest.md
  - docs/models/operations/accountingjournalentriesaddresponse.md
  - docs/models/operations/accountingjournalentriesallglobals.md
  - docs/models/operations/accountingjournalentriesallrequest.md
  - docs/models/operations/accountingjournalentriesallresponse.md
  - docs/models/operations/accountingjournalentriesdeleteglobals.md
  - docs/models/operations/accountingjournalentriesdeleterequest.md
  - docs/models/operations/accountingjournalentriesdeleteresponse.md
  - docs/models/operations/accountingjournalentriesoneglobals.md
  - docs/models/operations/accountingjournalentriesonerequest.md
  - docs/models/operations/accountingjournalentriesoneresponse.md
  - docs/models/operations/accountingjournalentriesupdateglobals.md
  - docs/models/operations/accountingjournalentriesupdaterequest.md
  - docs/models/operations/accountingjournalentriesupdateresponse.md
  - docs/models/operations/accountingledgeraccountsaddglobals.md
  - docs/models/operations/accountingledgeraccountsaddrequest.md
  - docs/models/operations/accountingledgeraccountsaddresponse.md
  - docs/models/operations/accountingledgeraccountsallglobals.md
  - docs/models/operations/accountingledgeraccountsallrequest.md
  - docs/models/operations/accountingledgeraccountsallresponse.md
  - docs/models/operations/accountingledgeraccountsdeleteglobals.md
  - docs/models/operations/accountingledgeraccountsdeleterequest.md
  - docs/models/operations/accountingledgeraccountsdeleteresponse.md
  - docs/models/operations/accountingledgeraccountsoneglobals.md
  - docs/models/operations/accountingledgeraccountsonerequest.md
  - docs/models/operations/accountingledgeraccountsoneresponse.md
  - docs/models/operations/accountingledgeraccountsupdateglobals.md
  - docs/models/operations/accountingledgeraccountsupdaterequest.md
  - docs/models/operations/accountingledgeraccountsupdateresponse.md
  - docs/models/operations/accountinglocationsaddglobals.md
  - docs/models/operations/accountinglocationsaddrequest.md
  - docs/models/operations/accountinglocationsaddresponse.md
  - docs/models/operations/accountinglocationsallglobals.md
  - docs/models/operations/accountinglocationsallrequest.md
  - docs/models/operations/accountinglocationsallresponse.md
  - docs/models/operations/accountinglocationsdeleteglobals.md
  - docs/models/operations/accountinglocationsdeleterequest.md
  - docs/models/operations/accountinglocationsdeleteresponse.md
  - docs/models/operations/accountinglocationsoneglobals.md
  - docs/models/operations/accountinglocationsonerequest.md
  - docs/models/operations/accountinglocationsoneresponse.md
  - docs/models/operations/accountinglocationsupdateglobals.md
  - docs/models/operations/accountinglocationsupdaterequest.md
  - docs/models/operations/accountinglocationsupdateresponse.md
  - docs/models/operations/accountingpaymentsaddglobals.md
  - docs/models/operations/accountingpaymentsaddrequest.md
  - docs/models/operations/accountingpaymentsaddresponse.md
  - docs/models/operations/accountingpaymentsallglobals.md
  - docs/models/operations/accountingpaymentsallrequest.md
  - docs/models/operations/accountingpaymentsallresponse.md
  - docs/models/operations/accountingpaymentsdeleteglobals.md
  - docs/models/operations/accountingpaymentsdeleterequest.md
  - docs/models/operations/accountingpaymentsdeleteresponse.md
  - docs/models/operations/accountingpaymentsoneglobals.md
  - docs/models/operations/accountingpaymentsonerequest.md
  - docs/models/operations/accountingpaymentsoneresponse.md
  - docs/models/operations/accountingpaymentsupdateglobals.md
  - docs/models/operations/accountingpaymentsupdaterequest.md
  - docs/models/operations/accountingpaymentsupdateresponse.md
  - docs/models/operations/accountingprofitandlossoneglobals.md
  - docs/models/operations/accountingprofitandlossonerequest.md
  - docs/models/operations/accountingprofitandlossoneresponse.md
  - docs/models/operations/accountingpurchaseordersaddglobals.md
  - docs/models/operations/accountingpurchaseordersaddrequest.md
  - docs/models/operations/accountingpurchaseordersaddresponse.md
  - docs/models/operations/accountingpurchaseordersallglobals.md
  - docs/models/operations/accountingpurchaseordersallrequest.md
  - docs/models/operations/accountingpurchaseordersallresponse.md
  - docs/models/operations/accountingpurchaseordersdeleteglobals.md
  - docs/models/operations/accountingpurchaseordersdeleterequest.md
  - docs/models/operations/accountingpurchaseordersdeleteresponse.md
  - docs/models/operations/accountingpurchaseordersoneglobals.md
  - docs/models/operations/accountingpurchaseordersonerequest.md
  - docs/models/operations/accountingpurchaseordersoneresponse.md
  - docs/models/operations/accountingpurchaseordersupdateglobals.md
  - docs/models/operations/accountingpurchaseordersupdaterequest.md
  - docs/models/operations/accountingpurchaseordersupdateresponse.md
  - docs/models/operations/accountingsubsidiariesaddglobals.md
  - docs/models/operations/accountingsubsidiariesaddrequest.md
  - docs/models/operations/accountingsubsidiariesaddresponse.md
  - docs/models/operations/accountingsubsidiariesallglobals.md
  - docs/models/operations/accountingsubsidiariesallrequest.md
  - docs/models/operations/accountingsubsidiariesallresponse.md
  - docs/models/operations/accountingsubsidiariesdeleteglobals.md
  - docs/models/operations/accountingsubsidiariesdeleterequest.md
  - docs/models/operations/accountingsubsidiariesdeleteresponse.md
  - docs/models/operations/accountingsubsidiariesoneglobals.md
  - docs/models/operations/accountingsubsidiariesonerequest.md
  - docs/models/operations/accountingsubsidiariesoneresponse.md
  - docs/models/operations/accountingsubsidiariesupdateglobals.md
  - docs/models/operations/accountingsubsidiariesupdaterequest.md
  - docs/models/operations/accountingsubsidiariesupdateresponse.md
  - docs/models/operations/accountingsuppliersaddglobals.md
  - docs/models/operations/accountingsuppliersaddrequest.md
  - docs/models/operations/accountingsuppliersaddresponse.md
  - docs/models/operations/accountingsuppliersallglobals.md
  - docs/models/operations/accountingsuppliersallrequest.md
  - docs/models/operations/accountingsuppliersallresponse.md
  - docs/models/operations/accountingsuppliersdeleteglobals.md
  - docs/models/operations/accountingsuppliersdeleterequest.md
  - docs/models/operations/accountingsuppliersdeleteresponse.md
  - docs/models/operations/accountingsuppliersoneglobals.md
  - docs/models/operations/accountingsuppliersonerequest.md
  - docs/models/operations/accountingsuppliersoneresponse.md
  - docs/models/operations/accountingsuppliersupdateglobals.md
  - docs/models/operations/accountingsuppliersupdaterequest.md
  - docs/models/operations/accountingsuppliersupdateresponse.md
  - docs/models/operations/accountingtaxratesaddglobals.md
  - docs/models/operations/accountingtaxratesaddrequest.md
  - docs/models/operations/accountingtaxratesaddresponse.md
  - docs/models/operations/accountingtaxratesallglobals.md
  - docs/models/operations/accountingtaxratesallrequest.md
  - docs/models/operations/accountingtaxratesallresponse.md
  - docs/models/operations/accountingtaxratesdeleteglobals.md
  - docs/models/operations/accountingtaxratesdeleterequest.md
  - docs/models/operations/accountingtaxratesdeleteresponse.md
  - docs/models/operations/accountingtaxratesoneglobals.md
  - docs/models/operations/accountingtaxratesonerequest.md
  - docs/models/operations/accountingtaxratesoneresponse.md
  - docs/models/operations/accountingtaxratesupdateglobals.md
  - docs/models/operations/accountingtaxratesupdaterequest.md
  - docs/models/operations/accountingtaxratesupdateresponse.md
  - docs/models/operations/accountingtrackingcategoriesaddglobals.md
  - docs/models/operations/accountingtrackingcategoriesaddrequest.md
  - docs/models/operations/accountingtrackingcategoriesaddresponse.md
  - docs/models/operations/accountingtrackingcategoriesallglobals.md
  - docs/models/operations/accountingtrackingcategoriesallrequest.md
  - docs/models/operations/accountingtrackingcategoriesallresponse.md
  - docs/models/operations/accountingtrackingcategoriesdeleteglobals.md
  - docs/models/operations/accountingtrackingcategoriesdeleterequest.md
  - docs/models/operations/accountingtrackingcategoriesdeleteresponse.md
  - docs/models/operations/accountingtrackingcategoriesoneglobals.md
  - docs/models/operations/accountingtrackingcategoriesonerequest.md
  - docs/models/operations/accountingtrackingcategoriesoneresponse.md
  - docs/models/operations/accountingtrackingcategoriesupdateglobals.md
  - docs/models/operations/accountingtrackingcategoriesupdaterequest.md
  - docs/models/operations/accountingtrackingcategoriesupdateresponse.md
  - docs/models/operations/atsapplicantsaddglobals.md
  - docs/models/operations/atsapplicantsaddrequest.md
  - docs/models/operations/atsapplicantsaddresponse.md
  - docs/models/operations/atsapplicantsallglobals.md
  - docs/models/operations/atsapplicantsallrequest.md
  - docs/models/operations/atsapplicantsallresponse.md
  - docs/models/operations/atsapplicantsdeleteglobals.md
  - docs/models/operations/atsapplicantsdeleterequest.md
  - docs/models/operations/atsapplicantsdeleteresponse.md
  - docs/models/operations/atsapplicantsoneglobals.md
  - docs/models/operations/atsapplicantsonerequest.md
  - docs/models/operations/atsapplicantsoneresponse.md
  - docs/models/operations/atsapplicantsupdateglobals.md
  - docs/models/operations/atsapplicantsupdaterequest.md
  - docs/models/operations/atsapplicantsupdateresponse.md
  - docs/models/operations/atsapplicationsaddglobals.md
  - docs/models/operations/atsapplicationsaddrequest.md
  - docs/models/operations/atsapplicationsaddresponse.md
  - docs/models/operations/atsapplicationsallglobals.md
  - docs/models/operations/atsapplicationsallrequest.md
  - docs/models/operations/atsapplicationsallresponse.md
  - docs/models/operations/atsapplicationsdeleteglobals.md
  - docs/models/operations/atsapplicationsdeleterequest.md
  - docs/models/operations/atsapplicationsdeleteresponse.md
  - docs/models/operations/atsapplicationsoneglobals.md
  - docs/models/operations/atsapplicationsonerequest.md
  - docs/models/operations/atsapplicationsoneresponse.md
  - docs/models/operations/atsapplicationsupdateglobals.md
  - docs/models/operations/atsapplicationsupdaterequest.md
  - docs/models/operations/atsapplicationsupdateresponse.md
  - docs/models/operations/atsjobsallglobals.md
  - docs/models/operations/atsjobsallrequest.md
  - docs/models/operations/atsjobsallresponse.md
  - docs/models/operations/atsjobsoneglobals.md
  - docs/models/operations/atsjobsonerequest.md
  - docs/models/operations/atsjobsoneresponse.md
  - docs/models/operations/connectorapiresourcecoverageoneglobals.md
  - docs/models/operations/connectorapiresourcecoverageonerequest.md
  - docs/models/operations/connectorapiresourcecoverageoneresponse.md
  - docs/models/operations/connectorapiresourcesoneglobals.md
  - docs/models/operations/connectorapiresourcesonerequest.md
  - docs/models/operations/connectorapiresourcesoneresponse.md
  - docs/models/operations/connectorapisallglobals.md
  - docs/models/operations/connectorapisallrequest.md
  - docs/models/operations/connectorapisallresponse.md
  - docs/models/operations/connectorapisoneglobals.md
  - docs/models/operations/connectorapisonerequest.md
  - docs/models/operations/connectorapisoneresponse.md
  - docs/models/operations/connectorconnectordocsoneglobals.md
  - docs/models/operations/connectorconnectordocsonerequest.md
  - docs/models/operations/connectorconnectordocsoneresponse.md
  - docs/models/operations/connectorconnectorresourcesoneglobals.md
  - docs/models/operations/connectorconnectorresourcesonerequest.md
  - docs/models/operations/connectorconnectorresourcesoneresponse.md
  - docs/models/operations/connectorconnectorsallglobals.md
  - docs/models/operations/connectorconnectorsallrequest.md
  - docs/models/operations/connectorconnectorsallresponse.md
  - docs/models/operations/connectorconnectorsoneglobals.md
  - docs/models/operations/connectorconnectorsonerequest.md
  - docs/models/operations/connectorconnectorsoneresponse.md
  - docs/models/operations/crmactivitiesaddglobals.md
  - docs/models/operations/crmactivitiesaddrequest.md
  - docs/models/operations/crmactivitiesaddresponse.md
  - docs/models/operations/crmactivitiesallglobals.md
  - docs/models/operations/crmactivitiesallrequest.md
  - docs/models/operations/crmactivitiesallresponse.md
  - docs/models/operations/crmactivitiesdeleteglobals.md
  - docs/models/operations/crmactivitiesdeleterequest.md
  - docs/models/operations/crmactivitiesdeleteresponse.md
  - docs/models/operations/crmactivitiesoneglobals.md
  - docs/models/operations/crmactivitiesonerequest.md
  - docs/models/operations/crmactivitiesoneresponse.md
  - docs/models/operations/crmactivitiesupdateglobals.md
  - docs/models/operations/crmactivitiesupdaterequest.md
  - docs/models/operations/crmactivitiesupdateresponse.md
  - docs/models/operations/crmcompaniesaddglobals.md
  - docs/models/operations/crmcompaniesaddrequest.md
  - docs/models/operations/crmcompaniesaddresponse.md
  - docs/models/operations/crmcompaniesallglobals.md
  - docs/models/operations/crmcompaniesallrequest.md
  - docs/models/operations/crmcompaniesallresponse.md
  - docs/models/operations/crmcompaniesdeleteglobals.md
  - docs/models/operations/crmcompaniesdeleterequest.md
  - docs/models/operations/crmcompaniesdeleteresponse.md
  - docs/models/operations/crmcompaniesoneglobals.md
  - docs/models/operations/crmcompaniesonerequest.md
  - docs/models/operations/crmcompaniesoneresponse.md
  - docs/models/operations/crmcompaniesupdateglobals.md
  - docs/models/operations/crmcompaniesupdaterequest.md
  - docs/models/operations/crmcompaniesupdateresponse.md
  - docs/models/operations/crmcontactsaddglobals.md
  - docs/models/operations/crmcontactsaddrequest.md
  - docs/models/operations/crmcontactsaddresponse.md
  - docs/models/operations/crmcontactsallglobals.md
  - docs/models/operations/crmcontactsallrequest.md
  - docs/models/operations/crmcontactsallresponse.md
  - docs/models/operations/crmcontactsdeleteglobals.md
  - docs/models/operations/crmcontactsdeleterequest.md
  - docs/models/operations/crmcontactsdeleteresponse.md
  - docs/models/operations/crmcontactsoneglobals.md
  - docs/models/operations/crmcontactsonerequest.md
  - docs/models/operations/crmcontactsoneresponse.md
  - docs/models/operations/crmcontactsupdateglobals.md
  - docs/models/operations/crmcontactsupdaterequest.md
  - docs/models/operations/crmcontactsupdateresponse.md
  - docs/models/operations/crmleadsaddglobals.md
  - docs/models/operations/crmleadsaddrequest.md
  - docs/models/operations/crmleadsaddresponse.md
  - docs/models/operations/crmleadsallglobals.md
  - docs/models/operations/crmleadsallrequest.md
  - docs/models/operations/crmleadsallresponse.md
  - docs/models/operations/crmleadsdeleteglobals.md
  - docs/models/operations/crmleadsdeleterequest.md
  - docs/models/operations/crmleadsdeleteresponse.md
  - docs/models/operations/crmleadsoneglobals.md
  - docs/models/operations/crmleadsonerequest.md
  - docs/models/operations/crmleadsoneresponse.md
  - docs/models/operations/crmleadsupdateglobals.md
  - docs/models/operations/crmleadsupdaterequest.md
  - docs/models/operations/crmleadsupdateresponse.md
  - docs/models/operations/crmnotesaddglobals.md
  - docs/models/operations/crmnotesaddrequest.md
  - docs/models/operations/crmnotesaddresponse.md
  - docs/models/operations/crmnotesallglobals.md
  - docs/models/operations/crmnotesallrequest.md
  - docs/models/operations/crmnotesallresponse.md
  - docs/models/operations/crmnotesdeleteglobals.md
  - docs/models/operations/crmnotesdeleterequest.md
  - docs/models/operations/crmnotesdeleteresponse.md
  - docs/models/operations/crmnotesoneglobals.md
  - docs/models/operations/crmnotesonerequest.md
  - docs/models/operations/crmnotesoneresponse.md
  - docs/models/operations/crmnotesupdateglobals.md
  - docs/models/operations/crmnotesupdaterequest.md
  - docs/models/operations/crmnotesupdateresponse.md
  - docs/models/operations/crmopportunitiesaddglobals.md
  - docs/models/operations/crmopportunitiesaddrequest.md
  - docs/models/operations/crmopportunitiesaddresponse.md
  - docs/models/operations/crmopportunitiesallglobals.md
  - docs/models/operations/crmopportunitiesallrequest.md
  - docs/models/operations/crmopportunitiesallresponse.md
  - docs/models/operations/crmopportunitiesdeleteglobals.md
  - docs/models/operations/crmopportunitiesdeleterequest.md
  - docs/models/operations/crmopportunitiesdeleteresponse.md
  - docs/models/operations/crmopportunitiesoneglobals.md
  - docs/models/operations/crmopportunitiesonerequest.md
  - docs/models/operations/crmopportunitiesoneresponse.md
  - docs/models/operations/crmopportunitiesupdateglobals.md
  - docs/models/operations/crmopportunitiesupdaterequest.md
  - docs/models/operations/crmopportunitiesupdateresponse.md
  - docs/models/operations/crmpipelinesallglobals.md
  - docs/models/operations/crmpipelinesallrequest.md
  - docs/models/operations/crmpipelinesallresponse.md
  - docs/models/operations/crmusersaddglobals.md
  - docs/models/operations/crmusersaddrequest.md
  - docs/models/operations/crmusersaddresponse.md
  - docs/models/operations/crmusersallglobals.md
  - docs/models/operations/crmusersallrequest.md
  - docs/models/operations/crmusersallresponse.md
  - docs/models/operations/crmusersdeleteglobals.md
  - docs/models/operations/crmusersdeleterequest.md
  - docs/models/operations/crmusersdeleteresponse.md
  - docs/models/operations/crmusersoneglobals.md
  - docs/models/operations/crmusersonerequest.md
  - docs/models/operations/crmusersoneresponse.md
  - docs/models/operations/crmusersupdateglobals.md
  - docs/models/operations/crmusersupdaterequest.md
  - docs/models/operations/crmusersupdateresponse.md
  - docs/models/operations/ecommercecustomersallglobals.md
  - docs/models/operations/ecommercecustomersallrequest.md
  - docs/models/operations/ecommercecustomersallresponse.md
  - docs/models/operations/ecommercecustomersoneglobals.md
  - docs/models/operations/ecommercecustomersonerequest.md
  - docs/models/operations/ecommercecustomersoneresponse.md
  - docs/models/operations/ecommerceordersallglobals.md
  - docs/models/operations/ecommerceordersallrequest.md
  - docs/models/operations/ecommerceordersallresponse.md
  - docs/models/operations/ecommerceordersoneglobals.md
  - docs/models/operations/ecommerceordersonerequest.md
  - docs/models/operations/ecommerceordersoneresponse.md
  - docs/models/operations/ecommerceproductsallglobals.md
  - docs/models/operations/ecommerceproductsallrequest.md
  - docs/models/operations/ecommerceproductsallresponse.md
  - docs/models/operations/ecommerceproductsoneglobals.md
  - docs/models/operations/ecommerceproductsonerequest.md
  - docs/models/operations/ecommerceproductsoneresponse.md
  - docs/models/operations/ecommercestoresoneglobals.md
  - docs/models/operations/ecommercestoresonerequest.md
  - docs/models/operations/ecommercestoresoneresponse.md
  - docs/models/operations/filestoragedrivegroupsaddglobals.md
  - docs/models/operations/filestoragedrivegroupsaddrequest.md
  - docs/models/operations/filestoragedrivegroupsaddresponse.md
  - docs/models/operations/filestoragedrivegroupsallglobals.md
  - docs/models/operations/filestoragedrivegroupsallrequest.md
  - docs/models/operations/filestoragedrivegroupsallresponse.md
  - docs/models/operations/filestoragedrivegroupsdeleteglobals.md
  - docs/models/operations/filestoragedrivegroupsdeleterequest.md
  - docs/models/operations/filestoragedrivegroupsdeleteresponse.md
  - docs/models/operations/filestoragedrivegroupsoneglobals.md
  - docs/models/operations/filestoragedrivegroupsonerequest.md
  - docs/models/operations/filestoragedrivegroupsoneresponse.md
  - docs/models/operations/filestoragedrivegroupsupdateglobals.md
  - docs/models/operations/filestoragedrivegroupsupdaterequest.md
  - docs/models/operations/filestoragedrivegroupsupdateresponse.md
  - docs/models/operations/filestoragedrivesaddglobals.md
  - docs/models/operations/filestoragedrivesaddrequest.md
  - docs/models/operations/filestoragedrivesaddresponse.md
  - docs/models/operations/filestoragedrivesallglobals.md
  - docs/models/operations/filestoragedrivesallrequest.md
  - docs/models/operations/filestoragedrivesallresponse.md
  - docs/models/operations/filestoragedrivesdeleteglobals.md
  - docs/models/operations/filestoragedrivesdeleterequest.md
  - docs/models/operations/filestoragedrivesdeleteresponse.md
  - docs/models/operations/filestoragedrivesoneglobals.md
  - docs/models/operations/filestoragedrivesonerequest.md
  - docs/models/operations/filestoragedrivesoneresponse.md
  - docs/models/operations/filestoragedrivesupdateglobals.md
  - docs/models/operations/filestoragedrivesupdaterequest.md
  - docs/models/operations/filestoragedrivesupdateresponse.md
  - docs/models/operations/filestoragefilesallglobals.md
  - docs/models/operations/filestoragefilesallrequest.md
  - docs/models/operations/filestoragefilesallresponse.md
  - docs/models/operations/filestoragefilesdeleteglobals.md
  - docs/models/operations/filestoragefilesdeleterequest.md
  - docs/models/operations/filestoragefilesdeleteresponse.md
  - docs/models/operations/filestoragefilesdownloadglobals.md
  - docs/models/operations/filestoragefilesdownloadrequest.md
  - docs/models/operations/filestoragefilesdownloadresponse.md
  - docs/models/operations/filestoragefilesexportglobals.md
  - docs/models/operations/filestoragefilesexportrequest.md
  - docs/models/operations/filestoragefilesexportresponse.md
  - docs/models/operations/filestoragefilesoneglobals.md
  - docs/models/operations/filestoragefilesonerequest.md
  - docs/models/operations/filestoragefilesoneresponse.md
  - docs/models/operations/filestoragefilessearchglobals.md
  - docs/models/operations/filestoragefilessearchrequest.md
  - docs/models/operations/filestoragefilessearchresponse.md
  - docs/models/operations/filestoragefilesupdateglobals.md
  - docs/models/operations/filestoragefilesupdaterequest.md
  - docs/models/operations/filestoragefilesupdateresponse.md
  - docs/models/operations/filestoragefoldersaddglobals.md
  - docs/models/operations/filestoragefoldersaddrequest.md
  - docs/models/operations/filestoragefoldersaddresponse.md
  - docs/models/operations/filestoragefolderscopyglobals.md
  - docs/models/operations/filestoragefolderscopyrequest.md
  - docs/models/operations/filestoragefolderscopyresponse.md
  - docs/models/operations/filestoragefoldersdeleteglobals.md
  - docs/models/operations/filestoragefoldersdeleterequest.md
  - docs/models/operations/filestoragefoldersdeleteresponse.md
  - docs/models/operations/filestoragefoldersoneglobals.md
  - docs/models/operations/filestoragefoldersonerequest.md
  - docs/models/operations/filestoragefoldersoneresponse.md
  - docs/models/operations/filestoragefoldersupdateglobals.md
  - docs/models/operations/filestoragefoldersupdaterequest.md
  - docs/models/operations/filestoragefoldersupdateresponse.md
  - docs/models/operations/filestoragesharedlinksaddglobals.md
  - docs/models/operations/filestoragesharedlinksaddrequest.md
  - docs/models/operations/filestoragesharedlinksaddresponse.md
  - docs/models/operations/filestoragesharedlinksallglobals.md
  - docs/models/operations/filestoragesharedlinksallrequest.md
  - docs/models/operations/filestoragesharedlinksallresponse.md
  - docs/models/operations/filestoragesharedlinksdeleteglobals.md
  - docs/models/operations/filestoragesharedlinksdeleterequest.md
  - docs/models/operations/filestoragesharedlinksdeleteresponse.md
  - docs/models/operations/filestoragesharedlinksoneglobals.md
  - docs/models/operations/filestoragesharedlinksonerequest.md
  - docs/models/operations/filestoragesharedlinksoneresponse.md
  - docs/models/operations/filestoragesharedlinksupdateglobals.md
  - docs/models/operations/filestoragesharedlinksupdaterequest.md
  - docs/models/operations/filestoragesharedlinksupdateresponse.md
  - docs/models/operations/filestorageuploadsessionsaddglobals.md
  - docs/models/operations/filestorageuploadsessionsaddrequest.md
  - docs/models/operations/filestorageuploadsessionsaddresponse.md
  - docs/models/operations/filestorageuploadsessionsdeleteglobals.md
  - docs/models/operations/filestorageuploadsessionsdeleterequest.md
  - docs/models/operations/filestorageuploadsessionsdeleteresponse.md
  - docs/models/operations/filestorageuploadsessionsfinishglobals.md
  - docs/models/operations/filestorageuploadsessionsfinishrequest.md
  - docs/models/operations/filestorageuploadsessionsfinishrequestbody.md
  - docs/models/operations/filestorageuploadsessionsfinishresponse.md
  - docs/models/operations/filestorageuploadsessionsoneglobals.md
  - docs/models/operations/filestorageuploadsessionsonerequest.md
  - docs/models/operations/filestorageuploadsessionsoneresponse.md
  - docs/models/operations/hriscompaniesaddglobals.md
  - docs/models/operations/hriscompaniesaddrequest.md
  - docs/models/operations/hriscompaniesaddresponse.md
  - docs/models/operations/hriscompaniesallglobals.md
  - docs/models/operations/hriscompaniesallrequest.md
  - docs/models/operations/hriscompaniesallresponse.md
  - docs/models/operations/hriscompaniesdeleteglobals.md
  - docs/models/operations/hriscompaniesdeleterequest.md
  - docs/models/operations/hriscompaniesdeleteresponse.md
  - docs/models/operations/hriscompaniesoneglobals.md
  - docs/models/operations/hriscompaniesonerequest.md
  - docs/models/operations/hriscompaniesoneresponse.md
  - docs/models/operations/hriscompaniesupdateglobals.md
  - docs/models/operations/hriscompaniesupdaterequest.md
  - docs/models/operations/hriscompaniesupdateresponse.md
  - docs/models/operations/hrisdepartmentsaddglobals.md
  - docs/models/operations/hrisdepartmentsaddrequest.md
  - docs/models/operations/hrisdepartmentsaddresponse.md
  - docs/models/operations/hrisdepartmentsallglobals.md
  - docs/models/operations/hrisdepartmentsallrequest.md
  - docs/models/operations/hrisdepartmentsallresponse.md
  - docs/models/operations/hrisdepartmentsdeleteglobals.md
  - docs/models/operations/hrisdepartmentsdeleterequest.md
  - docs/models/operations/hrisdepartmentsdeleteresponse.md
  - docs/models/operations/hrisdepartmentsoneglobals.md
  - docs/models/operations/hrisdepartmentsonerequest.md
  - docs/models/operations/hrisdepartmentsoneresponse.md
  - docs/models/operations/hrisdepartmentsupdateglobals.md
  - docs/models/operations/hrisdepartmentsupdaterequest.md
  - docs/models/operations/hrisdepartmentsupdateresponse.md
  - docs/models/operations/hrisemployeepayrollsallglobals.md
  - docs/models/operations/hrisemployeepayrollsallrequest.md
  - docs/models/operations/hrisemployeepayrollsallresponse.md
  - docs/models/operations/hrisemployeepayrollsoneglobals.md
  - docs/models/operations/hrisemployeepayrollsonerequest.md
  - docs/models/operations/hrisemployeepayrollsoneresponse.md
  - docs/models/operations/hrisemployeesaddglobals.md
  - docs/models/operations/hrisemployeesaddrequest.md
  - docs/models/operations/hrisemployeesaddresponse.md
  - docs/models/operations/hrisemployeesallglobals.md
  - docs/models/operations/hrisemployeesallrequest.md
  - docs/models/operations/hrisemployeesallresponse.md
  - docs/models/operations/hrisemployeeschedulesallglobals.md
  - docs/models/operations/hrisemployeeschedulesallrequest.md
  - docs/models/operations/hrisemployeeschedulesallresponse.md
  - docs/models/operations/hrisemployeesdeleteglobals.md
  - docs/models/operations/hrisemployeesdeleterequest.md
  - docs/models/operations/hrisemployeesdeleteresponse.md
  - docs/models/operations/hrisemployeesoneglobals.md
  - docs/models/operations/hrisemployeesonerequest.md
  - docs/models/operations/hrisemployeesoneresponse.md
  - docs/models/operations/hrisemployeesupdateglobals.md
  - docs/models/operations/hrisemployeesupdaterequest.md
  - docs/models/operations/hrisemployeesupdateresponse.md
  - docs/models/operations/hrispayrollsallglobals.md
  - docs/models/operations/hrispayrollsallrequest.md
  - docs/models/operations/hrispayrollsallresponse.md
  - docs/models/operations/hrispayrollsoneglobals.md
  - docs/models/operations/hrispayrollsonerequest.md
  - docs/models/operations/hrispayrollsoneresponse.md
  - docs/models/operations/hristimeoffrequestsaddglobals.md
  - docs/models/operations/hristimeoffrequestsaddrequest.md
  - docs/models/operations/hristimeoffrequestsaddresponse.md
  - docs/models/operations/hristimeoffrequestsallglobals.md
  - docs/models/operations/hristimeoffrequestsallrequest.md
  - docs/models/operations/hristimeoffrequestsallresponse.md
  - docs/models/operations/hristimeoffrequestsdeleteglobals.md
  - docs/models/operations/hristimeoffrequestsdeleterequest.md
  - docs/models/operations/hristimeoffrequestsdeleteresponse.md
  - docs/models/operations/hristimeoffrequestsoneglobals.md
  - docs/models/operations/hristimeoffrequestsonerequest.md
  - docs/models/operations/hristimeoffrequestsoneresponse.md
  - docs/models/operations/hristimeoffrequestsupdateglobals.md
  - docs/models/operations/hristimeoffrequestsupdaterequest.md
  - docs/models/operations/hristimeoffrequestsupdateresponse.md
  - docs/models/operations/issuetrackingcollectionsallglobals.md
  - docs/models/operations/issuetrackingcollectionsallrequest.md
  - docs/models/operations/issuetrackingcollectionsallresponse.md
  - docs/models/operations/issuetrackingcollectionsoneglobals.md
  - docs/models/operations/issuetrackingcollectionsonerequest.md
  - docs/models/operations/issuetrackingcollectionsoneresponse.md
  - docs/models/operations/issuetrackingcollectiontagsallglobals.md
  - docs/models/operations/issuetrackingcollectiontagsallrequest.md
  - docs/models/operations/issuetrackingcollectiontagsallresponse.md
  - docs/models/operations/issuetrackingcollectionticketcommentsaddglobals.md
  - docs/models/operations/issuetrackingcollectionticketcommentsaddrequest.md
  - docs/models/operations/issuetrackingcollectionticketcommentsaddresponse.md
  - docs/models/operations/issuetrackingcollectionticketcommentsallglobals.md
  - docs/models/operations/issuetrackingcollectionticketcommentsallrequest.md
  - docs/models/operations/issuetrackingcollectionticketcommentsallresponse.md
  - docs/models/operations/issuetrackingcollectionticketcommentsdeleteglobals.md
  - docs/models/operations/issuetrackingcollectionticketcommentsdeleterequest.md
  - docs/models/operations/issuetrackingcollectionticketcommentsdeleteresponse.md
  - docs/models/operations/issuetrackingcollectionticketcommentsoneglobals.md
  - docs/models/operations/issuetrackingcollectionticketcommentsonerequest.md
  - docs/models/operations/issuetrackingcollectionticketcommentsoneresponse.md
  - docs/models/operations/issuetrackingcollectionticketcommentsupdateglobals.md
  - docs/models/operations/issuetrackingcollectionticketcommentsupdaterequest.md
  - docs/models/operations/issuetrackingcollectionticketcommentsupdateresponse.md
  - docs/models/operations/issuetrackingcollectionticketsaddglobals.md
  - docs/models/operations/issuetrackingcollectionticketsaddrequest.md
  - docs/models/operations/issuetrackingcollectionticketsaddresponse.md
  - docs/models/operations/issuetrackingcollectionticketsallglobals.md
  - docs/models/operations/issuetrackingcollectionticketsallrequest.md
  - docs/models/operations/issuetrackingcollectionticketsallresponse.md
  - docs/models/operations/issuetrackingcollectionticketsdeleteglobals.md
  - docs/models/operations/issuetrackingcollectionticketsdeleterequest.md
  - docs/models/operations/issuetrackingcollectionticketsdeleteresponse.md
  - docs/models/operations/issuetrackingcollectionticketsoneglobals.md
  - docs/models/operations/issuetrackingcollectionticketsonerequest.md
  - docs/models/operations/issuetrackingcollectionticketsoneresponse.md
  - docs/models/operations/issuetrackingcollectionticketsupdateglobals.md
  - docs/models/operations/issuetrackingcollectionticketsupdaterequest.md
  - docs/models/operations/issuetrackingcollectionticketsupdateresponse.md
  - docs/models/operations/issuetrackingcollectionusersallglobals.md
  - docs/models/operations/issuetrackingcollectionusersallrequest.md
  - docs/models/operations/issuetrackingcollectionusersallresponse.md
  - docs/models/operations/issuetrackingcollectionusersoneglobals.md
  - docs/models/operations/issuetrackingcollectionusersonerequest.md
  - docs/models/operations/issuetrackingcollectionusersoneresponse.md
  - docs/models/operations/smsmessagesaddglobals.md
  - docs/models/operations/smsmessagesaddrequest.md
  - docs/models/operations/smsmessagesaddresponse.md
  - docs/models/operations/smsmessagesallglobals.md
  - docs/models/operations/smsmessagesallrequest.md
  - docs/models/operations/smsmessagesallresponse.md
  - docs/models/operations/smsmessagesdeleteglobals.md
  - docs/models/operations/smsmessagesdeleterequest.md
  - docs/models/operations/smsmessagesdeleteresponse.md
  - docs/models/operations/smsmessagesoneglobals.md
  - docs/models/operations/smsmessagesonerequest.md
  - docs/models/operations/smsmessagesoneresponse.md
  - docs/models/operations/smsmessagesupdateglobals.md
  - docs/models/operations/smsmessagesupdaterequest.md
  - docs/models/operations/smsmessagesupdateresponse.md
  - docs/models/operations/vaultconnectioncustommappingsallglobals.md
  - docs/models/operations/vaultconnectioncustommappingsallrequest.md
  - docs/models/operations/vaultconnectioncustommappingsallresponse.md
  - docs/models/operations/vaultconnectionsallglobals.md
  - docs/models/operations/vaultconnectionsallrequest.md
  - docs/models/operations/vaultconnectionsallresponse.md
  - docs/models/operations/vaultconnectionsdeleteglobals.md
  - docs/models/operations/vaultconnectionsdeleterequest.md
  - docs/models/operations/vaultconnectionsdeleteresponse.md
  - docs/models/operations/vaultconnectionsettingsallglobals.md
  - docs/models/operations/vaultconnectionsettingsallrequest.md
  - docs/models/operations/vaultconnectionsettingsallresponse.md
  - docs/models/operations/vaultconnectionsettingsupdateglobals.md
  - docs/models/operations/vaultconnectionsettingsupdaterequest.md
  - docs/models/operations/vaultconnectionsettingsupdateresponse.md
  - docs/models/operations/vaultconnectionsimportglobals.md
  - docs/models/operations/vaultconnectionsimportrequest.md
  - docs/models/operations/vaultconnectionsimportresponse.md
  - docs/models/operations/vaultconnectionsoneglobals.md
  - docs/models/operations/vaultconnectionsonerequest.md
  - docs/models/operations/vaultconnectionsoneresponse.md
  - docs/models/operations/vaultconnectionstokenglobals.md
  - docs/models/operations/vaultconnectionstokenrequest.md
  - docs/models/operations/vaultconnectionstokenrequestbody.md
  - docs/models/operations/vaultconnectionstokenresponse.md
  - docs/models/operations/vaultconnectionsupdateglobals.md
  - docs/models/operations/vaultconnectionsupdaterequest.md
  - docs/models/operations/vaultconnectionsupdateresponse.md
  - docs/models/operations/vaultconsumerrequestcountsallglobals.md
  - docs/models/operations/vaultconsumerrequestcountsallrequest.md
  - docs/models/operations/vaultconsumerrequestcountsallresponse.md
  - docs/models/operations/vaultconsumersaddglobals.md
  - docs/models/operations/vaultconsumersaddresponse.md
  - docs/models/operations/vaultconsumersallglobals.md
  - docs/models/operations/vaultconsumersallrequest.md
  - docs/models/operations/vaultconsumersallresponse.md
  - docs/models/operations/vaultconsumersdeleteglobals.md
  - docs/models/operations/vaultconsumersdeleterequest.md
  - docs/models/operations/vaultconsumersdeleteresponse.md
  - docs/models/operations/vaultconsumersoneglobals.md
  - docs/models/operations/vaultconsumersonerequest.md
  - docs/models/operations/vaultconsumersoneresponse.md
  - docs/models/operations/vaultconsumersupdateglobals.md
  - docs/models/operations/vaultconsumersupdaterequest.md
  - docs/models/operations/vaultconsumersupdateresponse.md
  - docs/models/operations/vaultcreatecallbackstateglobals.md
  - docs/models/operations/vaultcreatecallbackstaterequest.md
  - docs/models/operations/vaultcreatecallbackstateresponse.md
  - docs/models/operations/vaultcustomfieldsallglobals.md
  - docs/models/operations/vaultcustomfieldsallrequest.md
  - docs/models/operations/vaultcustomfieldsallresponse.md
  - docs/models/operations/vaultcustommappingsallglobals.md
  - docs/models/operations/vaultcustommappingsallrequest.md
  - docs/models/operations/vaultcustommappingsallresponse.md
  - docs/models/operations/vaultlogsallglobals.md
  - docs/models/operations/vaultlogsallrequest.md
  - docs/models/operations/vaultlogsallresponse.md
  - docs/models/operations/vaultsessionscreateglobals.md
  - docs/models/operations/vaultsessionscreateresponse.md
  - docs/models/operations/vaultvalidateconnectionstateglobals.md
  - docs/models/operations/vaultvalidateconnectionstaterequest.md
  - docs/models/operations/vaultvalidateconnectionstaterequestbody.md
  - docs/models/operations/vaultvalidateconnectionstateresponse.md
  - docs/models/operations/webhookeventlogsallglobals.md
  - docs/models/operations/webhookeventlogsallrequest.md
  - docs/models/operations/webhookeventlogsallresponse.md
  - docs/models/operations/webhookwebhooksaddglobals.md
  - docs/models/operations/webhookwebhooksaddresponse.md
  - docs/models/operations/webhookwebhooksallglobals.md
  - docs/models/operations/webhookwebhooksallrequest.md
  - docs/models/operations/webhookwebhooksallresponse.md
  - docs/models/operations/webhookwebhooksdeleteglobals.md
  - docs/models/operations/webhookwebhooksdeleterequest.md
  - docs/models/operations/webhookwebhooksdeleteresponse.md
  - docs/models/operations/webhookwebhooksoneglobals.md
  - docs/models/operations/webhookwebhooksonerequest.md
  - docs/models/operations/webhookwebhooksoneresponse.md
  - docs/models/operations/webhookwebhooksupdateglobals.md
  - docs/models/operations/webhookwebhooksupdaterequest.md
  - docs/models/operations/webhookwebhooksupdateresponse.md
  - docs/sdks/accounting/README.md
  - docs/sdks/activities/README.md
  - docs/sdks/ageddebtors/README.md
  - docs/sdks/apideck/README.md
  - docs/sdks/apideckcompanies/README.md
  - docs/sdks/apideckcustomers/README.md
  - docs/sdks/apideckdepartments/README.md
  - docs/sdks/apiresourcecoverage/README.md
  - docs/sdks/apiresources/README.md
  - docs/sdks/apis/README.md
  - docs/sdks/applicants/README.md
  - docs/sdks/applications/README.md
  - docs/sdks/ats/README.md
  - docs/sdks/attachments/README.md
  - docs/sdks/balancesheet/README.md
  - docs/sdks/billpayments/README.md
  - docs/sdks/bills/README.md
  - docs/sdks/collections/README.md
  - docs/sdks/collectiontags/README.md
  - docs/sdks/collectionticketcomments/README.md
  - docs/sdks/collectiontickets/README.md
  - docs/sdks/collectionusers/README.md
  - docs/sdks/companies/README.md
  - docs/sdks/companyinfo/README.md
  - docs/sdks/connectioncustommappings/README.md
  - docs/sdks/connections/README.md
  - docs/sdks/connectionsettings/README.md
  - docs/sdks/connector/README.md
  - docs/sdks/connectordocs/README.md
  - docs/sdks/connectorresources/README.md
  - docs/sdks/connectors/README.md
  - docs/sdks/consumerrequestcounts/README.md
  - docs/sdks/consumers/README.md
  - docs/sdks/contacts/README.md
  - docs/sdks/createcallback/README.md
  - docs/sdks/creditnotes/README.md
  - docs/sdks/crm/README.md
  - docs/sdks/customers/README.md
  - docs/sdks/customfields/README.md
  - docs/sdks/custommappings/README.md
  - docs/sdks/departments/README.md
  - docs/sdks/drivegroups/README.md
  - docs/sdks/drives/README.md
  - docs/sdks/ecommerce/README.md
  - docs/sdks/employeepayrolls/README.md
  - docs/sdks/employees/README.md
  - docs/sdks/employeeschedules/README.md
  - docs/sdks/eventlogs/README.md
  - docs/sdks/expenses/README.md
  - docs/sdks/files/README.md
  - docs/sdks/filestorage/README.md
  - docs/sdks/folders/README.md
  - docs/sdks/hris/README.md
  - docs/sdks/invoiceitems/README.md
  - docs/sdks/invoices/README.md
  - docs/sdks/issuetracking/README.md
  - docs/sdks/jobs/README.md
  - docs/sdks/journalentries/README.md
  - docs/sdks/leads/README.md
  - docs/sdks/ledgeraccounts/README.md
  - docs/sdks/locations/README.md
  - docs/sdks/logs/README.md
  - docs/sdks/messages/README.md
  - docs/sdks/notes/README.md
  - docs/sdks/opportunities/README.md
  - docs/sdks/orders/README.md
  - docs/sdks/payments/README.md
  - docs/sdks/payrolls/README.md
  - docs/sdks/pipelines/README.md
  - docs/sdks/products/README.md
  - docs/sdks/profitandloss/README.md
  - docs/sdks/purchaseorders/README.md
  - docs/sdks/sessions/README.md
  - docs/sdks/sharedlinks/README.md
  - docs/sdks/sms/README.md
  - docs/sdks/stores/README.md
  - docs/sdks/subsidiaries/README.md
  - docs/sdks/suppliers/README.md
  - docs/sdks/taxrates/README.md
  - docs/sdks/timeoffrequests/README.md
  - docs/sdks/trackingcategories/README.md
  - docs/sdks/uploadsessions/README.md
  - docs/sdks/users/README.md
  - docs/sdks/validateconnection/README.md
  - docs/sdks/vault/README.md
  - docs/sdks/webhook/README.md
  - docs/sdks/webhooks/README.md
  - docs/types/rfcdate.md
  - jsr.json
  - package.json
  - src/core.ts
  - src/funcs/accountingAgedDebtorsGet.ts
  - src/funcs/accountingAttachmentsDelete.ts
  - src/funcs/accountingAttachmentsDownload.ts
  - src/funcs/accountingAttachmentsGet.ts
  - src/funcs/accountingAttachmentsList.ts
  - src/funcs/accountingBalanceSheetGet.ts
  - src/funcs/accountingBillPaymentsCreate.ts
  - src/funcs/accountingBillPaymentsDelete.ts
  - src/funcs/accountingBillPaymentsGet.ts
  - src/funcs/accountingBillPaymentsList.ts
  - src/funcs/accountingBillPaymentsUpdate.ts
  - src/funcs/accountingBillsCreate.ts
  - src/funcs/accountingBillsDelete.ts
  - src/funcs/accountingBillsGet.ts
  - src/funcs/accountingBillsList.ts
  - src/funcs/accountingBillsUpdate.ts
  - src/funcs/accountingCompanyInfoGet.ts
  - src/funcs/accountingCreditNotesCreate.ts
  - src/funcs/accountingCreditNotesDelete.ts
  - src/funcs/accountingCreditNotesGet.ts
  - src/funcs/accountingCreditNotesList.ts
  - src/funcs/accountingCreditNotesUpdate.ts
  - src/funcs/accountingCustomersCreate.ts
  - src/funcs/accountingCustomersDelete.ts
  - src/funcs/accountingCustomersGet.ts
  - src/funcs/accountingCustomersList.ts
  - src/funcs/accountingCustomersUpdate.ts
  - src/funcs/accountingDepartmentsCreate.ts
  - src/funcs/accountingDepartmentsDelete.ts
  - src/funcs/accountingDepartmentsGet.ts
  - src/funcs/accountingDepartmentsList.ts
  - src/funcs/accountingDepartmentsUpdate.ts
  - src/funcs/accountingExpensesCreate.ts
  - src/funcs/accountingExpensesDelete.ts
  - src/funcs/accountingExpensesGet.ts
  - src/funcs/accountingExpensesList.ts
  - src/funcs/accountingExpensesUpdate.ts
  - src/funcs/accountingInvoiceItemsCreate.ts
  - src/funcs/accountingInvoiceItemsDelete.ts
  - src/funcs/accountingInvoiceItemsGet.ts
  - src/funcs/accountingInvoiceItemsList.ts
  - src/funcs/accountingInvoiceItemsUpdate.ts
  - src/funcs/accountingInvoicesCreate.ts
  - src/funcs/accountingInvoicesDelete.ts
  - src/funcs/accountingInvoicesGet.ts
  - src/funcs/accountingInvoicesList.ts
  - src/funcs/accountingInvoicesUpdate.ts
  - src/funcs/accountingJournalEntriesCreate.ts
  - src/funcs/accountingJournalEntriesDelete.ts
  - src/funcs/accountingJournalEntriesGet.ts
  - src/funcs/accountingJournalEntriesList.ts
  - src/funcs/accountingJournalEntriesUpdate.ts
  - src/funcs/accountingLedgerAccountsCreate.ts
  - src/funcs/accountingLedgerAccountsDelete.ts
  - src/funcs/accountingLedgerAccountsGet.ts
  - src/funcs/accountingLedgerAccountsList.ts
  - src/funcs/accountingLedgerAccountsUpdate.ts
  - src/funcs/accountingLocationsCreate.ts
  - src/funcs/accountingLocationsDelete.ts
  - src/funcs/accountingLocationsGet.ts
  - src/funcs/accountingLocationsList.ts
  - src/funcs/accountingLocationsUpdate.ts
  - src/funcs/accountingPaymentsCreate.ts
  - src/funcs/accountingPaymentsDelete.ts
  - src/funcs/accountingPaymentsGet.ts
  - src/funcs/accountingPaymentsList.ts
  - src/funcs/accountingPaymentsUpdate.ts
  - src/funcs/accountingProfitAndLossGet.ts
  - src/funcs/accountingPurchaseOrdersCreate.ts
  - src/funcs/accountingPurchaseOrdersDelete.ts
  - src/funcs/accountingPurchaseOrdersGet.ts
  - src/funcs/accountingPurchaseOrdersList.ts
  - src/funcs/accountingPurchaseOrdersUpdate.ts
  - src/funcs/accountingSubsidiariesCreate.ts
  - src/funcs/accountingSubsidiariesDelete.ts
  - src/funcs/accountingSubsidiariesGet.ts
  - src/funcs/accountingSubsidiariesList.ts
  - src/funcs/accountingSubsidiariesUpdate.ts
  - src/funcs/accountingSuppliersCreate.ts
  - src/funcs/accountingSuppliersDelete.ts
  - src/funcs/accountingSuppliersGet.ts
  - src/funcs/accountingSuppliersList.ts
  - src/funcs/accountingSuppliersUpdate.ts
  - src/funcs/accountingTaxRatesCreate.ts
  - src/funcs/accountingTaxRatesDelete.ts
  - src/funcs/accountingTaxRatesGet.ts
  - src/funcs/accountingTaxRatesList.ts
  - src/funcs/accountingTaxRatesUpdate.ts
  - src/funcs/accountingTrackingCategoriesCreate.ts
  - src/funcs/accountingTrackingCategoriesDelete.ts
  - src/funcs/accountingTrackingCategoriesGet.ts
  - src/funcs/accountingTrackingCategoriesList.ts
  - src/funcs/accountingTrackingCategoriesUpdate.ts
  - src/funcs/atsApplicantsCreate.ts
  - src/funcs/atsApplicantsDelete.ts
  - src/funcs/atsApplicantsGet.ts
  - src/funcs/atsApplicantsList.ts
  - src/funcs/atsApplicantsUpdate.ts
  - src/funcs/atsApplicationsCreate.ts
  - src/funcs/atsApplicationsDelete.ts
  - src/funcs/atsApplicationsGet.ts
  - src/funcs/atsApplicationsList.ts
  - src/funcs/atsApplicationsUpdate.ts
  - src/funcs/atsJobsGet.ts
  - src/funcs/atsJobsList.ts
  - src/funcs/connectorApiResourceCoverageGet.ts
  - src/funcs/connectorApiResourcesGet.ts
  - src/funcs/connectorApisGet.ts
  - src/funcs/connectorApisList.ts
  - src/funcs/connectorConnectorDocsGet.ts
  - src/funcs/connectorConnectorResourcesGet.ts
  - src/funcs/connectorConnectorsGet.ts
  - src/funcs/connectorConnectorsList.ts
  - src/funcs/crmActivitiesCreate.ts
  - src/funcs/crmActivitiesDelete.ts
  - src/funcs/crmActivitiesGet.ts
  - src/funcs/crmActivitiesList.ts
  - src/funcs/crmActivitiesUpdate.ts
  - src/funcs/crmCompaniesCreate.ts
  - src/funcs/crmCompaniesDelete.ts
  - src/funcs/crmCompaniesGet.ts
  - src/funcs/crmCompaniesList.ts
  - src/funcs/crmCompaniesUpdate.ts
  - src/funcs/crmContactsCreate.ts
  - src/funcs/crmContactsDelete.ts
  - src/funcs/crmContactsGet.ts
  - src/funcs/crmContactsList.ts
  - src/funcs/crmContactsUpdate.ts
  - src/funcs/crmLeadsCreate.ts
  - src/funcs/crmLeadsDelete.ts
  - src/funcs/crmLeadsGet.ts
  - src/funcs/crmLeadsList.ts
  - src/funcs/crmLeadsUpdate.ts
  - src/funcs/crmNotesCreate.ts
  - src/funcs/crmNotesDelete.ts
  - src/funcs/crmNotesGet.ts
  - src/funcs/crmNotesList.ts
  - src/funcs/crmNotesUpdate.ts
  - src/funcs/crmOpportunitiesCreate.ts
  - src/funcs/crmOpportunitiesDelete.ts
  - src/funcs/crmOpportunitiesGet.ts
  - src/funcs/crmOpportunitiesList.ts
  - src/funcs/crmOpportunitiesUpdate.ts
  - src/funcs/crmPipelinesList.ts
  - src/funcs/crmUsersCreate.ts
  - src/funcs/crmUsersDelete.ts
  - src/funcs/crmUsersGet.ts
  - src/funcs/crmUsersList.ts
  - src/funcs/crmUsersUpdate.ts
  - src/funcs/ecommerceCustomersGet.ts
  - src/funcs/ecommerceCustomersList.ts
  - src/funcs/ecommerceOrdersGet.ts
  - src/funcs/ecommerceOrdersList.ts
  - src/funcs/ecommerceProductsGet.ts
  - src/funcs/ecommerceProductsList.ts
  - src/funcs/ecommerceStoresGet.ts
  - src/funcs/fileStorageDriveGroupsCreate.ts
  - src/funcs/fileStorageDriveGroupsDelete.ts
  - src/funcs/fileStorageDriveGroupsGet.ts
  - src/funcs/fileStorageDriveGroupsList.ts
  - src/funcs/fileStorageDriveGroupsUpdate.ts
  - src/funcs/fileStorageDrivesCreate.ts
  - src/funcs/fileStorageDrivesDelete.ts
  - src/funcs/fileStorageDrivesGet.ts
  - src/funcs/fileStorageDrivesList.ts
  - src/funcs/fileStorageDrivesUpdate.ts
  - src/funcs/fileStorageFilesDelete.ts
  - src/funcs/fileStorageFilesDownload.ts
  - src/funcs/fileStorageFilesExport.ts
  - src/funcs/fileStorageFilesGet.ts
  - src/funcs/fileStorageFilesList.ts
  - src/funcs/fileStorageFilesSearch.ts
  - src/funcs/fileStorageFilesUpdate.ts
  - src/funcs/fileStorageFoldersCopy.ts
  - src/funcs/fileStorageFoldersCreate.ts
  - src/funcs/fileStorageFoldersDelete.ts
  - src/funcs/fileStorageFoldersGet.ts
  - src/funcs/fileStorageFoldersUpdate.ts
  - src/funcs/fileStorageSharedLinksCreate.ts
  - src/funcs/fileStorageSharedLinksDelete.ts
  - src/funcs/fileStorageSharedLinksGet.ts
  - src/funcs/fileStorageSharedLinksList.ts
  - src/funcs/fileStorageSharedLinksUpdate.ts
  - src/funcs/fileStorageUploadSessionsCreate.ts
  - src/funcs/fileStorageUploadSessionsDelete.ts
  - src/funcs/fileStorageUploadSessionsFinish.ts
  - src/funcs/fileStorageUploadSessionsGet.ts
  - src/funcs/hrisCompaniesCreate.ts
  - src/funcs/hrisCompaniesDelete.ts
  - src/funcs/hrisCompaniesGet.ts
  - src/funcs/hrisCompaniesList.ts
  - src/funcs/hrisCompaniesUpdate.ts
  - src/funcs/hrisDepartmentsCreate.ts
  - src/funcs/hrisDepartmentsDelete.ts
  - src/funcs/hrisDepartmentsGet.ts
  - src/funcs/hrisDepartmentsList.ts
  - src/funcs/hrisDepartmentsUpdate.ts
  - src/funcs/hrisEmployeePayrollsGet.ts
  - src/funcs/hrisEmployeePayrollsList.ts
  - src/funcs/hrisEmployeeSchedulesList.ts
  - src/funcs/hrisEmployeesCreate.ts
  - src/funcs/hrisEmployeesDelete.ts
  - src/funcs/hrisEmployeesGet.ts
  - src/funcs/hrisEmployeesList.ts
  - src/funcs/hrisEmployeesUpdate.ts
  - src/funcs/hrisPayrollsGet.ts
  - src/funcs/hrisPayrollsList.ts
  - src/funcs/hrisTimeOffRequestsCreate.ts
  - src/funcs/hrisTimeOffRequestsDelete.ts
  - src/funcs/hrisTimeOffRequestsGet.ts
  - src/funcs/hrisTimeOffRequestsList.ts
  - src/funcs/hrisTimeOffRequestsUpdate.ts
  - src/funcs/issueTrackingCollectionTagsList.ts
  - src/funcs/issueTrackingCollectionTicketCommentsCreate.ts
  - src/funcs/issueTrackingCollectionTicketCommentsDelete.ts
  - src/funcs/issueTrackingCollectionTicketCommentsGet.ts
  - src/funcs/issueTrackingCollectionTicketCommentsList.ts
  - src/funcs/issueTrackingCollectionTicketCommentsUpdate.ts
  - src/funcs/issueTrackingCollectionTicketsCreate.ts
  - src/funcs/issueTrackingCollectionTicketsDelete.ts
  - src/funcs/issueTrackingCollectionTicketsGet.ts
  - src/funcs/issueTrackingCollectionTicketsList.ts
  - src/funcs/issueTrackingCollectionTicketsUpdate.ts
  - src/funcs/issueTrackingCollectionUsersGet.ts
  - src/funcs/issueTrackingCollectionUsersList.ts
  - src/funcs/issueTrackingCollectionsGet.ts
  - src/funcs/issueTrackingCollectionsList.ts
  - src/funcs/smsMessagesCreate.ts
  - src/funcs/smsMessagesDelete.ts
  - src/funcs/smsMessagesGet.ts
  - src/funcs/smsMessagesList.ts
  - src/funcs/smsMessagesUpdate.ts
  - src/funcs/vaultConnectionCustomMappingsList.ts
  - src/funcs/vaultConnectionSettingsList.ts
  - src/funcs/vaultConnectionSettingsUpdate.ts
  - src/funcs/vaultConnectionsDelete.ts
  - src/funcs/vaultConnectionsGet.ts
  - src/funcs/vaultConnectionsImports.ts
  - src/funcs/vaultConnectionsList.ts
  - src/funcs/vaultConnectionsToken.ts
  - src/funcs/vaultConnectionsUpdate.ts
  - src/funcs/vaultConsumerRequestCountsList.ts
  - src/funcs/vaultConsumersCreate.ts
  - src/funcs/vaultConsumersDelete.ts
  - src/funcs/vaultConsumersGet.ts
  - src/funcs/vaultConsumersList.ts
  - src/funcs/vaultConsumersUpdate.ts
  - src/funcs/vaultCreateCallbackState.ts
  - src/funcs/vaultCustomFieldsList.ts
  - src/funcs/vaultCustomMappingsList.ts
  - src/funcs/vaultLogsList.ts
  - src/funcs/vaultSessionsCreate.ts
  - src/funcs/vaultValidateConnectionState.ts
  - src/funcs/webhookEventLogsList.ts
  - src/funcs/webhookWebhooksCreate.ts
  - src/funcs/webhookWebhooksDelete.ts
  - src/funcs/webhookWebhooksGet.ts
  - src/funcs/webhookWebhooksList.ts
  - src/funcs/webhookWebhooksUpdate.ts
  - src/hooks/hooks.ts
  - src/hooks/index.ts
  - src/hooks/types.ts
  - src/index.ts
  - src/lib/base64.ts
  - src/lib/config.ts
  - src/lib/dlv.ts
  - src/lib/encodings.ts
  - src/lib/env.ts
  - src/lib/files.ts
  - src/lib/http.ts
  - src/lib/is-plain-object.ts
  - src/lib/logger.ts
  - src/lib/matchers.ts
  - src/lib/primitives.ts
  - src/lib/retries.ts
  - src/lib/schemas.ts
  - src/lib/sdks.ts
  - src/lib/security.ts
  - src/lib/url.ts
  - src/models/components/accountingdepartment.ts
  - src/models/components/accountingdepartmentsfilter.ts
  - src/models/components/accountinglocation.ts
  - src/models/components/accountinglocationsfilter.ts
  - src/models/components/activitiesfilter.ts
  - src/models/components/activitiessort.ts
  - src/models/components/activity.ts
  - src/models/components/activityattendee.ts
  - src/models/components/address.ts
  - src/models/components/ageddebtors.ts
  - src/models/components/agedreportfilter.ts
  - src/models/components/allocation.ts
  - src/models/components/api.ts
  - src/models/components/apiresource.ts
  - src/models/components/apiresourcecoverage.ts
  - src/models/components/apisfilter.ts
  - src/models/components/apistatus.ts
  - src/models/components/applicant.ts
  - src/models/components/applicantsfilter.ts
  - src/models/components/application.ts
  - src/models/components/assignee.ts
  - src/models/components/assigneeinput.ts
  - src/models/components/attachment.ts
  - src/models/components/attachmentreference.ts
  - src/models/components/attachmentreferencetype.ts
  - src/models/components/authtype.ts
  - src/models/components/balancebyperiod.ts
  - src/models/components/balancebytransaction.ts
  - src/models/components/balancesheet.ts
  - src/models/components/balancesheetfilter.ts
  - src/models/components/bankaccount.ts
  - src/models/components/benefit.ts
  - src/models/components/bill.ts
  - src/models/components/billlineitem.ts
  - src/models/components/billpayment.ts
  - src/models/components/billsfilter.ts
  - src/models/components/billssort.ts
  - src/models/components/collection.ts
  - src/models/components/collectionssort.ts
  - src/models/components/collectiontag.ts
  - src/models/components/collectiontaginput.ts
  - src/models/components/collectionticketcomment.ts
  - src/models/components/collectionticketcommentinput.ts
  - src/models/components/collectionuser.ts
  - src/models/components/commentssort.ts
  - src/models/components/companiesfilter.ts
  - src/models/components/companiessort.ts
  - src/models/components/company.ts
  - src/models/components/companyinfo.ts
  - src/models/components/compensation.ts
  - src/models/components/connection.ts
  - src/models/components/connectionimportdata.ts
  - src/models/components/connectionstate.ts
  - src/models/components/connector.ts
  - src/models/components/connectordoc.ts
  - src/models/components/connectorevent.ts
  - src/models/components/connectorresource.ts
  - src/models/components/connectorsetting.ts
  - src/models/components/connectorsfilter.ts
  - src/models/components/connectorstatus.ts
  - src/models/components/consumer.ts
  - src/models/components/consumerconnection.ts
  - src/models/components/consumerinput.ts
  - src/models/components/consumermetadata.ts
  - src/models/components/consumerrequestcountsindaterangeresponse.ts
  - src/models/components/contact.ts
  - src/models/components/contactsfilter.ts
  - src/models/components/contactssort.ts
  - src/models/components/copyfolderrequest.ts
  - src/models/components/createaccountingdepartmentresponse.ts
  - src/models/components/createaccountinglocationresponse.ts
  - src/models/components/createactivityresponse.ts
  - src/models/components/createapplicantresponse.ts
  - src/models/components/createapplicationresponse.ts
  - src/models/components/createbillpaymentresponse.ts
  - src/models/components/createbillresponse.ts
  - src/models/components/createcallbackstate.ts
  - src/models/components/createcallbackstateresponse.ts
  - src/models/components/createcommentresponse.ts
  - src/models/components/createcompanyresponse.ts
  - src/models/components/createconnectionresponse.ts
  - src/models/components/createconsumerresponse.ts
  - src/models/components/createcontactresponse.ts
  - src/models/components/createcreditnoteresponse.ts
  - src/models/components/createcustomerresponse.ts
  - src/models/components/createdepartmentresponse.ts
  - src/models/components/createdrivegroupresponse.ts
  - src/models/components/createdriveresponse.ts
  - src/models/components/createemployeeresponse.ts
  - src/models/components/createexpenseresponse.ts
  - src/models/components/createfolderrequest.ts
  - src/models/components/createfolderresponse.ts
  - src/models/components/createhriscompanyresponse.ts
  - src/models/components/createinvoiceitemresponse.ts
  - src/models/components/createinvoiceresponse.ts
  - src/models/components/createjournalentryresponse.ts
  - src/models/components/createleadresponse.ts
  - src/models/components/createledgeraccountresponse.ts
  - src/models/components/createmessageresponse.ts
  - src/models/components/createnoteresponse.ts
  - src/models/components/createopportunityresponse.ts
  - src/models/components/createpaymentresponse.ts
  - src/models/components/createpurchaseorderresponse.ts
  - src/models/components/createsessionresponse.ts
  - src/models/components/createsharedlinkresponse.ts
  - src/models/components/createsubsidiaryresponse.ts
  - src/models/components/createsupplierresponse.ts
  - src/models/components/createtaxrateresponse.ts
  - src/models/components/createticketresponse.ts
  - src/models/components/createtimeoffrequestresponse.ts
  - src/models/components/createtrackingcategoryresponse.ts
  - src/models/components/createuploadsessionrequest.ts
  - src/models/components/createuploadsessionresponse.ts
  - src/models/components/createuserresponse.ts
  - src/models/components/createwebhookrequest.ts
  - src/models/components/createwebhookresponse.ts
  - src/models/components/creditnote.ts
  - src/models/components/creditnotesfilter.ts
  - src/models/components/creditnotessort.ts
  - src/models/components/currency.ts
  - src/models/components/customer.ts
  - src/models/components/customersfilter.ts
  - src/models/components/customerssort.ts
  - src/models/components/customfield.ts
  - src/models/components/customfieldfinder.ts
  - src/models/components/custommapping.ts
  - src/models/components/custommappinginput.ts
  - src/models/components/custommappings.ts
  - src/models/components/deduction.ts
  - src/models/components/deleteaccountingdepartmentresponse.ts
  - src/models/components/deleteaccountinglocationresponse.ts
  - src/models/components/deleteactivityresponse.ts
  - src/models/components/deleteapplicantresponse.ts
  - src/models/components/deleteapplicationresponse.ts
  - src/models/components/deleteattachmentresponse.ts
  - src/models/components/deletebillpaymentresponse.ts
  - src/models/components/deletebillresponse.ts
  - src/models/components/deletecommentresponse.ts
  - src/models/components/deletecompanyresponse.ts
  - src/models/components/deleteconsumerresponse.ts
  - src/models/components/deletecontactresponse.ts
  - src/models/components/deletecreditnoteresponse.ts
  - src/models/components/deletecustomerresponse.ts
  - src/models/components/deletedepartmentresponse.ts
  - src/models/components/deletedrivegroupresponse.ts
  - src/models/components/deletedriveresponse.ts
  - src/models/components/deleteemployeeresponse.ts
  - src/models/components/deleteexpenseresponse.ts
  - src/models/components/deletefileresponse.ts
  - src/models/components/deletefolderresponse.ts
  - src/models/components/deletehriscompanyresponse.ts
  - src/models/components/deleteinvoiceresponse.ts
  - src/models/components/deletejournalentryresponse.ts
  - src/models/components/deleteleadresponse.ts
  - src/models/components/deleteledgeraccountresponse.ts
  - src/models/components/deletemessageresponse.ts
  - src/models/components/deletenoteresponse.ts
  - src/models/components/deleteopportunityresponse.ts
  - src/models/components/deletepaymentresponse.ts
  - src/models/components/deletepurchaseorderresponse.ts
  - src/models/components/deletesharedlinkresponse.ts
  - src/models/components/deletesubsidiaryresponse.ts
  - src/models/components/deletesupplierresponse.ts
  - src/models/components/deletetaxrateresponse.ts
  - src/models/components/deleteticketresponse.ts
  - src/models/components/deletetimeoffrequestresponse.ts
  - src/models/components/deletetrackingcategoryresponse.ts
  - src/models/components/deleteuploadsessionresponse.ts
  - src/models/components/deleteuserresponse.ts
  - src/models/components/deletewebhookresponse.ts
  - src/models/components/department.ts
  - src/models/components/departmentinput.ts
  - src/models/components/deprecatedlinkedsupplier.ts
  - src/models/components/deprecatedlinkedsupplierinput.ts
  - src/models/components/deprecatedlinkedtrackingcategory.ts
  - src/models/components/drive.ts
  - src/models/components/drivegroup.ts
  - src/models/components/drivegroupinput.ts
  - src/models/components/drivegroupsfilter.ts
  - src/models/components/driveinput.ts
  - src/models/components/drivesfilter.ts
  - src/models/components/ecommerceaddress.ts
  - src/models/components/ecommercecustomer.ts
  - src/models/components/ecommercecustomersfilter.ts
  - src/models/components/ecommercediscount.ts
  - src/models/components/ecommerceorder.ts
  - src/models/components/ecommerceorderlineitem.ts
  - src/models/components/ecommerceordersfilter.ts
  - src/models/components/ecommerceorderstatus.ts
  - src/models/components/ecommerceproduct.ts
  - src/models/components/ecommercestore.ts
  - src/models/components/email.ts
  - src/models/components/employee.ts
  - src/models/components/employeecompensation.ts
  - src/models/components/employeejob.ts
  - src/models/components/employeepayroll.ts
  - src/models/components/employeeschedules.ts
  - src/models/components/employeesfilter.ts
  - src/models/components/employeesonefilter.ts
  - src/models/components/employeessort.ts
  - src/models/components/employmentstatus.ts
  - src/models/components/expense.ts
  - src/models/components/expenselineitem.ts
  - src/models/components/expenselineiteminput.ts
  - src/models/components/filesfilter.ts
  - src/models/components/filessearch.ts
  - src/models/components/filessort.ts
  - src/models/components/filetype.ts
  - src/models/components/folder.ts
  - src/models/components/formfield.ts
  - src/models/components/formfieldoption.ts
  - src/models/components/formfieldoptiongroup.ts
  - src/models/components/gender.ts
  - src/models/components/getaccountingdepartmentresponse.ts
  - src/models/components/getaccountingdepartmentsresponse.ts
  - src/models/components/getaccountinglocationresponse.ts
  - src/models/components/getaccountinglocationsresponse.ts
  - src/models/components/getactivitiesresponse.ts
  - src/models/components/getactivityresponse.ts
  - src/models/components/getageddebtorsresponse.ts
  - src/models/components/getapiresourcecoverageresponse.ts
  - src/models/components/getapiresourceresponse.ts
  - src/models/components/getapiresponse.ts
  - src/models/components/getapisresponse.ts
  - src/models/components/getapplicantresponse.ts
  - src/models/components/getapplicantsresponse.ts
  - src/models/components/getapplicationresponse.ts
  - src/models/components/getapplicationsresponse.ts
  - src/models/components/getattachmentresponse.ts
  - src/models/components/getattachmentsresponse.ts
  - src/models/components/getbalancesheetresponse.ts
  - src/models/components/getbillpaymentresponse.ts
  - src/models/components/getbillpaymentsresponse.ts
  - src/models/components/getbillresponse.ts
  - src/models/components/getbillsresponse.ts
  - src/models/components/getcollectionresponse.ts
  - src/models/components/getcollectionsresponse.ts
  - src/models/components/getcollectiontagsresponse.ts
  - src/models/components/getcollectionuserresponse.ts
  - src/models/components/getcollectionusersresponse.ts
  - src/models/components/getcommentresponse.ts
  - src/models/components/getcommentsresponse.ts
  - src/models/components/getcompaniesresponse.ts
  - src/models/components/getcompanyinforesponse.ts
  - src/models/components/getcompanyresponse.ts
  - src/models/components/getconnectionresponse.ts
  - src/models/components/getconnectionsresponse.ts
  - src/models/components/getconnectorresourceresponse.ts
  - src/models/components/getconnectorresponse.ts
  - src/models/components/getconnectorsresponse.ts
  - src/models/components/getconsumerresponse.ts
  - src/models/components/getconsumersresponse.ts
  - src/models/components/getcontactresponse.ts
  - src/models/components/getcontactsresponse.ts
  - src/models/components/getcreditnoteresponse.ts
  - src/models/components/getcreditnotesresponse.ts
  - src/models/components/getcustomerresponse.ts
  - src/models/components/getcustomersresponse.ts
  - src/models/components/getcustomfieldsresponse.ts
  - src/models/components/getcustommappingsresponse.ts
  - src/models/components/getdepartmentresponse.ts
  - src/models/components/getdepartmentsresponse.ts
  - src/models/components/getdrivegroupresponse.ts
  - src/models/components/getdrivegroupsresponse.ts
  - src/models/components/getdriveresponse.ts
  - src/models/components/getdrivesresponse.ts
  - src/models/components/getecommercecustomerresponse.ts
  - src/models/components/getecommercecustomersresponse.ts
  - src/models/components/getecommerceorderresponse.ts
  - src/models/components/getecommerceordersresponse.ts
  - src/models/components/getemployeepayrollresponse.ts
  - src/models/components/getemployeepayrollsresponse.ts
  - src/models/components/getemployeeresponse.ts
  - src/models/components/getemployeeschedulesresponse.ts
  - src/models/components/getemployeesresponse.ts
  - src/models/components/getexpenseresponse.ts
  - src/models/components/getexpensesresponse.ts
  - src/models/components/getfileresponse.ts
  - src/models/components/getfilesresponse.ts
  - src/models/components/getfolderresponse.ts
  - src/models/components/gethriscompaniesresponse.ts
  - src/models/components/gethriscompanyresponse.ts
  - src/models/components/getinvoiceitemresponse.ts
  - src/models/components/getinvoiceitemsresponse.ts
  - src/models/components/getinvoiceresponse.ts
  - src/models/components/getinvoicesresponse.ts
  - src/models/components/getjobresponse.ts
  - src/models/components/getjobsresponse.ts
  - src/models/components/getjournalentriesresponse.ts
  - src/models/components/getjournalentryresponse.ts
  - src/models/components/getleadresponse.ts
  - src/models/components/getleadsresponse.ts
  - src/models/components/getledgeraccountresponse.ts
  - src/models/components/getledgeraccountsresponse.ts
  - src/models/components/getlogsresponse.ts
  - src/models/components/getmessageresponse.ts
  - src/models/components/getmessagesresponse.ts
  - src/models/components/getnoteresponse.ts
  - src/models/components/getnotesresponse.ts
  - src/models/components/getopportunitiesresponse.ts
  - src/models/components/getopportunityresponse.ts
  - src/models/components/getpaymentresponse.ts
  - src/models/components/getpaymentsresponse.ts
  - src/models/components/getpayrollresponse.ts
  - src/models/components/getpayrollsresponse.ts
  - src/models/components/getpipelinesresponse.ts
  - src/models/components/getproductresponse.ts
  - src/models/components/getproductsresponse.ts
  - src/models/components/getprofitandlossresponse.ts
  - src/models/components/getpurchaseorderresponse.ts
  - src/models/components/getpurchaseordersresponse.ts
  - src/models/components/getsharedlinkresponse.ts
  - src/models/components/getsharedlinksresponse.ts
  - src/models/components/getstoreresponse.ts
  - src/models/components/getsubsidiariesresponse.ts
  - src/models/components/getsubsidiaryresponse.ts
  - src/models/components/getsupplierresponse.ts
  - src/models/components/getsuppliersresponse.ts
  - src/models/components/gettaxrateresponse.ts
  - src/models/components/gettaxratesresponse.ts
  - src/models/components/getticketresponse.ts
  - src/models/components/getticketsresponse.ts
  - src/models/components/gettimeoffrequestresponse.ts
  - src/models/components/gettimeoffrequestsresponse.ts
  - src/models/components/gettrackingcategoriesresponse.ts
  - src/models/components/gettrackingcategoryresponse.ts
  - src/models/components/getuploadsessionresponse.ts
  - src/models/components/getuserresponse.ts
  - src/models/components/getusersresponse.ts
  - src/models/components/getwebhookeventlogsresponse.ts
  - src/models/components/getwebhookresponse.ts
  - src/models/components/getwebhooksresponse.ts
  - src/models/components/hriscompany.ts
  - src/models/components/httpmetadata.ts
  - src/models/components/index.ts
  - src/models/components/integrationstate.ts
  - src/models/components/invoice.ts
  - src/models/components/invoiceitem.ts
  - src/models/components/invoiceitemfilter.ts
  - src/models/components/invoiceitemsfilter.ts
  - src/models/components/invoicelineitem.ts
  - src/models/components/invoiceresponse.ts
  - src/models/components/invoicesfilter.ts
  - src/models/components/invoicessort.ts
  - src/models/components/issuesfilter.ts
  - src/models/components/job.ts
  - src/models/components/jobstatus.ts
  - src/models/components/journalentriesfilter.ts
  - src/models/components/journalentriessort.ts
  - src/models/components/journalentry.ts
  - src/models/components/journalentryinput.ts
  - src/models/components/journalentrylineitem.ts
  - src/models/components/lead.ts
  - src/models/components/leadinput.ts
  - src/models/components/leadsfilter.ts
  - src/models/components/leadssort.ts
  - src/models/components/ledgeraccount.ts
  - src/models/components/ledgeraccountsfilter.ts
  - src/models/components/ledgeraccountssort.ts
  - src/models/components/linkedconnectorresource.ts
  - src/models/components/linkedcustomer.ts
  - src/models/components/linkedcustomerinput.ts
  - src/models/components/linkedecommercecustomer.ts
  - src/models/components/linkedecommerceorder.ts
  - src/models/components/linkedfolder.ts
  - src/models/components/linkedinvoiceitem.ts
  - src/models/components/linkedledgeraccount.ts
  - src/models/components/linkedledgeraccountinput.ts
  - src/models/components/linkedparentcustomer.ts
  - src/models/components/linkedsupplier.ts
  - src/models/components/linkedsupplierinput.ts
  - src/models/components/linkedtaxrate.ts
  - src/models/components/linkedtaxrateinput.ts
  - src/models/components/linkedtrackingcategory.ts
  - src/models/components/links.ts
  - src/models/components/log.ts
  - src/models/components/logsfilter.ts
  - src/models/components/message.ts
  - src/models/components/meta.ts
  - src/models/components/note.ts
  - src/models/components/noteinput.ts
  - src/models/components/oauthgranttype.ts
  - src/models/components/opportunitiesfilter.ts
  - src/models/components/opportunitiessort.ts
  - src/models/components/opportunity.ts
  - src/models/components/opportunityinput.ts
  - src/models/components/orderssort.ts
  - src/models/components/outstandingbalancebycurrency.ts
  - src/models/components/outstandingbalancebycustomer.ts
  - src/models/components/owner.ts
  - src/models/components/paginationcoverage.ts
  - src/models/components/passthroughbody.ts
  - src/models/components/payment.ts
  - src/models/components/paymentfrequency.ts
  - src/models/components/paymentinput.ts
  - src/models/components/paymentsfilter.ts
  - src/models/components/paymentssort.ts
  - src/models/components/paymentstatus.ts
  - src/models/components/paymenttype.ts
  - src/models/components/paymentunit.ts
  - src/models/components/payroll.ts
  - src/models/components/payrollsfilter.ts
  - src/models/components/payrolltotals.ts
  - src/models/components/person.ts
  - src/models/components/personinput.ts
  - src/models/components/phonenumber.ts
  - src/models/components/pipeline.ts
  - src/models/components/profitandloss.ts
  - src/models/components/profitandlossfilter.ts
  - src/models/components/purchaseorder.ts
  - src/models/components/purchaseordersfilter.ts
  - src/models/components/purchaseorderssort.ts
  - src/models/components/requestcountallocation.ts
  - src/models/components/resourcestatus.ts
  - src/models/components/schedule.ts
  - src/models/components/schemasupport.ts
  - src/models/components/security.ts
  - src/models/components/session.ts
  - src/models/components/sharedlink.ts
  - src/models/components/sharedlinktarget.ts
  - src/models/components/simpleformfieldoption.ts
  - src/models/components/sociallink.ts
  - src/models/components/sortdirection.ts
  - src/models/components/status.ts
  - src/models/components/subsidiary.ts
  - src/models/components/subsidiaryreference.ts
  - src/models/components/subsidiaryreferenceinput.ts
  - src/models/components/supplier.ts
  - src/models/components/suppliersfilter.ts
  - src/models/components/supplierssort.ts
  - src/models/components/supportedproperty.ts
  - src/models/components/tax.ts
  - src/models/components/taxrate.ts
  - src/models/components/taxratesfilter.ts
  - src/models/components/team.ts
  - src/models/components/ticket.ts
  - src/models/components/ticketssort.ts
  - src/models/components/timeoffrequest.ts
  - src/models/components/timeoffrequestsfilter.ts
  - src/models/components/trackingcategory.ts
  - src/models/components/trackingitem.ts
  - src/models/components/unexpectederrorresponse.ts
  - src/models/components/unifiedapiid.ts
  - src/models/components/unifiedfile.ts
  - src/models/components/unifiedid.ts
  - src/models/components/updateaccountingdepartmentresponse.ts
  - src/models/components/updateaccountinglocationresponse.ts
  - src/models/components/updateactivityresponse.ts
  - src/models/components/updateapplicantresponse.ts
  - src/models/components/updateapplicationresponse.ts
  - src/models/components/updatebillpaymentresponse.ts
  - src/models/components/updatebillresponse.ts
  - src/models/components/updatecommentresponse.ts
  - src/models/components/updatecompanyresponse.ts
  - src/models/components/updateconnectionresponse.ts
  - src/models/components/updateconsumerrequest.ts
  - src/models/components/updateconsumerresponse.ts
  - src/models/components/updatecontactresponse.ts
  - src/models/components/updatecreditnoteresponse.ts
  - src/models/components/updatecustomerresponse.ts
  - src/models/components/updatedepartmentresponse.ts
  - src/models/components/updatedrivegroupresponse.ts
  - src/models/components/updatedriveresponse.ts
  - src/models/components/updateemployeeresponse.ts
  - src/models/components/updateexpenseresponse.ts
  - src/models/components/updatefilerequest.ts
  - src/models/components/updatefileresponse.ts
  - src/models/components/updatefolderrequest.ts
  - src/models/components/updatefolderresponse.ts
  - src/models/components/updatehriscompanyresponse.ts
  - src/models/components/updateinvoiceitemsresponse.ts
  - src/models/components/updateinvoiceresponse.ts
  - src/models/components/updatejournalentryresponse.ts
  - src/models/components/updateleadresponse.ts
  - src/models/components/updateledgeraccountresponse.ts
  - src/models/components/updatemessageresponse.ts
  - src/models/components/updatenoteresponse.ts
  - src/models/components/updateopportunityresponse.ts
  - src/models/components/updatepaymentresponse.ts
  - src/models/components/updatepurchaseorderresponse.ts
  - src/models/components/updatesharedlinkresponse.ts
  - src/models/components/updatesubsidiaryresponse.ts
  - src/models/components/updatesupplierresponse.ts
  - src/models/components/updatetaxrateresponse.ts
  - src/models/components/updateticketresponse.ts
  - src/models/components/updatetimeoffrequestresponse.ts
  - src/models/components/updatetrackingcategoryresponse.ts
  - src/models/components/updateuserresponse.ts
  - src/models/components/updatewebhookrequest.ts
  - src/models/components/updatewebhookresponse.ts
  - src/models/components/uploadsession.ts
  - src/models/components/user.ts
  - src/models/components/userinput.ts
  - src/models/components/validateconnectionstateresponse.ts
  - src/models/components/webhook.ts
  - src/models/components/webhookeventlog.ts
  - src/models/components/webhookeventlogsfilter.ts
  - src/models/components/webhookeventtype.ts
  - src/models/components/webhooksubscription.ts
  - src/models/components/webhooksupport.ts
  - src/models/components/website.ts
  - src/models/errors/apierror.ts
  - src/models/errors/badrequestresponse.ts
  - src/models/errors/httpclienterrors.ts
  - src/models/errors/index.ts
  - src/models/errors/notfoundresponse.ts
  - src/models/errors/paymentrequiredresponse.ts
  - src/models/errors/sdkvalidationerror.ts
  - src/models/errors/unauthorizedresponse.ts
  - src/models/errors/unprocessableresponse.ts
  - src/models/operations/accountingageddebtorsone.ts
  - src/models/operations/accountingattachmentsall.ts
  - src/models/operations/accountingattachmentsdelete.ts
  - src/models/operations/accountingattachmentsdownload.ts
  - src/models/operations/accountingattachmentsone.ts
  - src/models/operations/accountingbalancesheetone.ts
  - src/models/operations/accountingbillpaymentsadd.ts
  - src/models/operations/accountingbillpaymentsall.ts
  - src/models/operations/accountingbillpaymentsdelete.ts
  - src/models/operations/accountingbillpaymentsone.ts
  - src/models/operations/accountingbillpaymentsupdate.ts
  - src/models/operations/accountingbillsadd.ts
  - src/models/operations/accountingbillsall.ts
  - src/models/operations/accountingbillsdelete.ts
  - src/models/operations/accountingbillsone.ts
  - src/models/operations/accountingbillsupdate.ts
  - src/models/operations/accountingcompanyinfoone.ts
  - src/models/operations/accountingcreditnotesadd.ts
  - src/models/operations/accountingcreditnotesall.ts
  - src/models/operations/accountingcreditnotesdelete.ts
  - src/models/operations/accountingcreditnotesone.ts
  - src/models/operations/accountingcreditnotesupdate.ts
  - src/models/operations/accountingcustomersadd.ts
  - src/models/operations/accountingcustomersall.ts
  - src/models/operations/accountingcustomersdelete.ts
  - src/models/operations/accountingcustomersone.ts
  - src/models/operations/accountingcustomersupdate.ts
  - src/models/operations/accountingdepartmentsadd.ts
  - src/models/operations/accountingdepartmentsall.ts
  - src/models/operations/accountingdepartmentsdelete.ts
  - src/models/operations/accountingdepartmentsone.ts
  - src/models/operations/accountingdepartmentsupdate.ts
  - src/models/operations/accountingexpensesadd.ts
  - src/models/operations/accountingexpensesall.ts
  - src/models/operations/accountingexpensesdelete.ts
  - src/models/operations/accountingexpensesone.ts
  - src/models/operations/accountingexpensesupdate.ts
  - src/models/operations/accountinginvoiceitemsadd.ts
  - src/models/operations/accountinginvoiceitemsall.ts
  - src/models/operations/accountinginvoiceitemsdelete.ts
  - src/models/operations/accountinginvoiceitemsone.ts
  - src/models/operations/accountinginvoiceitemsupdate.ts
  - src/models/operations/accountinginvoicesadd.ts
  - src/models/operations/accountinginvoicesall.ts
  - src/models/operations/accountinginvoicesdelete.ts
  - src/models/operations/accountinginvoicesone.ts
  - src/models/operations/accountinginvoicesupdate.ts
  - src/models/operations/accountingjournalentriesadd.ts
  - src/models/operations/accountingjournalentriesall.ts
  - src/models/operations/accountingjournalentriesdelete.ts
  - src/models/operations/accountingjournalentriesone.ts
  - src/models/operations/accountingjournalentriesupdate.ts
  - src/models/operations/accountingledgeraccountsadd.ts
  - src/models/operations/accountingledgeraccountsall.ts
  - src/models/operations/accountingledgeraccountsdelete.ts
  - src/models/operations/accountingledgeraccountsone.ts
  - src/models/operations/accountingledgeraccountsupdate.ts
  - src/models/operations/accountinglocationsadd.ts
  - src/models/operations/accountinglocationsall.ts
  - src/models/operations/accountinglocationsdelete.ts
  - src/models/operations/accountinglocationsone.ts
  - src/models/operations/accountinglocationsupdate.ts
  - src/models/operations/accountingpaymentsadd.ts
  - src/models/operations/accountingpaymentsall.ts
  - src/models/operations/accountingpaymentsdelete.ts
  - src/models/operations/accountingpaymentsone.ts
  - src/models/operations/accountingpaymentsupdate.ts
  - src/models/operations/accountingprofitandlossone.ts
  - src/models/operations/accountingpurchaseordersadd.ts
  - src/models/operations/accountingpurchaseordersall.ts
  - src/models/operations/accountingpurchaseordersdelete.ts
  - src/models/operations/accountingpurchaseordersone.ts
  - src/models/operations/accountingpurchaseordersupdate.ts
  - src/models/operations/accountingsubsidiariesadd.ts
  - src/models/operations/accountingsubsidiariesall.ts
  - src/models/operations/accountingsubsidiariesdelete.ts
  - src/models/operations/accountingsubsidiariesone.ts
  - src/models/operations/accountingsubsidiariesupdate.ts
  - src/models/operations/accountingsuppliersadd.ts
  - src/models/operations/accountingsuppliersall.ts
  - src/models/operations/accountingsuppliersdelete.ts
  - src/models/operations/accountingsuppliersone.ts
  - src/models/operations/accountingsuppliersupdate.ts
  - src/models/operations/accountingtaxratesadd.ts
  - src/models/operations/accountingtaxratesall.ts
  - src/models/operations/accountingtaxratesdelete.ts
  - src/models/operations/accountingtaxratesone.ts
  - src/models/operations/accountingtaxratesupdate.ts
  - src/models/operations/accountingtrackingcategoriesadd.ts
  - src/models/operations/accountingtrackingcategoriesall.ts
  - src/models/operations/accountingtrackingcategoriesdelete.ts
  - src/models/operations/accountingtrackingcategoriesone.ts
  - src/models/operations/accountingtrackingcategoriesupdate.ts
  - src/models/operations/atsapplicantsadd.ts
  - src/models/operations/atsapplicantsall.ts
  - src/models/operations/atsapplicantsdelete.ts
  - src/models/operations/atsapplicantsone.ts
  - src/models/operations/atsapplicantsupdate.ts
  - src/models/operations/atsapplicationsadd.ts
  - src/models/operations/atsapplicationsall.ts
  - src/models/operations/atsapplicationsdelete.ts
  - src/models/operations/atsapplicationsone.ts
  - src/models/operations/atsapplicationsupdate.ts
  - src/models/operations/atsjobsall.ts
  - src/models/operations/atsjobsone.ts
  - src/models/operations/connectorapiresourcecoverageone.ts
  - src/models/operations/connectorapiresourcesone.ts
  - src/models/operations/connectorapisall.ts
  - src/models/operations/connectorapisone.ts
  - src/models/operations/connectorconnectordocsone.ts
  - src/models/operations/connectorconnectorresourcesone.ts
  - src/models/operations/connectorconnectorsall.ts
  - src/models/operations/connectorconnectorsone.ts
  - src/models/operations/crmactivitiesadd.ts
  - src/models/operations/crmactivitiesall.ts
  - src/models/operations/crmactivitiesdelete.ts
  - src/models/operations/crmactivitiesone.ts
  - src/models/operations/crmactivitiesupdate.ts
  - src/models/operations/crmcompaniesadd.ts
  - src/models/operations/crmcompaniesall.ts
  - src/models/operations/crmcompaniesdelete.ts
  - src/models/operations/crmcompaniesone.ts
  - src/models/operations/crmcompaniesupdate.ts
  - src/models/operations/crmcontactsadd.ts
  - src/models/operations/crmcontactsall.ts
  - src/models/operations/crmcontactsdelete.ts
  - src/models/operations/crmcontactsone.ts
  - src/models/operations/crmcontactsupdate.ts
  - src/models/operations/crmleadsadd.ts
  - src/models/operations/crmleadsall.ts
  - src/models/operations/crmleadsdelete.ts
  - src/models/operations/crmleadsone.ts
  - src/models/operations/crmleadsupdate.ts
  - src/models/operations/crmnotesadd.ts
  - src/models/operations/crmnotesall.ts
  - src/models/operations/crmnotesdelete.ts
  - src/models/operations/crmnotesone.ts
  - src/models/operations/crmnotesupdate.ts
  - src/models/operations/crmopportunitiesadd.ts
  - src/models/operations/crmopportunitiesall.ts
  - src/models/operations/crmopportunitiesdelete.ts
  - src/models/operations/crmopportunitiesone.ts
  - src/models/operations/crmopportunitiesupdate.ts
  - src/models/operations/crmpipelinesall.ts
  - src/models/operations/crmusersadd.ts
  - src/models/operations/crmusersall.ts
  - src/models/operations/crmusersdelete.ts
  - src/models/operations/crmusersone.ts
  - src/models/operations/crmusersupdate.ts
  - src/models/operations/ecommercecustomersall.ts
  - src/models/operations/ecommercecustomersone.ts
  - src/models/operations/ecommerceordersall.ts
  - src/models/operations/ecommerceordersone.ts
  - src/models/operations/ecommerceproductsall.ts
  - src/models/operations/ecommerceproductsone.ts
  - src/models/operations/ecommercestoresone.ts
  - src/models/operations/filestoragedrivegroupsadd.ts
  - src/models/operations/filestoragedrivegroupsall.ts
  - src/models/operations/filestoragedrivegroupsdelete.ts
  - src/models/operations/filestoragedrivegroupsone.ts
  - src/models/operations/filestoragedrivegroupsupdate.ts
  - src/models/operations/filestoragedrivesadd.ts
  - src/models/operations/filestoragedrivesall.ts
  - src/models/operations/filestoragedrivesdelete.ts
  - src/models/operations/filestoragedrivesone.ts
  - src/models/operations/filestoragedrivesupdate.ts
  - src/models/operations/filestoragefilesall.ts
  - src/models/operations/filestoragefilesdelete.ts
  - src/models/operations/filestoragefilesdownload.ts
  - src/models/operations/filestoragefilesexport.ts
  - src/models/operations/filestoragefilesone.ts
  - src/models/operations/filestoragefilessearch.ts
  - src/models/operations/filestoragefilesupdate.ts
  - src/models/operations/filestoragefoldersadd.ts
  - src/models/operations/filestoragefolderscopy.ts
  - src/models/operations/filestoragefoldersdelete.ts
  - src/models/operations/filestoragefoldersone.ts
  - src/models/operations/filestoragefoldersupdate.ts
  - src/models/operations/filestoragesharedlinksadd.ts
  - src/models/operations/filestoragesharedlinksall.ts
  - src/models/operations/filestoragesharedlinksdelete.ts
  - src/models/operations/filestoragesharedlinksone.ts
  - src/models/operations/filestoragesharedlinksupdate.ts
  - src/models/operations/filestorageuploadsessionsadd.ts
  - src/models/operations/filestorageuploadsessionsdelete.ts
  - src/models/operations/filestorageuploadsessionsfinish.ts
  - src/models/operations/filestorageuploadsessionsone.ts
  - src/models/operations/hriscompaniesadd.ts
  - src/models/operations/hriscompaniesall.ts
  - src/models/operations/hriscompaniesdelete.ts
  - src/models/operations/hriscompaniesone.ts
  - src/models/operations/hriscompaniesupdate.ts
  - src/models/operations/hrisdepartmentsadd.ts
  - src/models/operations/hrisdepartmentsall.ts
  - src/models/operations/hrisdepartmentsdelete.ts
  - src/models/operations/hrisdepartmentsone.ts
  - src/models/operations/hrisdepartmentsupdate.ts
  - src/models/operations/hrisemployeepayrollsall.ts
  - src/models/operations/hrisemployeepayrollsone.ts
  - src/models/operations/hrisemployeesadd.ts
  - src/models/operations/hrisemployeesall.ts
  - src/models/operations/hrisemployeeschedulesall.ts
  - src/models/operations/hrisemployeesdelete.ts
  - src/models/operations/hrisemployeesone.ts
  - src/models/operations/hrisemployeesupdate.ts
  - src/models/operations/hrispayrollsall.ts
  - src/models/operations/hrispayrollsone.ts
  - src/models/operations/hristimeoffrequestsadd.ts
  - src/models/operations/hristimeoffrequestsall.ts
  - src/models/operations/hristimeoffrequestsdelete.ts
  - src/models/operations/hristimeoffrequestsone.ts
  - src/models/operations/hristimeoffrequestsupdate.ts
  - src/models/operations/index.ts
  - src/models/operations/issuetrackingcollectionsall.ts
  - src/models/operations/issuetrackingcollectionsone.ts
  - src/models/operations/issuetrackingcollectiontagsall.ts
  - src/models/operations/issuetrackingcollectionticketcommentsadd.ts
  - src/models/operations/issuetrackingcollectionticketcommentsall.ts
  - src/models/operations/issuetrackingcollectionticketcommentsdelete.ts
  - src/models/operations/issuetrackingcollectionticketcommentsone.ts
  - src/models/operations/issuetrackingcollectionticketcommentsupdate.ts
  - src/models/operations/issuetrackingcollectionticketsadd.ts
  - src/models/operations/issuetrackingcollectionticketsall.ts
  - src/models/operations/issuetrackingcollectionticketsdelete.ts
  - src/models/operations/issuetrackingcollectionticketsone.ts
  - src/models/operations/issuetrackingcollectionticketsupdate.ts
  - src/models/operations/issuetrackingcollectionusersall.ts
  - src/models/operations/issuetrackingcollectionusersone.ts
  - src/models/operations/smsmessagesadd.ts
  - src/models/operations/smsmessagesall.ts
  - src/models/operations/smsmessagesdelete.ts
  - src/models/operations/smsmessagesone.ts
  - src/models/operations/smsmessagesupdate.ts
  - src/models/operations/vaultconnectioncustommappingsall.ts
  - src/models/operations/vaultconnectionsall.ts
  - src/models/operations/vaultconnectionsdelete.ts
  - src/models/operations/vaultconnectionsettingsall.ts
  - src/models/operations/vaultconnectionsettingsupdate.ts
  - src/models/operations/vaultconnectionsimport.ts
  - src/models/operations/vaultconnectionsone.ts
  - src/models/operations/vaultconnectionstoken.ts
  - src/models/operations/vaultconnectionsupdate.ts
  - src/models/operations/vaultconsumerrequestcountsall.ts
  - src/models/operations/vaultconsumersadd.ts
  - src/models/operations/vaultconsumersall.ts
  - src/models/operations/vaultconsumersdelete.ts
  - src/models/operations/vaultconsumersone.ts
  - src/models/operations/vaultconsumersupdate.ts
  - src/models/operations/vaultcreatecallbackstate.ts
  - src/models/operations/vaultcustomfieldsall.ts
  - src/models/operations/vaultcustommappingsall.ts
  - src/models/operations/vaultlogsall.ts
  - src/models/operations/vaultsessionscreate.ts
  - src/models/operations/vaultvalidateconnectionstate.ts
  - src/models/operations/webhookeventlogsall.ts
  - src/models/operations/webhookwebhooksadd.ts
  - src/models/operations/webhookwebhooksall.ts
  - src/models/operations/webhookwebhooksdelete.ts
  - src/models/operations/webhookwebhooksone.ts
  - src/models/operations/webhookwebhooksupdate.ts
  - src/sdk/accounting.ts
  - src/sdk/activities.ts
  - src/sdk/ageddebtors.ts
  - src/sdk/apideckcompanies.ts
  - src/sdk/apideckcustomers.ts
  - src/sdk/apideckdepartments.ts
  - src/sdk/apiresourcecoverage.ts
  - src/sdk/apiresources.ts
  - src/sdk/apis.ts
  - src/sdk/applicants.ts
  - src/sdk/applications.ts
  - src/sdk/ats.ts
  - src/sdk/attachments.ts
  - src/sdk/balancesheet.ts
  - src/sdk/billpayments.ts
  - src/sdk/bills.ts
  - src/sdk/collections.ts
  - src/sdk/collectiontags.ts
  - src/sdk/collectionticketcomments.ts
  - src/sdk/collectiontickets.ts
  - src/sdk/collectionusers.ts
  - src/sdk/companies.ts
  - src/sdk/companyinfo.ts
  - src/sdk/connectioncustommappings.ts
  - src/sdk/connections.ts
  - src/sdk/connectionsettings.ts
  - src/sdk/connector.ts
  - src/sdk/connectordocs.ts
  - src/sdk/connectorresources.ts
  - src/sdk/connectors.ts
  - src/sdk/consumerrequestcounts.ts
  - src/sdk/consumers.ts
  - src/sdk/contacts.ts
  - src/sdk/createcallback.ts
  - src/sdk/creditnotes.ts
  - src/sdk/crm.ts
  - src/sdk/customers.ts
  - src/sdk/customfields.ts
  - src/sdk/custommappings.ts
  - src/sdk/departments.ts
  - src/sdk/drivegroups.ts
  - src/sdk/drives.ts
  - src/sdk/ecommerce.ts
  - src/sdk/employeepayrolls.ts
  - src/sdk/employees.ts
  - src/sdk/employeeschedules.ts
  - src/sdk/eventlogs.ts
  - src/sdk/expenses.ts
  - src/sdk/files.ts
  - src/sdk/filestorage.ts
  - src/sdk/folders.ts
  - src/sdk/hris.ts
  - src/sdk/index.ts
  - src/sdk/invoiceitems.ts
  - src/sdk/invoices.ts
  - src/sdk/issuetracking.ts
  - src/sdk/jobs.ts
  - src/sdk/journalentries.ts
  - src/sdk/leads.ts
  - src/sdk/ledgeraccounts.ts
  - src/sdk/locations.ts
  - src/sdk/logs.ts
  - src/sdk/messages.ts
  - src/sdk/notes.ts
  - src/sdk/opportunities.ts
  - src/sdk/orders.ts
  - src/sdk/payments.ts
  - src/sdk/payrolls.ts
  - src/sdk/pipelines.ts
  - src/sdk/products.ts
  - src/sdk/profitandloss.ts
  - src/sdk/purchaseorders.ts
  - src/sdk/sdk.ts
  - src/sdk/sessions.ts
  - src/sdk/sharedlinks.ts
  - src/sdk/sms.ts
  - src/sdk/stores.ts
  - src/sdk/subsidiaries.ts
  - src/sdk/suppliers.ts
  - src/sdk/taxrates.ts
  - src/sdk/timeoffrequests.ts
  - src/sdk/trackingcategories.ts
  - src/sdk/uploadsessions.ts
  - src/sdk/users.ts
  - src/sdk/validateconnection.ts
  - src/sdk/vault.ts
  - src/sdk/webhook.ts
  - src/sdk/webhooks.ts
  - src/types/blobs.ts
  - src/types/constdatetime.ts
  - src/types/enums.ts
  - src/types/fp.ts
  - src/types/index.ts
  - src/types/operations.ts
  - src/types/rfcdate.ts
  - src/types/streams.ts
  - tsconfig.json
examples:
  accounting.taxRatesAll:
    "":
      parameters:
        query:
          filter: {"assets": true, "equity": true, "expenses": true, "liabilities": true, "revenue": true}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "tax-rates", "operation": "all", "data": [{"id": "1234", "name": "GST on Purchases", "code": "ABN", "description": "Reduced rate GST Purchases", "effective_tax_rate": 10, "total_tax_rate": 10, "tax_payable_account_id": "123456", "tax_remitted_account_id": "123456", "components": [{"id": "10", "name": "GST", "rate": 10, "compound": true}, {"id": "10", "name": "GST", "rate": 10, "compound": true}, {"id": "10", "name": "GST", "rate": 10, "compound": true}], "type": "NONE", "report_tax_type": "NONE", "original_tax_rate_id": "12345", "status": "active", "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "1234", "name": "GST on Purchases", "code": "ABN", "description": "Reduced rate GST Purchases", "effective_tax_rate": 10, "total_tax_rate": 10, "tax_payable_account_id": "123456", "tax_remitted_account_id": "123456", "components": [{"id": "10", "name": "GST", "rate": 10, "compound": true}], "type": "NONE", "report_tax_type": "NONE", "original_tax_rate_id": "12345", "status": "active", "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.taxRatesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"id": "1234", "name": "GST on Purchases", "code": "ABN", "description": "Reduced rate GST Purchases", "effective_tax_rate": 10, "total_tax_rate": 10, "tax_payable_account_id": "123456", "tax_remitted_account_id": "123456", "components": [{"id": "10", "name": "GST", "rate": 10, "compound": true}], "type": "NONE", "report_tax_type": "NONE", "original_tax_rate_id": "12345", "status": "active", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "tax-rates", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.taxRatesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "tax-rates", "operation": "one", "data": {"id": "1234", "name": "GST on Purchases", "code": "ABN", "description": "Reduced rate GST Purchases", "effective_tax_rate": 10, "total_tax_rate": 10, "tax_payable_account_id": "123456", "tax_remitted_account_id": "123456", "components": [{"id": "10", "name": "GST", "rate": 10, "compound": true}, {"id": "10", "name": "GST", "rate": 10, "compound": true}], "type": "NONE", "report_tax_type": "NONE", "original_tax_rate_id": "12345", "status": "active", "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.taxRatesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"id": "1234", "name": "GST on Purchases", "code": "ABN", "description": "Reduced rate GST Purchases", "effective_tax_rate": 10, "total_tax_rate": 10, "tax_payable_account_id": "123456", "tax_remitted_account_id": "123456", "components": [{"id": "10", "name": "GST", "rate": 10, "compound": true}, {"id": "10", "name": "GST", "rate": 10, "compound": true}, {"id": "10", "name": "GST", "rate": 10, "compound": true}], "type": "NONE", "report_tax_type": "NONE", "original_tax_rate_id": "12345", "status": "active", "row_version": "1-12345", "pass_through": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "tax-rates", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.taxRatesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "tax-rates", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.billsAll:
    "":
      parameters:
        query:
          filter: {"updated_since": "2020-09-30T07:43:32.000Z"}
          sort: {"by": "updated_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "bills", "operation": "all", "data": [{"id": "12345", "downstream_id": "12345", "bill_number": "10001", "supplier": {"id": "12345", "display_id": "SUPP00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "company_id": "12345", "currency": "USD", "currency_rate": 0.69, "tax_inclusive": true, "bill_date": "2020-09-30", "due_date": "2020-10-30", "paid_date": "2020-10-30", "po_number": "90000117", "reference": "123456", "line_items": [{"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "expense_account", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "tracking_categories": [{"id": "123456", "name": "New York"}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}, {"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "expense_account", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}], "terms": "Net 30 days", "balance": 27500, "deposit": 0, "sub_total": 27500, "total_tax": 2500, "total": 27500, "tax_code": "1234", "notes": "Some notes about this bill.", "status": "draft", "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "payment_method": "cash", "channel": "email", "language": "EN", "accounting_by_row": false, "bank_account": {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, "discount_percentage": 5.5, "tracking_categories": [{"id": "123456", "name": "New York"}], "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}], "accounting_period": "01-24"}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.billsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"bill_number": "10001", "supplier": {"id": "12345", "display_name": "Windsurf Shop", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "company_id": "12345", "currency": "USD", "currency_rate": 0.69, "tax_inclusive": true, "bill_date": "2020-09-30", "due_date": "2020-10-30", "paid_date": "2020-10-30", "po_number": "90000117", "reference": "123456", "line_items": [{"row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "expense_account", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "row_version": "1-12345"}, {"row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "expense_account", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "row_version": "1-12345"}, {"row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "expense_account", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "row_version": "1-12345"}], "terms": "Net 30 days", "balance": 27500, "deposit": 0, "sub_total": 27500, "total_tax": 2500, "total": 27500, "tax_code": "1234", "notes": "Some notes about this bill.", "status": "draft", "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "payment_method": "cash", "channel": "email", "language": "EN", "accounting_by_row": false, "bank_account": {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, "discount_percentage": 5.5, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}], "accounting_period": "01-24"}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "bills", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.billsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "bills", "operation": "one", "data": {"id": "12345", "downstream_id": "12345", "bill_number": "10001", "supplier": {"id": "12345", "display_id": "SUPP00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "company_id": "12345", "currency": "USD", "currency_rate": 0.69, "tax_inclusive": true, "bill_date": "2020-09-30", "due_date": "2020-10-30", "paid_date": "2020-10-30", "po_number": "90000117", "reference": "123456", "line_items": [{"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "expense_account", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}, {"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "expense_account", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}], "terms": "Net 30 days", "balance": 27500, "deposit": 0, "sub_total": 27500, "total_tax": 2500, "total": 27500, "tax_code": "1234", "notes": "Some notes about this bill.", "status": "draft", "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "payment_method": "cash", "channel": "email", "language": "EN", "accounting_by_row": false, "bank_account": {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, "discount_percentage": 5.5, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}], "accounting_period": "01-24"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.billsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"bill_number": "10001", "supplier": {"id": "12345", "display_name": "Windsurf Shop", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "company_id": "12345", "currency": "USD", "currency_rate": 0.69, "tax_inclusive": true, "bill_date": "2020-09-30", "due_date": "2020-10-30", "paid_date": "2020-10-30", "po_number": "90000117", "reference": "123456", "line_items": [{"row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "expense_account", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "tracking_categories": [{"id": "123456", "name": "New York"}], "row_version": "1-12345"}, {"row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "expense_account", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "row_version": "1-12345"}, {"row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "expense_account", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "row_version": "1-12345"}], "terms": "Net 30 days", "balance": 27500, "deposit": 0, "sub_total": 27500, "total_tax": 2500, "total": 27500, "tax_code": "1234", "notes": "Some notes about this bill.", "status": "draft", "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "payment_method": "cash", "channel": "email", "language": "EN", "accounting_by_row": false, "bank_account": {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, "discount_percentage": 5.5, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}], "accounting_period": "01-24"}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "bills", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.billsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "bills", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.invoicesAll:
    "":
      parameters:
        query:
          filter: {"updated_since": "2020-09-30T07:43:32.000Z", "created_since": "2020-09-30T07:43:32.000Z", "number": "OIT00546"}
          sort: {"by": "updated_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "invoices", "operation": "all", "data": [{"id": "12345", "downstream_id": "12345", "type": "service", "number": "OIT00546", "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "company_id": "12345", "invoice_date": "2020-09-30", "due_date": "2020-09-30", "terms": "Net 30 days", "po_number": "90000117", "reference": "123456", "status": "draft", "invoice_sent": true, "currency": "USD", "currency_rate": 0.69, "tax_inclusive": true, "sub_total": 27500, "total_tax": 2500, "tax_code": "1234", "discount_percentage": 5.5, "discount_amount": 25, "total": 27500, "balance": 27500, "deposit": 0, "customer_memo": "Thank you for your business and have a great day!", "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "line_items": [{"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}, {"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "custom_fields": [], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}, {"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>"]}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}], "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "shipping_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "template_id": "123456", "source_document_url": "https://www.invoicesolution.com/invoice/123456", "payment_method": "cash", "channel": "email", "language": "EN", "accounting_by_row": false, "bank_account": {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>", "<value>"]}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}, {"id": "12345", "downstream_id": "12345", "type": "service", "number": "OIT00546", "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "company_id": "12345", "invoice_date": "2020-09-30", "due_date": "2020-09-30", "terms": "Net 30 days", "po_number": "90000117", "reference": "123456", "status": "draft", "invoice_sent": true, "currency": "USD", "currency_rate": 0.69, "tax_inclusive": true, "sub_total": 27500, "total_tax": 2500, "tax_code": "1234", "discount_percentage": 5.5, "discount_amount": 25, "total": 27500, "balance": 27500, "deposit": 0, "customer_memo": "Thank you for your business and have a great day!", "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "line_items": [{"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>"]}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}], "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "shipping_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "template_id": "123456", "source_document_url": "https://www.invoicesolution.com/invoice/123456", "payment_method": "cash", "channel": "email", "language": "EN", "accounting_by_row": false, "bank_account": {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.invoicesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"type": "service", "number": "OIT00546", "customer": {"id": "12345", "display_name": "Windsurf Shop", "email": "boring@boring.com"}, "company_id": "12345", "invoice_date": "2020-09-30", "due_date": "2020-09-30", "terms": "Net 30 days", "po_number": "90000117", "reference": "123456", "status": "draft", "invoice_sent": true, "currency": "USD", "currency_rate": 0.69, "tax_inclusive": true, "sub_total": 27500, "total_tax": 2500, "tax_code": "1234", "discount_percentage": 5.5, "discount_amount": 25, "total": 27500, "balance": 27500, "deposit": 0, "customer_memo": "Thank you for your business and have a great day!", "tracking_categories": [{"id": "123456", "name": "New York"}], "line_items": [{"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "tracking_categories": [], "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}], "row_version": "1-12345"}, {"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}], "row_version": "1-12345"}, {"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "tracking_categories": [], "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>"]}], "row_version": "1-12345"}], "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "shipping_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "template_id": "123456", "source_document_url": "https://www.invoicesolution.com/invoice/123456", "payment_method": "cash", "channel": "email", "language": "EN", "accounting_by_row": false, "bank_account": {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>"]}], "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "invoices", "operation": "add", "data": {"id": "12345", "downstream_id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.invoicesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "invoices", "operation": "one", "data": {"id": "12345", "downstream_id": "12345", "type": "service", "number": "OIT00546", "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "company_id": "12345", "invoice_date": "2020-09-30", "due_date": "2020-09-30", "terms": "Net 30 days", "po_number": "90000117", "reference": "123456", "status": "draft", "invoice_sent": true, "currency": "USD", "currency_rate": 0.69, "tax_inclusive": true, "sub_total": 27500, "total_tax": 2500, "tax_code": "1234", "discount_percentage": 5.5, "discount_amount": 25, "total": 27500, "balance": 27500, "deposit": 0, "customer_memo": "Thank you for your business and have a great day!", "tracking_categories": [], "line_items": [], "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "shipping_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "template_id": "123456", "source_document_url": "https://www.invoicesolution.com/invoice/123456", "payment_method": "cash", "channel": "email", "language": "EN", "accounting_by_row": false, "bank_account": {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.invoicesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"type": "service", "number": "OIT00546", "customer": {"id": "12345", "display_name": "Windsurf Shop", "email": "boring@boring.com"}, "company_id": "12345", "invoice_date": "2020-09-30", "due_date": "2020-09-30", "terms": "Net 30 days", "po_number": "90000117", "reference": "123456", "status": "draft", "invoice_sent": true, "currency": "USD", "currency_rate": 0.69, "tax_inclusive": true, "sub_total": 27500, "total_tax": 2500, "tax_code": "1234", "discount_percentage": 5.5, "discount_amount": 25, "total": 27500, "balance": 27500, "deposit": 0, "customer_memo": "Thank you for your business and have a great day!", "tracking_categories": [], "line_items": [], "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "shipping_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "template_id": "123456", "source_document_url": "https://www.invoicesolution.com/invoice/123456", "payment_method": "cash", "channel": "email", "language": "EN", "accounting_by_row": false, "bank_account": {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}], "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "invoices", "operation": "update", "data": {"id": "12345", "downstream_id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.invoicesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "invoices", "operation": "delete", "data": {"id": "12345", "downstream_id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.ledgerAccountsAll:
    "":
      parameters:
        query:
          filter: {"updated_since": "2020-09-30T07:43:32.000Z"}
          sort: {"by": "updated_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "ledger-accounts", "operation": "all", "data": [], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.ledgerAccountsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"display_id": "1-12345", "code": "453", "classification": "asset", "type": "bank", "sub_type": "CHECKING_ACCOUNT", "name": "Bank account", "fully_qualified_name": "Asset.Bank.Checking_Account", "description": "Main checking account", "opening_balance": 75000, "current_balance": 20000, "currency": "USD", "tax_type": "NONE", "tax_rate": {"id": "123456", "rate": 10}, "level": 1, "active": true, "status": "active", "header": true, "bank_account": {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, "parent_account": {"id": "12345", "name": "Bank Accounts", "display_id": "1-1100"}, "sub_account": false, "last_reconciliation_date": "2020-09-30", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "ledger-accounts", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.ledgerAccountsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "ledger-accounts", "operation": "one", "data": {"id": "12345", "display_id": "1-12345", "code": "453", "classification": "asset", "type": "bank", "sub_type": "CHECKING_ACCOUNT", "name": "Bank account", "fully_qualified_name": "Asset.Bank.Checking_Account", "description": "Main checking account", "opening_balance": 75000, "current_balance": 20000, "currency": "USD", "tax_type": "NONE", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "level": 1, "active": true, "status": "active", "header": true, "bank_account": {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, "categories": [], "parent_account": {"id": "12345", "name": "Bank Accounts", "display_id": "1-1100"}, "sub_account": false, "sub_accounts": [], "last_reconciliation_date": "2020-09-30", "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.ledgerAccountsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"display_id": "1-12345", "code": "453", "classification": "asset", "type": "bank", "sub_type": "CHECKING_ACCOUNT", "name": "Bank account", "fully_qualified_name": "Asset.Bank.Checking_Account", "description": "Main checking account", "opening_balance": 75000, "current_balance": 20000, "currency": "USD", "tax_type": "NONE", "tax_rate": {"id": "123456", "rate": 10}, "level": 1, "active": true, "status": "active", "header": true, "bank_account": {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, "parent_account": {"id": "12345", "name": "Bank Accounts", "display_id": "1-1100"}, "sub_account": false, "last_reconciliation_date": "2020-09-30", "row_version": "1-12345", "pass_through": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "ledger-accounts", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.ledgerAccountsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "ledger-accounts", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.invoiceItemsAll:
    "":
      parameters:
        query:
          filter: {"name": "Widgets Large", "type": "service"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "invoice-items", "operation": "all", "data": [{"id": "123456", "name": "Model Y", "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "code": "120-C", "sold": true, "purchased": true, "tracked": true, "taxable": true, "inventory_date": "2020-10-30", "type": "inventory", "sales_details": {"unit_price": 27500.5, "unit_of_measure": "pc.", "tax_inclusive": true, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}}, "purchase_details": {"unit_price": 27500.5, "unit_of_measure": "pc.", "tax_inclusive": true, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}}, "quantity": 1, "unit_price": 27500.5, "asset_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "income_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "expense_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "active": true, "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "123456", "name": "Model Y", "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "code": "120-C", "sold": true, "purchased": true, "tracked": true, "taxable": true, "inventory_date": "2020-10-30", "type": "inventory", "sales_details": {"unit_price": 27500.5, "unit_of_measure": "pc.", "tax_inclusive": true, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}}, "purchase_details": {"unit_price": 27500.5, "unit_of_measure": "pc.", "tax_inclusive": true, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}}, "quantity": 1, "unit_price": 27500.5, "asset_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "income_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "expense_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "tracking_categories": [], "active": true, "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}, {"id": "123456", "name": "Model Y", "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "code": "120-C", "sold": true, "purchased": true, "tracked": true, "taxable": true, "inventory_date": "2020-10-30", "type": "inventory", "sales_details": {"unit_price": 27500.5, "unit_of_measure": "pc.", "tax_inclusive": true, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}}, "purchase_details": {"unit_price": 27500.5, "unit_of_measure": "pc.", "tax_inclusive": true, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}}, "quantity": 1, "unit_price": 27500.5, "asset_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "income_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "expense_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "tracking_categories": [{"id": "123456", "name": "New York"}], "active": true, "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.invoiceItemsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Model Y", "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "code": "120-C", "sold": true, "purchased": true, "tracked": true, "taxable": true, "inventory_date": "2020-10-30", "type": "inventory", "sales_details": {"unit_price": 27500.5, "unit_of_measure": "pc.", "tax_inclusive": true, "tax_rate": {"id": "123456", "rate": 10}}, "purchase_details": {"unit_price": 27500.5, "unit_of_measure": "pc.", "tax_inclusive": true, "tax_rate": {"id": "123456", "rate": 10}}, "quantity": 1, "unit_price": 27500.5, "asset_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "income_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "expense_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "tracking_categories": [], "active": true, "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "invoice-items", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.invoiceItemsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
          filter: {"type": "service"}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "invoice-items", "operation": "one", "data": {"id": "123456", "name": "Model Y", "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "code": "120-C", "sold": true, "purchased": true, "tracked": true, "taxable": true, "inventory_date": "2020-10-30", "type": "inventory", "sales_details": {"unit_price": 27500.5, "unit_of_measure": "pc.", "tax_inclusive": true, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}}, "purchase_details": {"unit_price": 27500.5, "unit_of_measure": "pc.", "tax_inclusive": true, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}}, "quantity": 1, "unit_price": 27500.5, "asset_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "income_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "expense_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "active": true, "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.invoiceItemsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Model Y", "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "code": "120-C", "sold": true, "purchased": true, "tracked": true, "taxable": true, "inventory_date": "2020-10-30", "type": "inventory", "sales_details": {"unit_price": 27500.5, "unit_of_measure": "pc.", "tax_inclusive": true, "tax_rate": {"id": "123456", "rate": 10}}, "purchase_details": {"unit_price": 27500.5, "unit_of_measure": "pc.", "tax_inclusive": true, "tax_rate": {"id": "123456", "rate": 10}}, "quantity": 1, "unit_price": 27500.5, "asset_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "income_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "expense_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "tracking_categories": [{"id": "123456", "name": "New York"}], "active": true, "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "invoice-items", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.invoiceItemsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "tax-rates", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.creditNotesAll:
    "":
      parameters:
        query:
          filter: {"updated_since": "2020-09-30T07:43:32.000Z"}
          sort: {"by": "updated_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "credit-notes", "operation": "all", "data": [{"id": "123456", "number": "OIT00546", "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "company_id": "12345", "currency": "USD", "currency_rate": 0.69, "tax_inclusive": true, "sub_total": 27500, "total_amount": 49.99, "total_tax": 2500, "tax_code": "1234", "balance": 27500, "remaining_credit": 27500, "status": "authorised", "reference": "123456", "date_issued": "2021-05-01T12:00:00.000Z", "date_paid": "2021-05-01T12:00:00.000Z", "type": "accounts_receivable_credit", "account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "line_items": [{"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>"]}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}, {"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}], "allocations": [{"id": "123456", "code": "N091", "amount": 49.99, "allocation_id": "123456"}], "note": "Some notes about this credit note", "terms": "Some terms about this credit note", "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "shipping_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>"]}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>"]}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "123456", "number": "OIT00546", "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "company_id": "12345", "currency": "USD", "currency_rate": 0.69, "tax_inclusive": true, "sub_total": 27500, "total_amount": 49.99, "total_tax": 2500, "tax_code": "1234", "balance": 27500, "remaining_credit": 27500, "status": "authorised", "reference": "123456", "date_issued": "2021-05-01T12:00:00.000Z", "date_paid": "2021-05-01T12:00:00.000Z", "type": "accounts_receivable_credit", "account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "line_items": [{"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}, {"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>"]}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}], "allocations": [{"id": "123456", "code": "N091", "amount": 49.99, "allocation_id": "123456"}], "note": "Some notes about this credit note", "terms": "Some terms about this credit note", "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "shipping_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "tracking_categories": [], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>"]}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.creditNotesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"number": "OIT00546", "customer": {"id": "12345", "display_name": "Windsurf Shop", "email": "boring@boring.com"}, "company_id": "12345", "currency": "USD", "currency_rate": 0.69, "tax_inclusive": true, "sub_total": 27500, "total_amount": 49.99, "total_tax": 2500, "tax_code": "1234", "balance": 27500, "remaining_credit": 27500, "status": "authorised", "reference": "123456", "date_issued": "2021-05-01T12:00:00.000Z", "date_paid": "2021-05-01T12:00:00.000Z", "type": "accounts_receivable_credit", "account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "line_items": [{"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>", "<value>"]}], "row_version": "1-12345"}, {"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>"]}], "row_version": "1-12345"}], "allocations": [{"id": "123456", "amount": 49.99, "allocation_id": "123456"}, {"id": "123456", "amount": 49.99, "allocation_id": "123456"}, {"id": "123456", "amount": 49.99, "allocation_id": "123456"}], "note": "Some notes about this credit note", "terms": "Some terms about this credit note", "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "shipping_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "tracking_categories": [{"id": "123456", "name": "New York"}], "custom_fields": [], "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "credit-notes", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.creditNotesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "credit-notes", "operation": "one", "data": {"id": "123456", "number": "OIT00546", "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "company_id": "12345", "currency": "USD", "currency_rate": 0.69, "tax_inclusive": true, "sub_total": 27500, "total_amount": 49.99, "total_tax": 2500, "tax_code": "1234", "balance": 27500, "remaining_credit": 27500, "status": "authorised", "reference": "123456", "date_issued": "2021-05-01T12:00:00.000Z", "date_paid": "2021-05-01T12:00:00.000Z", "type": "accounts_receivable_credit", "account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "line_items": [{"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}, {"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}, {"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>"]}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}], "allocations": [{"id": "123456", "code": "N091", "amount": 49.99, "allocation_id": "123456"}, {"id": "123456", "code": "N091", "amount": 49.99, "allocation_id": "123456"}], "note": "Some notes about this credit note", "terms": "Some terms about this credit note", "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "shipping_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "tracking_categories": [{"id": "123456", "name": "New York"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>", "<value>"]}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.creditNotesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"number": "OIT00546", "customer": {"id": "12345", "display_name": "Windsurf Shop", "email": "boring@boring.com"}, "company_id": "12345", "currency": "USD", "currency_rate": 0.69, "tax_inclusive": true, "sub_total": 27500, "total_amount": 49.99, "total_tax": 2500, "tax_code": "1234", "balance": 27500, "remaining_credit": 27500, "status": "authorised", "reference": "123456", "date_issued": "2021-05-01T12:00:00.000Z", "date_paid": "2021-05-01T12:00:00.000Z", "type": "accounts_receivable_credit", "account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "line_items": [{"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>", "<value>"]}], "row_version": "1-12345"}, {"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "tracking_categories": [], "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>"]}], "row_version": "1-12345"}, {"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}], "row_version": "1-12345"}], "allocations": [], "note": "Some notes about this credit note", "terms": "Some terms about this credit note", "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "shipping_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "tracking_categories": [], "custom_fields": [], "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "credit-notes", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.creditNotesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "credit-notes", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.customersAll:
    "":
      parameters:
        query:
          filter: {"company_name": "SpaceX", "display_name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@musk.com", "status": "active", "updated_since": "2020-09-30T07:43:32.000Z"}
          sort: {"by": "updated_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "customers", "operation": "all", "data": [{"id": "12345", "downstream_id": "12345", "display_id": "EMP00101", "display_name": "Windsurf Shop", "company_name": "SpaceX", "company_id": "12345", "title": "CEO", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "suffix": "Jr.", "individual": true, "project": false, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [], "bank_accounts": [], "notes": "Some notes about this customer", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tax_number": "US123945459", "currency": "USD", "account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "parent": {"id": "12345", "name": "Windsurf Shop"}, "status": "active", "payment_method": "cash", "channel": "email", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "row_version": "1-12345", "pass_through": []}, {"id": "12345", "downstream_id": "12345", "display_id": "EMP00101", "display_name": "Windsurf Shop", "company_name": "SpaceX", "company_id": "12345", "title": "CEO", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "suffix": "Jr.", "individual": true, "project": false, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "bank_accounts": [], "notes": "Some notes about this customer", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tax_number": "US123945459", "currency": "USD", "account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "parent": {"id": "12345", "name": "Windsurf Shop"}, "status": "active", "payment_method": "cash", "channel": "email", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}, {"id": "12345", "downstream_id": "12345", "display_id": "EMP00101", "display_name": "Windsurf Shop", "company_name": "SpaceX", "company_id": "12345", "title": "CEO", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "suffix": "Jr.", "individual": true, "project": false, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "notes": "Some notes about this customer", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tax_number": "US123945459", "currency": "USD", "account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "parent": {"id": "12345", "name": "Windsurf Shop"}, "status": "active", "payment_method": "cash", "channel": "email", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "row_version": "1-12345", "pass_through": []}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.customersAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"display_id": "EMP00101", "display_name": "Windsurf Shop", "company_name": "SpaceX", "company_id": "12345", "title": "CEO", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "suffix": "Jr.", "individual": true, "project": false, "addresses": [], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "notes": "Some notes about this customer", "tax_rate": {"id": "123456", "rate": 10}, "tax_number": "US123945459", "currency": "USD", "account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "parent": {"id": "12345", "name": "Windsurf Shop"}, "status": "active", "payment_method": "cash", "channel": "email", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "customers", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.customersOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "customers", "operation": "one", "data": {"id": "12345", "downstream_id": "12345", "display_id": "EMP00101", "display_name": "Windsurf Shop", "company_name": "SpaceX", "company_id": "12345", "title": "CEO", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "suffix": "Jr.", "individual": true, "project": false, "addresses": [], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [], "bank_accounts": [], "notes": "Some notes about this customer", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tax_number": "US123945459", "currency": "USD", "account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "parent": {"id": "12345", "name": "Windsurf Shop"}, "status": "active", "payment_method": "cash", "channel": "email", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.customersUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"display_id": "EMP00101", "display_name": "Windsurf Shop", "company_name": "SpaceX", "company_id": "12345", "title": "CEO", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "suffix": "Jr.", "individual": true, "project": false, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "notes": "Some notes about this customer", "tax_rate": {"id": "123456", "rate": 10}, "tax_number": "US123945459", "currency": "USD", "account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "parent": {"id": "12345", "name": "Windsurf Shop"}, "status": "active", "payment_method": "cash", "channel": "email", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "customers", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.customersDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "customers", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.suppliersAll:
    "":
      parameters:
        query:
          filter: {"company_name": "SpaceX", "display_name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@musk.com", "updated_since": "2020-09-30T07:43:32.000Z"}
          sort: {"by": "updated_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "suppliers", "operation": "all", "data": [{"id": "12345", "downstream_id": "12345", "display_id": "EMP00101", "display_name": "Windsurf Shop", "company_name": "SpaceX", "company_id": "12345", "title": "CEO", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "suffix": "Jr.", "individual": true, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "notes": "Some notes about this supplier", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tax_number": "US123945459", "currency": "USD", "account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "status": "active", "payment_method": "cash", "channel": "email", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}, {"id": "12345", "downstream_id": "12345", "display_id": "EMP00101", "display_name": "Windsurf Shop", "company_name": "SpaceX", "company_id": "12345", "title": "CEO", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "suffix": "Jr.", "individual": true, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "notes": "Some notes about this supplier", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tax_number": "US123945459", "currency": "USD", "account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "status": "active", "payment_method": "cash", "channel": "email", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "row_version": "1-12345", "pass_through": []}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.suppliersAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"display_id": "EMP00101", "display_name": "Windsurf Shop", "company_name": "SpaceX", "company_id": "12345", "title": "CEO", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "suffix": "Jr.", "individual": true, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "notes": "Some notes about this supplier", "tax_rate": {"id": "123456", "rate": 10}, "tax_number": "US123945459", "currency": "USD", "account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "status": "active", "payment_method": "cash", "channel": "email", "row_version": "1-12345", "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "payments", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.suppliersOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "suppliers", "operation": "one", "data": {"id": "12345", "downstream_id": "12345", "display_id": "EMP00101", "display_name": "Windsurf Shop", "company_name": "SpaceX", "company_id": "12345", "title": "CEO", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "suffix": "Jr.", "individual": true, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "notes": "Some notes about this supplier", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tax_number": "US123945459", "currency": "USD", "account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "status": "active", "payment_method": "cash", "channel": "email", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.suppliersUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"display_id": "EMP00101", "display_name": "Windsurf Shop", "company_name": "SpaceX", "company_id": "12345", "title": "CEO", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "suffix": "Jr.", "individual": true, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "notes": "Some notes about this supplier", "tax_rate": {"id": "123456", "rate": 10}, "tax_number": "US123945459", "currency": "USD", "account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "status": "active", "payment_method": "cash", "channel": "email", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "suppliers", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.suppliersDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "suppliers", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.paymentsAll:
    "":
      parameters:
        query:
          filter: {"updated_since": "2020-09-30T07:43:32.000Z"}
          sort: {"by": "updated_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "payments", "operation": "all", "data": [{"id": "12345", "downstream_id": "12345", "currency": "USD", "currency_rate": 0.69, "total_amount": 49.99, "reference": "123456", "payment_method": "cash", "payment_method_reference": "123456", "payment_method_id": "12345", "account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "transaction_date": "2021-05-01T12:00:00.000Z", "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "company_id": "12345", "reconciled": true, "status": "authorised", "type": "accounts_receivable", "allocations": [{"id": "123456", "code": "N091", "amount": 49.99, "allocation_id": "123456"}, {"id": "123456", "code": "N091", "amount": 49.99, "allocation_id": "123456"}], "note": "Some notes about this transaction", "number": "123456", "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "row_version": "1-12345", "display_id": "123456", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z", "pass_through": []}, {"id": "12345", "downstream_id": "12345", "currency": "USD", "currency_rate": 0.69, "total_amount": 49.99, "reference": "123456", "payment_method": "cash", "payment_method_reference": "123456", "payment_method_id": "12345", "account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "transaction_date": "2021-05-01T12:00:00.000Z", "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "company_id": "12345", "reconciled": true, "status": "authorised", "type": "accounts_receivable", "allocations": [], "note": "Some notes about this transaction", "number": "123456", "tracking_categories": [], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}], "row_version": "1-12345", "display_id": "123456", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z", "pass_through": []}, {"id": "12345", "downstream_id": "12345", "currency": "USD", "currency_rate": 0.69, "total_amount": 49.99, "reference": "123456", "payment_method": "cash", "payment_method_reference": "123456", "payment_method_id": "12345", "account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "transaction_date": "2021-05-01T12:00:00.000Z", "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "company_id": "12345", "reconciled": true, "status": "authorised", "type": "accounts_receivable", "allocations": [{"id": "123456", "code": "N091", "amount": 49.99, "allocation_id": "123456"}], "note": "Some notes about this transaction", "number": "123456", "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>"]}], "row_version": "1-12345", "display_id": "123456", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z", "pass_through": []}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.paymentsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"currency": "USD", "currency_rate": 0.69, "total_amount": 49.99, "reference": "123456", "payment_method": "cash", "payment_method_reference": "123456", "payment_method_id": "12345", "account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "transaction_date": "2021-05-01T12:00:00.000Z", "customer": {"id": "12345", "display_name": "Windsurf Shop", "email": "boring@boring.com"}, "company_id": "12345", "reconciled": true, "status": "authorised", "type": "accounts_receivable", "allocations": [], "note": "Some notes about this transaction", "number": "123456", "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "custom_fields": [], "row_version": "1-12345", "display_id": "123456", "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "payments", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.paymentsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "payments", "operation": "one", "data": {"id": "12345", "downstream_id": "12345", "currency": "USD", "currency_rate": 0.69, "total_amount": 49.99, "reference": "123456", "payment_method": "cash", "payment_method_reference": "123456", "payment_method_id": "12345", "account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "transaction_date": "2021-05-01T12:00:00.000Z", "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "company_id": "12345", "reconciled": true, "status": "authorised", "type": "accounts_receivable", "allocations": [{"id": "123456", "code": "N091", "amount": 49.99, "allocation_id": "123456"}, {"id": "123456", "code": "N091", "amount": 49.99, "allocation_id": "123456"}], "note": "Some notes about this transaction", "number": "123456", "tracking_categories": [], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}], "row_version": "1-12345", "display_id": "123456", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.paymentsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"currency": "USD", "currency_rate": 0.69, "total_amount": 49.99, "reference": "123456", "payment_method": "cash", "payment_method_reference": "123456", "payment_method_id": "12345", "account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "transaction_date": "2021-05-01T12:00:00.000Z", "customer": {"id": "12345", "display_name": "Windsurf Shop", "email": "boring@boring.com"}, "company_id": "12345", "reconciled": true, "status": "authorised", "type": "accounts_receivable", "allocations": [{"id": "123456", "amount": 49.99, "allocation_id": "123456"}], "note": "Some notes about this transaction", "number": "123456", "tracking_categories": [{"id": "123456", "name": "New York"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "row_version": "1-12345", "display_id": "123456", "pass_through": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "payments", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.paymentsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "payments", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.companyInfoOne:
    "":
      parameters:
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "company-info", "operation": "one", "data": {"id": "12345", "company_name": "SpaceX", "status": "active", "legal_name": "SpaceX Inc.", "country": "US", "sales_tax_number": "111.222.333", "default_sales_tax": {"id": "1234", "name": "GST on Purchases", "code": "ABN", "description": "Reduced rate GST Purchases", "effective_tax_rate": 10, "total_tax_rate": 10, "tax_payable_account_id": "123456", "tax_remitted_account_id": "123456", "components": [{"id": "10", "name": "GST", "rate": 10, "compound": true}, {"id": "10", "name": "GST", "rate": 10, "compound": true}], "type": "NONE", "report_tax_type": "NONE", "original_tax_rate_id": "12345", "status": "active", "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, "currency": "USD", "language": "EN", "fiscal_year_start_month": "January", "company_start_date": "2015-06-05", "addresses": [], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.balanceSheetOne:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
          filter: {"start_date": "2021-01-01", "end_date": "2021-12-31", "period_count": 3, "period_type": "month"}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "BalanceSheets", "operation": "one", "data": {"reports": [{"id": "12345", "report_name": "BalanceSheet", "start_date": "2017-01-01", "end_date": "2017-01-01", "currency": "USD", "assets": {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000, "items": [{"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000}, {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000}, {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000}]}, "liabilities": {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000, "items": [{"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000}, {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000}, {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000}]}, "equity": {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000, "items": [{"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000}]}, "net_assets": 1000, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "uncategorized_items": {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000, "items": [{"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000}, {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000}]}}, {"id": "12345", "report_name": "BalanceSheet", "start_date": "2017-01-01", "end_date": "2017-01-01", "currency": "USD", "assets": {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000, "items": []}, "liabilities": {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000, "items": [{"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000}, {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000}, {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000}]}, "equity": {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000, "items": []}, "net_assets": 1000, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "uncategorized_items": {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000, "items": [{"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000}]}}, {"id": "12345", "report_name": "BalanceSheet", "start_date": "2017-01-01", "end_date": "2017-01-01", "currency": "USD", "assets": {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000, "items": []}, "liabilities": {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000, "items": []}, "equity": {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000, "items": []}, "net_assets": 1000, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "uncategorized_items": {"account_id": "123456", "code": "1100", "name": "Current assets", "value": 1000, "items": []}}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.profitAndLossOne:
    "":
      parameters:
        query:
          filter: {"customer_id": "123abc", "start_date": "2021-01-01", "end_date": "2021-12-31"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "ProfitAndLosses", "operation": "one", "data": {"id": "12345", "report_name": "ProfitAndLoss", "start_date": "2017-01-01", "end_date": "2017-01-01", "currency": "USD", "customer_id": "123", "income": {"total": 200000, "records": [{"id": "123abc", "title": "Income", "type": "Section", "total": 200000}, {"id": "123abc", "title": "Income", "type": "Record", "value": 23992.34}]}, "expenses": {"total": 200000, "records": [{"id": "123abc", "title": "Income", "type": "Section", "total": 200000}, {"id": "123abc", "title": "Income", "type": "Record", "value": 23992.34}]}, "net_income": {"total": 200000, "records": [{"id": "123abc", "title": "Income", "type": "Record", "value": 23992.34}, {"id": "123abc", "title": "Income", "type": "Record", "value": 23992.34}]}, "net_operating_income": {"total": 200000, "records": [{"id": "123abc", "title": "Income", "type": "Record", "value": 23992.34}]}, "gross_profit": {"total": 200000, "records": [{"id": "123abc", "title": "Income", "type": "Section", "total": 200000}, {"id": "123abc", "title": "Income", "type": "Record", "value": 23992.34}, {"id": "123abc", "title": "Income", "type": "Record", "value": 23992.34}]}}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.journalEntriesAll:
    "":
      parameters:
        query:
          filter: {"updated_since": "2020-09-30T07:43:32.000Z"}
          sort: {"by": "updated_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "journal-entries", "operation": "all", "data": [{"id": "12345", "title": "Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry", "currency_rate": 0.69, "currency": "USD", "company_id": "12345", "line_items": [{"id": "12345", "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "tax_amount": 27500, "sub_total": 27500, "total_amount": 27500, "type": "debit", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "supplier": {"id": "12345", "display_id": "SUPP00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "department_id": "12345", "location_id": "12345", "line_number": 1}, {"id": "12345", "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "tax_amount": 27500, "sub_total": 27500, "total_amount": 27500, "type": "debit", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "supplier": {"id": "12345", "display_id": "SUPP00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "department_id": "12345", "location_id": "12345", "line_number": 1}, {"id": "12345", "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "tax_amount": 27500, "sub_total": 27500, "total_amount": 27500, "type": "debit", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "supplier": {"id": "12345", "display_id": "SUPP00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "department_id": "12345", "location_id": "12345", "line_number": 1}], "memo": "Thank you for your business and have a great day!", "posted_at": "2020-09-30T07:43:32.000Z", "journal_symbol": "IND", "tax_type": "sales", "tax_code": "1234", "number": "OIT00546", "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "accounting_period": "01-24", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "title": "Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry", "currency_rate": 0.69, "currency": "USD", "company_id": "12345", "line_items": [{"id": "12345", "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "tax_amount": 27500, "sub_total": 27500, "total_amount": 27500, "type": "debit", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "supplier": {"id": "12345", "display_id": "SUPP00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "department_id": "12345", "location_id": "12345", "line_number": 1}, {"id": "12345", "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "tax_amount": 27500, "sub_total": 27500, "total_amount": 27500, "type": "debit", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "supplier": {"id": "12345", "display_id": "SUPP00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "department_id": "12345", "location_id": "12345", "line_number": 1}], "memo": "Thank you for your business and have a great day!", "posted_at": "2020-09-30T07:43:32.000Z", "journal_symbol": "IND", "tax_type": "sales", "tax_code": "1234", "number": "OIT00546", "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "accounting_period": "01-24", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "title": "Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry", "currency_rate": 0.69, "currency": "USD", "company_id": "12345", "line_items": [{"id": "12345", "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "tax_amount": 27500, "sub_total": 27500, "total_amount": 27500, "type": "debit", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "supplier": {"id": "12345", "display_id": "SUPP00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "department_id": "12345", "location_id": "12345", "line_number": 1}, {"id": "12345", "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "tax_amount": 27500, "sub_total": 27500, "total_amount": 27500, "type": "debit", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "supplier": {"id": "12345", "display_id": "SUPP00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "department_id": "12345", "location_id": "12345", "line_number": 1}, {"id": "12345", "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "tax_amount": 27500, "sub_total": 27500, "total_amount": 27500, "type": "debit", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "supplier": {"id": "12345", "display_id": "SUPP00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "department_id": "12345", "location_id": "12345", "line_number": 1}], "memo": "Thank you for your business and have a great day!", "posted_at": "2020-09-30T07:43:32.000Z", "journal_symbol": "IND", "tax_type": "sales", "tax_code": "1234", "number": "OIT00546", "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "accounting_period": "01-24", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.journalEntriesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"title": "Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry", "currency_rate": 0.69, "currency": "USD", "company_id": "12345", "line_items": [{"description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "tax_amount": 27500, "sub_total": 27500, "total_amount": 27500, "type": "debit", "tax_rate": {"id": "123456", "rate": 10}, "tracking_categories": [], "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "customer": {"id": "12345", "display_name": "Windsurf Shop", "email": "boring@boring.com"}, "supplier": {"id": "12345", "display_name": "Windsurf Shop", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "line_number": 1}, {"description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "tax_amount": 27500, "sub_total": 27500, "total_amount": 27500, "type": "debit", "tax_rate": {"id": "123456", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "customer": {"id": "12345", "display_name": "Windsurf Shop", "email": "boring@boring.com"}, "supplier": {"id": "12345", "display_name": "Windsurf Shop", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "line_number": 1}], "memo": "Thank you for your business and have a great day!", "posted_at": "2020-09-30T07:43:32.000Z", "journal_symbol": "IND", "tax_type": "sales", "tax_code": "1234", "number": "OIT00546", "tracking_categories": [], "accounting_period": "01-24", "row_version": "1-12345", "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "journal-entries", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.journalEntriesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "journal-entries", "operation": "one", "data": {"id": "12345", "title": "Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry", "currency_rate": 0.69, "currency": "USD", "company_id": "12345", "line_items": [{"id": "12345", "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "tax_amount": 27500, "sub_total": 27500, "total_amount": 27500, "type": "debit", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "customer": {"id": "12345", "display_id": "CUST00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "email": "boring@boring.com"}, "supplier": {"id": "12345", "display_id": "SUPP00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "department_id": "12345", "location_id": "12345", "line_number": 1}], "memo": "Thank you for your business and have a great day!", "posted_at": "2020-09-30T07:43:32.000Z", "journal_symbol": "IND", "tax_type": "sales", "tax_code": "1234", "number": "OIT00546", "tracking_categories": [{"id": "123456", "name": "New York"}], "accounting_period": "01-24", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.journalEntriesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"title": "Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry", "currency_rate": 0.69, "currency": "USD", "company_id": "12345", "line_items": [], "memo": "Thank you for your business and have a great day!", "posted_at": "2020-09-30T07:43:32.000Z", "journal_symbol": "IND", "tax_type": "sales", "tax_code": "1234", "number": "OIT00546", "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "accounting_period": "01-24", "row_version": "1-12345", "pass_through": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "journal-entries", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.journalEntriesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "journal-entries", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.purchaseOrdersAll:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
          filter: {"updated_since": "2020-09-30T07:43:32.000Z", "supplier_id": "1234"}
          sort: {"by": "updated_at", "direction": "desc"}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "PurchaseOrders", "operation": "all", "data": [], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.purchaseOrdersAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"po_number": "90000117", "reference": "123456", "supplier": {"id": "12345", "display_name": "Windsurf Shop", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "company_id": "12345", "status": "open", "issued_date": "2020-09-30", "delivery_date": "2020-09-30", "expected_arrival_date": "2020-09-30", "currency": "USD", "currency_rate": 0.69, "sub_total": 27500, "total_tax": 2500, "total": 27500, "tax_inclusive": true, "line_items": [{"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>"]}], "row_version": "1-12345"}, {"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>", "<value>"]}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "row_version": "1-12345"}], "shipping_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "template_id": "123456", "discount_percentage": 5.5, "bank_account": {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, "accounting_by_row": false, "due_date": "2020-10-30", "payment_method": "cash", "tax_code": "1234", "channel": "email", "memo": "Thank you for the partnership and have a great day!", "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "row_version": "1-12345", "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "PurchaseOrders", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.purchaseOrdersOne:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "PurchaseOrders", "operation": "one", "data": {"id": "12345", "downstream_id": "12345", "po_number": "90000117", "reference": "123456", "supplier": {"id": "12345", "display_id": "SUPP00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "company_id": "12345", "status": "open", "issued_date": "2020-09-30", "delivery_date": "2020-09-30", "expected_arrival_date": "2020-09-30", "currency": "USD", "currency_rate": 0.69, "sub_total": 27500, "total_tax": 2500, "total": 27500, "tax_inclusive": true, "line_items": [], "shipping_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "ledger_account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "template_id": "123456", "discount_percentage": 5.5, "bank_account": {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, "accounting_by_row": false, "due_date": "2020-10-30", "payment_method": "cash", "tax_code": "1234", "channel": "email", "memo": "Thank you for the partnership and have a great day!", "tracking_categories": [], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.purchaseOrdersUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"po_number": "90000117", "reference": "123456", "supplier": {"id": "12345", "display_name": "Windsurf Shop", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "company_id": "12345", "status": "open", "issued_date": "2020-09-30", "delivery_date": "2020-09-30", "expected_arrival_date": "2020-09-30", "currency": "USD", "currency_rate": 0.69, "sub_total": 27500, "total_tax": 2500, "total": 27500, "tax_inclusive": true, "line_items": [{"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "custom_fields": [], "row_version": "1-12345"}, {"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "tracking_categories": [], "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "custom_fields": [], "row_version": "1-12345"}, {"id": "12345", "row_id": "12345", "code": "120-C", "line_number": 1, "description": "Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.", "type": "sales_item", "tax_amount": 27500, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "unit_of_measure": "pc.", "discount_percentage": 0.01, "discount_amount": 19.99, "location_id": "1234", "department_id": "1234", "item": {"id": "12344", "code": "120-C", "name": "Model Y"}, "tax_rate": {"id": "123456", "rate": 10}, "tracking_categories": [], "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level"}], "row_version": "1-12345"}], "shipping_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "ledger_account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "template_id": "123456", "discount_percentage": 5.5, "bank_account": {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, "accounting_by_row": false, "due_date": "2020-10-30", "payment_method": "cash", "tax_code": "1234", "channel": "email", "memo": "Thank you for the partnership and have a great day!", "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "PurchaseOrders", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.purchaseOrdersDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "PurchaseOrders", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.subsidiariesAll:
    "":
      parameters:
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "subsidiaries", "operation": "all", "data": [], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.subsidiariesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"parent_id": "12345", "name": "SpaceX", "status": "active", "row_version": "1-12345", "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "subsidiaries", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.subsidiariesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "subsidiaries", "operation": "one", "data": {"id": "12345", "parent_id": "12345", "name": "SpaceX", "status": "active", "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.subsidiariesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"parent_id": "12345", "name": "SpaceX", "status": "active", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "subsidiaries", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.subsidiariesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "subsidiaries", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.locationsAll:
    "":
      parameters:
        query:
          fields: "id,updated_at"
          filter: {"subsidiary": "1"}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "subsidiaries", "operation": "all", "data": [{"id": "12345", "parent_id": "12345", "company_name": "SpaceX", "display_name": "11 UT - South Jordan", "status": "active", "addresses": [], "subsidiaries": [], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}, {"id": "12345", "parent_id": "12345", "company_name": "SpaceX", "display_name": "11 UT - South Jordan", "status": "active", "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "subsidiaries": [], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}, {"id": "12345", "parent_id": "12345", "company_name": "SpaceX", "display_name": "11 UT - South Jordan", "status": "active", "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "subsidiaries": [{"id": "12345", "name": "SpaceX"}, {"id": "12345", "name": "SpaceX"}, {"id": "12345", "name": "SpaceX"}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.locationsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"parent_id": "12345", "company_name": "SpaceX", "display_name": "11 UT - South Jordan", "status": "active", "addresses": [], "subsidiaries": [{"name": "SpaceX"}], "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "locations", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.locationsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "subsidiaries", "operation": "one", "data": {"id": "12345", "parent_id": "12345", "company_name": "SpaceX", "display_name": "11 UT - South Jordan", "status": "active", "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "subsidiaries": [{"id": "12345", "name": "SpaceX"}, {"id": "12345", "name": "SpaceX"}, {"id": "12345", "name": "SpaceX"}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.locationsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"parent_id": "12345", "company_name": "SpaceX", "display_name": "11 UT - South Jordan", "status": "active", "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "subsidiaries": [{"name": "SpaceX"}], "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "locations", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.locationsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "locations", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.departmentsAll:
    "":
      parameters:
        query:
          fields: "id,updated_at"
          filter: {"subsidiary": "1"}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "subsidiaries", "operation": "all", "data": [{"id": "12345", "parent_id": "12345", "name": "Sales", "status": "active", "subsidiaries": [{"id": "12345", "name": "SpaceX"}, {"id": "12345", "name": "SpaceX"}, {"id": "12345", "name": "SpaceX"}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}, {"id": "12345", "parent_id": "12345", "name": "Sales", "status": "active", "subsidiaries": [{"id": "12345", "name": "SpaceX"}, {"id": "12345", "name": "SpaceX"}, {"id": "12345", "name": "SpaceX"}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.departmentsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"parent_id": "12345", "name": "Sales", "status": "active", "subsidiaries": [{"name": "SpaceX"}, {"name": "SpaceX"}], "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "departments", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.departmentsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "subsidiaries", "operation": "one", "data": {"id": "12345", "parent_id": "12345", "name": "Sales", "status": "active", "subsidiaries": [{"id": "12345", "name": "SpaceX"}], "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.departmentsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"parent_id": "12345", "name": "Sales", "status": "active", "subsidiaries": [{"name": "SpaceX"}], "row_version": "1-12345", "pass_through": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "departments", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.departmentsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "departments", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.attachmentsAll:
    "":
      parameters:
        path:
          reference_type: "invoice"
          reference_id: "123456"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "PurchaseOrders", "operation": "all", "data": [{"id": "12345", "display_id": "sample ID", "name": "sample.jpg", "mime_type": "image/jpeg", "size": 1810673, "reference": {"type": "invoice", "id": "12345"}, "description": "A sample image", "parent_folder_id": "123", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.attachmentsOne:
    "":
      parameters:
        path:
          reference_type: "invoice"
          reference_id: "123456"
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "payments", "operation": "one", "data": {"id": "12345", "display_id": "sample ID", "name": "sample.jpg", "mime_type": "image/jpeg", "size": 1810673, "reference": {"type": "invoice", "id": "12345"}, "description": "A sample image", "parent_folder_id": "123", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.attachmentsDelete:
    "":
      parameters:
        path:
          reference_type: "invoice"
          reference_id: "123456"
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "google-drive", "resource": "files", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.attachmentsDownload:
    "":
      parameters:
        path:
          reference_type: "invoice"
          reference_id: "123456"
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "200":
          '*/*': "x-file: example.file"
  accounting.trackingCategoriesAll:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "tracking-categories", "operation": "all", "data": [{"id": "12345", "parent_id": "12345", "name": "Department", "code": "100", "status": "active", "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.trackingCategoriesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"parent_id": "12345", "name": "Department", "code": "100", "status": "active", "row_version": "1-12345", "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "tracking-categories", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.trackingCategoriesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "tracking-categories", "operation": "one", "data": {"id": "12345", "parent_id": "12345", "name": "Department", "code": "100", "status": "active", "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.trackingCategoriesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"parent_id": "12345", "name": "Department", "code": "100", "status": "active", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "tracking-categories", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.trackingCategoriesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "tracking-categories", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.billPaymentsAll:
    "":
      parameters:
        query:
          filter: {"updated_since": "2020-09-30T07:43:32.000Z"}
          sort: {"by": "updated_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "payments", "operation": "all", "data": [], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.billPaymentsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"currency": "USD", "currency_rate": 0.69, "total_amount": 49.99, "reference": "123456", "payment_method": "cash", "payment_method_reference": "123456", "payment_method_id": "12345", "account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "transaction_date": "2021-05-01T12:00:00.000Z", "supplier": {"id": "12345", "display_name": "Windsurf Shop", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "company_id": "12345", "reconciled": true, "status": "authorised", "type": "accounts_payable", "allocations": [{"id": "12345", "type": "bill", "amount": 49.99, "allocation_id": "123456"}, {"id": "12345", "type": "bill", "amount": 49.99, "allocation_id": "123456"}], "note": "Some notes about this transaction", "number": "123456", "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "row_version": "1-12345", "display_id": "123456", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "payments", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.billPaymentsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "payments", "operation": "one", "data": {"id": "12345", "downstream_id": "12345", "currency": "USD", "currency_rate": 0.69, "total_amount": 49.99, "reference": "123456", "payment_method": "cash", "payment_method_reference": "123456", "payment_method_id": "12345", "account": {"id": "123456", "name": "Bank account", "nominal_code": "N091", "code": "453"}, "transaction_date": "2021-05-01T12:00:00.000Z", "supplier": {"id": "12345", "display_id": "SUPP00101", "display_name": "Windsurf Shop", "company_name": "The boring company", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "company_id": "12345", "reconciled": true, "status": "authorised", "type": "accounts_payable", "allocations": [], "note": "Some notes about this transaction", "number": "123456", "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "custom_fields": [], "row_version": "1-12345", "display_id": "123456", "updated_by": "12345", "created_by": "12345", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.billPaymentsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"currency": "USD", "currency_rate": 0.69, "total_amount": 49.99, "reference": "123456", "payment_method": "cash", "payment_method_reference": "123456", "payment_method_id": "12345", "account": {"id": "123456", "nominal_code": "N091", "code": "453"}, "transaction_date": "2021-05-01T12:00:00.000Z", "supplier": {"id": "12345", "display_name": "Windsurf Shop", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, "company_id": "12345", "reconciled": true, "status": "authorised", "type": "accounts_payable", "allocations": [{"id": "12345", "type": "bill", "amount": 49.99, "allocation_id": "123456"}, {"id": "12345", "type": "bill", "amount": 49.99, "allocation_id": "123456"}, {"id": "12345", "type": "bill", "amount": 49.99, "allocation_id": "123456"}], "note": "Some notes about this transaction", "number": "123456", "tracking_categories": [], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}], "row_version": "1-12345", "display_id": "123456", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "payments", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.billPaymentsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "xero", "resource": "payments", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.expensesAll:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "Expenses", "operation": "all", "data": [{"id": "12345", "number": "OIT00546", "transaction_date": "2021-05-01T12:00:00.000Z", "account_id": "123456", "customer_id": "12345", "supplier_id": "12345", "company_id": "12345", "department_id": "12345", "currency": "USD", "currency_rate": 0.69, "type": "expense", "memo": "For travel expenses incurred on 2024-05-15", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "total_amount": 275, "line_items": [{"id": "12345", "tracking_categories": [{"id": "123456", "name": "New York"}], "account_id": "123456", "customer_id": "12345", "department_id": "12345", "location_id": "12345", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "description": "Travel US.", "total_amount": 275, "billable": true}, {"id": "12345", "tracking_categories": [{"id": "123456", "name": "New York"}], "account_id": "123456", "customer_id": "12345", "department_id": "12345", "location_id": "12345", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "description": "Travel US.", "total_amount": 275, "billable": true}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>"]}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "number": "OIT00546", "transaction_date": "2021-05-01T12:00:00.000Z", "account_id": "123456", "customer_id": "12345", "supplier_id": "12345", "company_id": "12345", "department_id": "12345", "currency": "USD", "currency_rate": 0.69, "type": "expense", "memo": "For travel expenses incurred on 2024-05-15", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "total_amount": 275, "line_items": [{"id": "12345", "tracking_categories": [{"id": "123456", "name": "New York"}], "account_id": "123456", "customer_id": "12345", "department_id": "12345", "location_id": "12345", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "description": "Travel US.", "total_amount": 275, "billable": true}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "number": "OIT00546", "transaction_date": "2021-05-01T12:00:00.000Z", "account_id": "123456", "customer_id": "12345", "supplier_id": "12345", "company_id": "12345", "department_id": "12345", "currency": "USD", "currency_rate": 0.69, "type": "expense", "memo": "For travel expenses incurred on 2024-05-15", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "total_amount": 275, "line_items": [{"id": "12345", "tracking_categories": [{"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}, {"id": "123456", "name": "New York"}], "account_id": "123456", "customer_id": "12345", "department_id": "12345", "location_id": "12345", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "description": "Travel US.", "total_amount": 275, "billable": true}, {"id": "12345", "tracking_categories": [{"id": "123456", "name": "New York"}], "account_id": "123456", "customer_id": "12345", "department_id": "12345", "location_id": "12345", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "description": "Travel US.", "total_amount": 275, "billable": true}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>"]}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.expensesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"number": "OIT00546", "transaction_date": "2021-05-01T12:00:00.000Z", "account_id": "123456", "customer_id": "12345", "supplier_id": "12345", "company_id": "12345", "department_id": "12345", "currency": "USD", "currency_rate": 0.69, "type": "expense", "memo": "For travel expenses incurred on 2024-05-15", "tax_rate": {"id": "123456", "rate": 10}, "total_amount": 275, "line_items": [{"tracking_categories": [{"id": "123456", "name": "New York"}], "account_id": "123456", "customer_id": "12345", "department_id": "12345", "location_id": "12345", "tax_rate": {"id": "123456", "rate": 10}, "description": "Travel US.", "total_amount": 275, "billable": true}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "row_version": "1-12345", "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "Expenses", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.expensesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "Expenses", "operation": "one", "data": {"id": "12345", "number": "OIT00546", "transaction_date": "2021-05-01T12:00:00.000Z", "account_id": "123456", "customer_id": "12345", "supplier_id": "12345", "company_id": "12345", "department_id": "12345", "currency": "USD", "currency_rate": 0.69, "type": "expense", "memo": "For travel expenses incurred on 2024-05-15", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "total_amount": 275, "line_items": [{"id": "12345", "tracking_categories": [], "account_id": "123456", "customer_id": "12345", "department_id": "12345", "location_id": "12345", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "description": "Travel US.", "total_amount": 275, "billable": true}, {"id": "12345", "tracking_categories": [], "account_id": "123456", "customer_id": "12345", "department_id": "12345", "location_id": "12345", "tax_rate": {"id": "123456", "code": "N-T", "name": "GST on Purchases", "rate": 10}, "description": "Travel US.", "total_amount": 275, "billable": true}], "custom_fields": [], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.expensesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"number": "OIT00546", "transaction_date": "2021-05-01T12:00:00.000Z", "account_id": "123456", "customer_id": "12345", "supplier_id": "12345", "company_id": "12345", "department_id": "12345", "currency": "USD", "currency_rate": 0.69, "type": "expense", "memo": "For travel expenses incurred on 2024-05-15", "tax_rate": {"id": "123456", "rate": 10}, "total_amount": 275, "line_items": [], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "row_version": "1-12345", "pass_through": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "Expenses", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.expensesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "Expenses", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ats.jobsAll:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "lever", "resource": "Jobs", "operation": "all", "data": [{"id": "12345", "slug": "ceo", "title": "CEO", "sequence": 3, "visibility": "internal", "status": "completed", "code": "123-OC", "language": "EN", "employment_terms": "full-time", "experience": "Director/ Vice President", "location": "San Francisco", "remote": true, "requisition_id": "abc123", "department": {"id": "12345", "parent_id": "22345", "name": "R&D", "code": "2", "description": "R&D", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": []}]}, "branch": {"id": "123", "name": "HQ NY"}, "recruiters": ["a0d636c6-43b3-4bde-8c70-85b707d992f4"], "hiring_managers": ["123456"], "followers": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "description": "A description", "blocks": [{"title": "string", "content": "string"}], "closing": "The closing section of the job description", "closing_date": "2020-10-30", "salary": {"min": 8000, "max": 10000, "currency": "USD", "interval": "year"}, "links": [{"type": "job_portal", "url": "https://app.intercom.io/contacts/12345"}, {"type": "job_portal", "url": "https://app.intercom.io/contacts/12345"}, {"type": "job_portal", "url": "https://app.intercom.io/contacts/12345"}], "confidential": false, "available_to_employees": false, "tags": ["New"], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "custom_fields": [], "deleted": true, "owner_id": "54321", "published_at": "2020-09-30T07:43:32.000Z", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ats.jobsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "lever", "resource": "Jobs", "operation": "one", "data": {"id": "12345", "slug": "ceo", "title": "CEO", "sequence": 3, "visibility": "internal", "status": "completed", "code": "123-OC", "language": "EN", "employment_terms": "full-time", "experience": "Director/ Vice President", "location": "San Francisco", "remote": true, "requisition_id": "abc123", "department": {"id": "12345", "parent_id": "22345", "name": "R&D", "code": "2", "description": "R&D", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}, "branch": {"id": "123", "name": "HQ NY"}, "recruiters": ["a0d636c6-43b3-4bde-8c70-85b707d992f4"], "hiring_managers": ["123456"], "followers": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "description": "A description", "blocks": [{"title": "string", "content": "string"}], "closing": "The closing section of the job description", "closing_date": "2020-10-30", "salary": {"min": 8000, "max": 10000, "currency": "USD", "interval": "year"}, "links": [{"type": "job_portal", "url": "https://app.intercom.io/contacts/12345"}], "confidential": false, "available_to_employees": false, "tags": ["New"], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>", "<value>"]}], "deleted": true, "owner_id": "54321", "published_at": "2020-09-30T07:43:32.000Z", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ats.applicantsAll:
    "":
      parameters:
        query:
          filter: {"job_id": "1234"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "lever", "resource": "Applicants", "operation": "all", "data": [{"id": "12345", "name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "initials": "EM", "birthday": "2000-08-12", "cover_letter": "I submit this application to express my sincere interest in the API developer position. In the previous role, I was responsible for leadership and ...", "job_url": "https://democompany.recruitee.com/o/example-talent-pool", "photo_url": "https://unavatar.io/elon-musk", "headline": "PepsiCo, Inc, Central Perk", "title": "CEO", "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>"]}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "stage_id": "12345", "recruiter_id": "12345", "coordinator_id": "12345", "application_ids": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "applications": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "followers": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "sources": ["Job site"], "source_id": "12345", "confidential": false, "anonymized": true, "tags": ["New"], "archived": false, "last_interaction_at": "2020-09-30T07:43:32.000Z", "owner_id": "54321", "sourced_by": "12345", "cv_url": "https://recruitee-main.s3.eu-central-1.amazonaws.com/candidates/36615291/pdf_cv_38swhu4w42k1.pdf?response-content-disposition=inline&response-content-type=application%2Fpdf&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAQYHB7CA5RLR4Y3ON%2F20220514%2Feu-central-1%2Fs3%2Faws4_request&X-Amz-Date=20220514T235654Z&X-Amz-Expires=36000&X-Amz-SignedHeaders=host&X-Amz-Signature=72c0621f5976db75b54de487eb821a8e73480d7f2a6a4a9713ab997944b0561f", "record_url": "https://app.intercom.io/contacts/12345", "rejected_at": "2020-09-30T07:43:32.000Z", "deleted": true, "deleted_by": "12345", "deleted_at": "2020-09-30T07:43:32.000Z", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "initials": "EM", "birthday": "2000-08-12", "cover_letter": "I submit this application to express my sincere interest in the API developer position. In the previous role, I was responsible for leadership and ...", "job_url": "https://democompany.recruitee.com/o/example-talent-pool", "photo_url": "https://unavatar.io/elon-musk", "headline": "PepsiCo, Inc, Central Perk", "title": "CEO", "emails": [], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "addresses": [], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "stage_id": "12345", "recruiter_id": "12345", "coordinator_id": "12345", "application_ids": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "applications": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "followers": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "sources": ["Job site"], "source_id": "12345", "confidential": false, "anonymized": true, "tags": ["New"], "archived": false, "last_interaction_at": "2020-09-30T07:43:32.000Z", "owner_id": "54321", "sourced_by": "12345", "cv_url": "https://recruitee-main.s3.eu-central-1.amazonaws.com/candidates/36615291/pdf_cv_38swhu4w42k1.pdf?response-content-disposition=inline&response-content-type=application%2Fpdf&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAQYHB7CA5RLR4Y3ON%2F20220514%2Feu-central-1%2Fs3%2Faws4_request&X-Amz-Date=20220514T235654Z&X-Amz-Expires=36000&X-Amz-SignedHeaders=host&X-Amz-Signature=72c0621f5976db75b54de487eb821a8e73480d7f2a6a4a9713ab997944b0561f", "record_url": "https://app.intercom.io/contacts/12345", "rejected_at": "2020-09-30T07:43:32.000Z", "deleted": true, "deleted_by": "12345", "deleted_at": "2020-09-30T07:43:32.000Z", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}, {"id": "12345", "name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "initials": "EM", "birthday": "2000-08-12", "cover_letter": "I submit this application to express my sincere interest in the API developer position. In the previous role, I was responsible for leadership and ...", "job_url": "https://democompany.recruitee.com/o/example-talent-pool", "photo_url": "https://unavatar.io/elon-musk", "headline": "PepsiCo, Inc, Central Perk", "title": "CEO", "emails": [], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "stage_id": "12345", "recruiter_id": "12345", "coordinator_id": "12345", "application_ids": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "applications": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "followers": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "sources": ["Job site"], "source_id": "12345", "confidential": false, "anonymized": true, "tags": ["New"], "archived": false, "last_interaction_at": "2020-09-30T07:43:32.000Z", "owner_id": "54321", "sourced_by": "12345", "cv_url": "https://recruitee-main.s3.eu-central-1.amazonaws.com/candidates/36615291/pdf_cv_38swhu4w42k1.pdf?response-content-disposition=inline&response-content-type=application%2Fpdf&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAQYHB7CA5RLR4Y3ON%2F20220514%2Feu-central-1%2Fs3%2Faws4_request&X-Amz-Date=20220514T235654Z&X-Amz-Expires=36000&X-Amz-SignedHeaders=host&X-Amz-Signature=72c0621f5976db75b54de487eb821a8e73480d7f2a6a4a9713ab997944b0561f", "record_url": "https://app.intercom.io/contacts/12345", "rejected_at": "2020-09-30T07:43:32.000Z", "deleted": true, "deleted_by": "12345", "deleted_at": "2020-09-30T07:43:32.000Z", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ats.applicantsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "initials": "EM", "birthday": "2000-08-12", "cover_letter": "I submit this application to express my sincere interest in the API developer position. In the previous role, I was responsible for leadership and ...", "photo_url": "https://unavatar.io/elon-musk", "headline": "PepsiCo, Inc, Central Perk", "title": "CEO", "emails": [], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>"]}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>", "<value>"]}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "websites": [], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "stage_id": "12345", "recruiter_id": "12345", "coordinator_id": "12345", "application_ids": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "applications": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "followers": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "sources": ["Job site"], "confidential": false, "anonymized": true, "tags": ["New"], "archived": false, "owner_id": "54321", "record_url": "https://app.intercom.io/contacts/12345", "deleted": true, "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "lever", "resource": "Applicants", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ats.applicantsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "lever", "resource": "Applicants", "operation": "one", "data": {"id": "12345", "name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "initials": "EM", "birthday": "2000-08-12", "cover_letter": "I submit this application to express my sincere interest in the API developer position. In the previous role, I was responsible for leadership and ...", "job_url": "https://democompany.recruitee.com/o/example-talent-pool", "photo_url": "https://unavatar.io/elon-musk", "headline": "PepsiCo, Inc, Central Perk", "title": "CEO", "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "stage_id": "12345", "recruiter_id": "12345", "coordinator_id": "12345", "application_ids": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "applications": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "followers": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "sources": ["Job site"], "source_id": "12345", "confidential": false, "anonymized": true, "tags": ["New"], "archived": false, "last_interaction_at": "2020-09-30T07:43:32.000Z", "owner_id": "54321", "sourced_by": "12345", "cv_url": "https://recruitee-main.s3.eu-central-1.amazonaws.com/candidates/36615291/pdf_cv_38swhu4w42k1.pdf?response-content-disposition=inline&response-content-type=application%2Fpdf&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAQYHB7CA5RLR4Y3ON%2F20220514%2Feu-central-1%2Fs3%2Faws4_request&X-Amz-Date=20220514T235654Z&X-Amz-Expires=36000&X-Amz-SignedHeaders=host&X-Amz-Signature=72c0621f5976db75b54de487eb821a8e73480d7f2a6a4a9713ab997944b0561f", "record_url": "https://app.intercom.io/contacts/12345", "rejected_at": "2020-09-30T07:43:32.000Z", "deleted": true, "deleted_by": "12345", "deleted_at": "2020-09-30T07:43:32.000Z", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ats.applicantsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "initials": "EM", "birthday": "2000-08-12", "cover_letter": "I submit this application to express my sincere interest in the API developer position. In the previous role, I was responsible for leadership and ...", "photo_url": "https://unavatar.io/elon-musk", "headline": "PepsiCo, Inc, Central Perk", "title": "CEO", "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "addresses": [], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}], "social_links": [], "stage_id": "12345", "recruiter_id": "12345", "coordinator_id": "12345", "application_ids": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "applications": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "followers": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "sources": ["Job site"], "confidential": false, "anonymized": true, "tags": ["New"], "archived": false, "owner_id": "54321", "record_url": "https://app.intercom.io/contacts/12345", "deleted": true, "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "lever", "resource": "Applicants", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ats.applicantsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "lever", "resource": "Applicants", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ats.applicationsAll:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sap-successfactors", "resource": "Applications", "operation": "all", "data": [{"id": "12345", "applicant_id": "12345", "job_id": "12345", "status": "open", "stage": {"id": "12345", "name": "12345"}, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "applicant_id": "12345", "job_id": "12345", "status": "open", "stage": {"id": "12345", "name": "12345"}, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "applicant_id": "12345", "job_id": "12345", "status": "open", "stage": {"id": "12345", "name": "12345"}, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": []}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ats.applicationsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"applicant_id": "12345", "job_id": "12345", "status": "open", "stage": {"id": "12345", "name": "12345"}, "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "sap-successfactors", "resource": "Applications", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ats.applicationsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sap-successfactors", "resource": "Applications", "operation": "one", "data": {"id": "12345", "applicant_id": "12345", "job_id": "12345", "status": "open", "stage": {"id": "12345", "name": "12345"}, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ats.applicationsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"applicant_id": "12345", "job_id": "12345", "status": "open", "stage": {"id": "12345", "name": "12345"}, "pass_through": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sap-successfactors", "resource": "Applications", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ats.applicationsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sap-successfactors", "resource": "Applications", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.companiesAll:
    "":
      parameters:
        query:
          filter: {"name": "SpaceX"}
          sort: {"by": "created_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "all", "data": [{"id": "12345", "name": "SpaceX", "interaction_count": 1, "owner_id": "12345", "image": "https://www.spacex.com/static/images/share.jpg", "description": "Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.", "vat_number": "BE0689615164", "currency": "USD", "status": "Open", "fax": "+12129876543", "annual_revenue": "+$35m", "number_of_employees": "500-1000", "industry": "Apparel", "ownership": "Public", "sales_tax_number": "12456EN", "payee_number": "78932EN", "abn_or_tfn": "46 115 614 695", "abn_branch": "123", "acn": "XXX XXX XXX", "first_name": "Elon", "last_name": "Musk", "parent_id": "22345", "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [], "phone_numbers": [], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "row_type": {"id": "12345", "name": "Customer Account"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>", "<value>"]}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>"]}], "tags": ["New"], "read_only": false, "last_activity_at": "2020-09-30T07:43:32.000Z", "deleted": false, "salutation": "Mr", "birthday": "2000-08-12", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "name": "SpaceX", "interaction_count": 1, "owner_id": "12345", "image": "https://www.spacex.com/static/images/share.jpg", "description": "Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.", "vat_number": "BE0689615164", "currency": "USD", "status": "Open", "fax": "+12129876543", "annual_revenue": "+$35m", "number_of_employees": "500-1000", "industry": "Apparel", "ownership": "Public", "sales_tax_number": "12456EN", "payee_number": "78932EN", "abn_or_tfn": "46 115 614 695", "abn_branch": "123", "acn": "XXX XXX XXX", "first_name": "Elon", "last_name": "Musk", "parent_id": "22345", "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "row_type": {"id": "12345", "name": "Customer Account"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}], "tags": ["New"], "read_only": false, "last_activity_at": "2020-09-30T07:43:32.000Z", "deleted": false, "salutation": "Mr", "birthday": "2000-08-12", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}, {"id": "12345", "name": "SpaceX", "interaction_count": 1, "owner_id": "12345", "image": "https://www.spacex.com/static/images/share.jpg", "description": "Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.", "vat_number": "BE0689615164", "currency": "USD", "status": "Open", "fax": "+12129876543", "annual_revenue": "+$35m", "number_of_employees": "500-1000", "industry": "Apparel", "ownership": "Public", "sales_tax_number": "12456EN", "payee_number": "78932EN", "abn_or_tfn": "46 115 614 695", "abn_branch": "123", "acn": "XXX XXX XXX", "first_name": "Elon", "last_name": "Musk", "parent_id": "22345", "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "row_type": {"id": "12345", "name": "Customer Account"}, "custom_fields": [], "tags": ["New"], "read_only": false, "last_activity_at": "2020-09-30T07:43:32.000Z", "deleted": false, "salutation": "Mr", "birthday": "2000-08-12", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.companiesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "SpaceX", "owner_id": "12345", "image": "https://www.spacex.com/static/images/share.jpg", "description": "Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.", "vat_number": "BE0689615164", "currency": "USD", "status": "Open", "fax": "+12129876543", "annual_revenue": "+$35m", "number_of_employees": "500-1000", "industry": "Apparel", "ownership": "Public", "sales_tax_number": "12456EN", "payee_number": "78932EN", "abn_or_tfn": "46 115 614 695", "abn_branch": "123", "acn": "XXX XXX XXX", "first_name": "Elon", "last_name": "Musk", "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "websites": [], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "row_type": {"id": "12345", "name": "Customer Account"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}], "tags": ["New"], "read_only": false, "salutation": "Mr", "birthday": "2000-08-12", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.companiesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "one", "data": {"id": "12345", "name": "SpaceX", "interaction_count": 1, "owner_id": "12345", "image": "https://www.spacex.com/static/images/share.jpg", "description": "Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.", "vat_number": "BE0689615164", "currency": "USD", "status": "Open", "fax": "+12129876543", "annual_revenue": "+$35m", "number_of_employees": "500-1000", "industry": "Apparel", "ownership": "Public", "sales_tax_number": "12456EN", "payee_number": "78932EN", "abn_or_tfn": "46 115 614 695", "abn_branch": "123", "acn": "XXX XXX XXX", "first_name": "Elon", "last_name": "Musk", "parent_id": "22345", "bank_accounts": [], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "row_type": {"id": "12345", "name": "Customer Account"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>", "<value>"]}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}], "tags": ["New"], "read_only": false, "last_activity_at": "2020-09-30T07:43:32.000Z", "deleted": false, "salutation": "Mr", "birthday": "2000-08-12", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.companiesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "SpaceX", "owner_id": "12345", "image": "https://www.spacex.com/static/images/share.jpg", "description": "Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.", "vat_number": "BE0689615164", "currency": "USD", "status": "Open", "fax": "+12129876543", "annual_revenue": "+$35m", "number_of_employees": "500-1000", "industry": "Apparel", "ownership": "Public", "sales_tax_number": "12456EN", "payee_number": "78932EN", "abn_or_tfn": "46 115 614 695", "abn_branch": "123", "acn": "XXX XXX XXX", "first_name": "Elon", "last_name": "Musk", "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "row_type": {"id": "12345", "name": "Customer Account"}, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "tags": ["New"], "read_only": false, "salutation": "Mr", "birthday": "2000-08-12", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.companiesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.contactsAll:
    "":
      parameters:
        query:
          filter: {"name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@tesla.com", "phone_number": "111-111-1111", "company_id": "12345", "owner_id": "12345"}
          sort: {"by": "created_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "contacts", "operation": "all", "data": [{"id": "12345", "name": "Elon Musk", "owner_id": "54321", "type": "personal", "company_id": "23456", "company_name": "23456", "lead_id": "34567", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "title": "CEO", "department": "Engineering", "language": "EN", "gender": "female", "birthday": "2000-08-12", "photo_url": "https://unavatar.io/elon-musk", "lead_source": "Cold Call", "fax": "+12129876543", "description": "Internal champion", "current_balance": 10.5, "status": "open", "active": true, "websites": [], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [], "email_domain": "gmail.com", "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "tags": ["New"], "first_call_at": "2020-09-30T07:43:32.000Z", "first_email_at": "2020-09-30T07:43:32.000Z", "last_activity_at": "2020-09-30T07:43:32.000Z", "updated_at": "2017-08-12T20:43:21.291Z", "created_at": "2017-08-12T20:43:21.291Z", "opportunity_ids": ["12345"], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "name": "Elon Musk", "owner_id": "54321", "type": "personal", "company_id": "23456", "company_name": "23456", "lead_id": "34567", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "title": "CEO", "department": "Engineering", "language": "EN", "gender": "female", "birthday": "2000-08-12", "photo_url": "https://unavatar.io/elon-musk", "lead_source": "Cold Call", "fax": "+12129876543", "description": "Internal champion", "current_balance": 10.5, "status": "open", "active": true, "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "email_domain": "gmail.com", "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}], "tags": ["New"], "first_call_at": "2020-09-30T07:43:32.000Z", "first_email_at": "2020-09-30T07:43:32.000Z", "last_activity_at": "2020-09-30T07:43:32.000Z", "updated_at": "2017-08-12T20:43:21.291Z", "created_at": "2017-08-12T20:43:21.291Z", "opportunity_ids": ["12345"], "pass_through": []}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.contactsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Elon Musk", "owner_id": "54321", "type": "personal", "company_id": "23456", "company_name": "23456", "lead_id": "34567", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "title": "CEO", "department": "Engineering", "language": "EN", "gender": "female", "birthday": "2000-08-12", "photo_url": "https://unavatar.io/elon-musk", "lead_source": "Cold Call", "fax": "+12129876543", "description": "Internal champion", "current_balance": 10.5, "status": "open", "active": true, "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [], "emails": [], "email_domain": "gmail.com", "custom_fields": [], "tags": ["New"], "opportunity_ids": ["12345"], "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "contacts", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.contactsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
          filter: {"name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@tesla.com", "phone_number": "111-111-1111", "company_id": "12345", "owner_id": "12345"}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "one", "data": {"id": "12345", "name": "Elon Musk", "owner_id": "54321", "type": "personal", "company_id": "23456", "company_name": "23456", "lead_id": "34567", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "title": "CEO", "department": "Engineering", "language": "EN", "gender": "female", "birthday": "2000-08-12", "photo_url": "https://unavatar.io/elon-musk", "lead_source": "Cold Call", "fax": "+12129876543", "description": "Internal champion", "current_balance": 10.5, "status": "open", "active": true, "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "email_domain": "gmail.com", "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}], "tags": ["New"], "first_call_at": "2020-09-30T07:43:32.000Z", "first_email_at": "2020-09-30T07:43:32.000Z", "last_activity_at": "2020-09-30T07:43:32.000Z", "updated_at": "2017-08-12T20:43:21.291Z", "created_at": "2017-08-12T20:43:21.291Z", "opportunity_ids": ["12345"], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.contactsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Elon Musk", "owner_id": "54321", "type": "personal", "company_id": "23456", "company_name": "23456", "lead_id": "34567", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "title": "CEO", "department": "Engineering", "language": "EN", "gender": "female", "birthday": "2000-08-12", "photo_url": "https://unavatar.io/elon-musk", "lead_source": "Cold Call", "fax": "+12129876543", "description": "Internal champion", "current_balance": 10.5, "status": "open", "active": true, "websites": [], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "email_domain": "gmail.com", "custom_fields": [], "tags": ["New"], "opportunity_ids": ["12345"], "pass_through": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "contacts", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.contactsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "contacts", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.opportunitiesAll:
    "":
      parameters:
        query:
          filter: {"title": "Tesla deal", "status": "Completed", "monetary_amount": 75000, "win_probability": 50, "company_id": "1234", "owner_id": "1234", "primary_contact_id": "1234"}
          sort: {"by": "created_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "opportunities", "operation": "all", "data": [{"id": "12345", "title": "New Rocket", "primary_contact_id": "12345", "description": "Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.", "type": "Existing Customer - Upgrade", "monetary_amount": 75000, "currency": "USD", "win_probability": 40, "expected_revenue": 75000, "close_date": "2020-10-30", "loss_reason_id": "12345", "loss_reason": "No budget", "won_reason_id": "12345", "won_reason": "Best pitch", "pipeline_id": "12345", "pipeline_stage_id": "12345", "source_id": "12345", "lead_id": "12345", "lead_source": "Website", "contact_id": "12345", "contact_ids": ["12345"], "company_id": "12345", "company_name": "Copper", "owner_id": "12345", "priority": "None", "status": "Open", "status_id": "12345", "tags": ["New"], "interaction_count": 0, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}], "stage_last_changed_at": "2020-09-30T07:43:32.000Z", "last_activity_at": "2020-09-30T07:43:32.000Z", "deleted": false, "date_stage_changed": "2020-09-30T00:00:00.000Z", "date_last_contacted": "2020-09-30T00:00:00.000Z", "date_lead_created": "2020-09-30T00:00:00.000Z", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}, {"id": "12345", "title": "New Rocket", "primary_contact_id": "12345", "description": "Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.", "type": "Existing Customer - Upgrade", "monetary_amount": 75000, "currency": "USD", "win_probability": 40, "expected_revenue": 75000, "close_date": "2020-10-30", "loss_reason_id": "12345", "loss_reason": "No budget", "won_reason_id": "12345", "won_reason": "Best pitch", "pipeline_id": "12345", "pipeline_stage_id": "12345", "source_id": "12345", "lead_id": "12345", "lead_source": "Website", "contact_id": "12345", "contact_ids": ["12345"], "company_id": "12345", "company_name": "Copper", "owner_id": "12345", "priority": "None", "status": "Open", "status_id": "12345", "tags": ["New"], "interaction_count": 0, "custom_fields": [], "stage_last_changed_at": "2020-09-30T07:43:32.000Z", "last_activity_at": "2020-09-30T07:43:32.000Z", "deleted": false, "date_stage_changed": "2020-09-30T00:00:00.000Z", "date_last_contacted": "2020-09-30T00:00:00.000Z", "date_lead_created": "2020-09-30T00:00:00.000Z", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}, {"id": "12345", "title": "New Rocket", "primary_contact_id": "12345", "description": "Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.", "type": "Existing Customer - Upgrade", "monetary_amount": 75000, "currency": "USD", "win_probability": 40, "expected_revenue": 75000, "close_date": "2020-10-30", "loss_reason_id": "12345", "loss_reason": "No budget", "won_reason_id": "12345", "won_reason": "Best pitch", "pipeline_id": "12345", "pipeline_stage_id": "12345", "source_id": "12345", "lead_id": "12345", "lead_source": "Website", "contact_id": "12345", "contact_ids": ["12345"], "company_id": "12345", "company_name": "Copper", "owner_id": "12345", "priority": "None", "status": "Open", "status_id": "12345", "tags": ["New"], "interaction_count": 0, "custom_fields": [], "stage_last_changed_at": "2020-09-30T07:43:32.000Z", "last_activity_at": "2020-09-30T07:43:32.000Z", "deleted": false, "date_stage_changed": "2020-09-30T00:00:00.000Z", "date_last_contacted": "2020-09-30T00:00:00.000Z", "date_lead_created": "2020-09-30T00:00:00.000Z", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.opportunitiesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"title": "New Rocket", "primary_contact_id": "12345", "description": "Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.", "type": "Existing Customer - Upgrade", "monetary_amount": 75000, "currency": "USD", "win_probability": 40, "close_date": "2020-10-30", "loss_reason_id": "12345", "loss_reason": "No budget", "won_reason_id": "12345", "won_reason": "Best pitch", "pipeline_id": "12345", "pipeline_stage_id": "12345", "source_id": "12345", "lead_id": "12345", "lead_source": "Website", "contact_id": "12345", "contact_ids": ["12345"], "company_id": "12345", "company_name": "Copper", "owner_id": "12345", "priority": "None", "status": "Open", "status_id": "12345", "tags": ["New"], "custom_fields": [], "stage_last_changed_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "opportunities", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.opportunitiesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "opportunities", "operation": "one", "data": {"id": "12345", "title": "New Rocket", "primary_contact_id": "12345", "description": "Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.", "type": "Existing Customer - Upgrade", "monetary_amount": 75000, "currency": "USD", "win_probability": 40, "expected_revenue": 75000, "close_date": "2020-10-30", "loss_reason_id": "12345", "loss_reason": "No budget", "won_reason_id": "12345", "won_reason": "Best pitch", "pipeline_id": "12345", "pipeline_stage_id": "12345", "source_id": "12345", "lead_id": "12345", "lead_source": "Website", "contact_id": "12345", "contact_ids": ["12345"], "company_id": "12345", "company_name": "Copper", "owner_id": "12345", "priority": "None", "status": "Open", "status_id": "12345", "tags": ["New"], "interaction_count": 0, "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}], "stage_last_changed_at": "2020-09-30T07:43:32.000Z", "last_activity_at": "2020-09-30T07:43:32.000Z", "deleted": false, "date_stage_changed": "2020-09-30T00:00:00.000Z", "date_last_contacted": "2020-09-30T00:00:00.000Z", "date_lead_created": "2020-09-30T00:00:00.000Z", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.opportunitiesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"title": "New Rocket", "primary_contact_id": "12345", "description": "Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.", "type": "Existing Customer - Upgrade", "monetary_amount": 75000, "currency": "USD", "win_probability": 40, "close_date": "2020-10-30", "loss_reason_id": "12345", "loss_reason": "No budget", "won_reason_id": "12345", "won_reason": "Best pitch", "pipeline_id": "12345", "pipeline_stage_id": "12345", "source_id": "12345", "lead_id": "12345", "lead_source": "Website", "contact_id": "12345", "contact_ids": ["12345"], "company_id": "12345", "company_name": "Copper", "owner_id": "12345", "priority": "None", "status": "Open", "status_id": "12345", "tags": ["New"], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}], "stage_last_changed_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.opportunitiesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.leadsAll:
    "":
      parameters:
        query:
          filter: {"name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@tesla.com", "phone_number": "1234567890"}
          sort: {"by": "created_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "all", "data": [{"id": "12345", "name": "Elon Musk", "company_name": "Spacex", "owner_id": "54321", "owner_name": "John Doe", "company_id": "2", "lead_id": "2", "lead_source": "Cold Call", "first_name": "Elon", "last_name": "Musk", "description": "A thinker", "prefix": "Sir", "title": "CEO", "language": "EN", "status": "New", "monetary_amount": 75000, "currency": "USD", "fax": "+12129876543", "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [], "phone_numbers": [], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>"]}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}], "tags": ["New"], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.leadsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Elon Musk", "company_name": "Spacex", "owner_id": "54321", "owner_name": "John Doe", "company_id": "2", "lead_id": "2", "lead_source": "Cold Call", "first_name": "Elon", "last_name": "Musk", "description": "A thinker", "prefix": "Sir", "title": "CEO", "language": "EN", "status": "New", "monetary_amount": 75000, "currency": "USD", "fax": "+12129876543", "websites": [], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [], "tags": ["New"], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.leadsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "one", "data": {"id": "12345", "name": "Elon Musk", "company_name": "Spacex", "owner_id": "54321", "owner_name": "John Doe", "company_id": "2", "lead_id": "2", "lead_source": "Cold Call", "first_name": "Elon", "last_name": "Musk", "description": "A thinker", "prefix": "Sir", "title": "CEO", "language": "EN", "status": "New", "monetary_amount": 75000, "currency": "USD", "fax": "+12129876543", "websites": [], "addresses": [], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}], "tags": ["New"], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.leadsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Elon Musk", "company_name": "Spacex", "owner_id": "54321", "owner_name": "John Doe", "company_id": "2", "lead_id": "2", "lead_source": "Cold Call", "first_name": "Elon", "last_name": "Musk", "description": "A thinker", "prefix": "Sir", "title": "CEO", "language": "EN", "status": "New", "monetary_amount": 75000, "currency": "USD", "fax": "+12129876543", "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>"]}], "tags": ["New"], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.leadsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.pipelinesAll:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "pipelines", "operation": "all", "data": [{"id": "default", "name": "Sales Pipeline", "currency": "USD", "archived": false, "active": false, "display_order": 1, "win_probability_enabled": true, "stages": [{"id": "contractsent", "name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}, {"id": "contractsent", "name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "default", "name": "Sales Pipeline", "currency": "USD", "archived": false, "active": false, "display_order": 1, "win_probability_enabled": true, "stages": [{"id": "contractsent", "name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}, {"id": "contractsent", "name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}, {"id": "contractsent", "name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.pipelinesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"id": "default", "name": "Sales Pipeline", "currency": "USD", "archived": false, "active": false, "display_order": 1, "win_probability_enabled": true, "stages": [{"name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}, {"name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}, {"name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}], "pass_through": [{"service_id": "<id>", "extend_paths": []}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "pipelines", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.pipelinesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "pipelines", "operation": "one", "data": {"id": "default", "name": "Sales Pipeline", "currency": "USD", "archived": false, "active": false, "display_order": 1, "win_probability_enabled": true, "stages": [{"id": "contractsent", "name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}, {"id": "contractsent", "name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.pipelinesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"id": "default", "name": "Sales Pipeline", "currency": "USD", "archived": false, "active": false, "display_order": 1, "win_probability_enabled": true, "stages": [{"name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}, {"name": "Contract Sent", "value": "CONTRACT_SENT", "win_probability": 50, "display_order": 1}], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "pipelines", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.pipelinesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.notesAll:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "notes", "operation": "all", "data": [{"id": "12345", "title": "Meeting Notes", "content": "Office hours are 9AM-6PM", "owner_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "active": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}, {"id": "12345", "title": "Meeting Notes", "content": "Office hours are 9AM-6PM", "owner_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "active": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "title": "Meeting Notes", "content": "Office hours are 9AM-6PM", "owner_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "active": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.notesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"title": "Meeting Notes", "content": "Office hours are 9AM-6PM", "owner_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "active": true, "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "notes", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.notesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "notes", "operation": "one", "data": {"id": "12345", "title": "Meeting Notes", "content": "Office hours are 9AM-6PM", "owner_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "active": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.notesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"title": "Meeting Notes", "content": "Office hours are 9AM-6PM", "owner_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "active": true, "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "notes", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.notesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "notes", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.usersAll:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "users", "operation": "all", "data": [{"id": "12345", "parent_id": "54321", "username": "masterofcoin", "first_name": "Elon", "last_name": "Musk", "title": "CEO", "division": "Europe", "company_name": "SpaceX", "employee_number": "123456-AB", "description": "A description", "image": "https://logo.clearbit.com/spacex.com?s=128", "language": "EN", "status": "active", "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "updated_at": "2017-08-12T20:43:21.291Z", "created_at": "2017-08-12T20:43:21.291Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.usersAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"parent_id": "54321", "username": "masterofcoin", "first_name": "Elon", "last_name": "Musk", "title": "CEO", "division": "Europe", "company_name": "SpaceX", "employee_number": "123456-AB", "description": "A description", "image": "https://logo.clearbit.com/spacex.com?s=128", "language": "EN", "status": "active", "password": "supersecretpassword", "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "users", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.usersOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "one", "data": {"id": "12345", "parent_id": "54321", "username": "masterofcoin", "first_name": "Elon", "last_name": "Musk", "title": "CEO", "division": "Europe", "company_name": "SpaceX", "employee_number": "123456-AB", "description": "A description", "image": "https://logo.clearbit.com/spacex.com?s=128", "language": "EN", "status": "active", "addresses": [], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "updated_at": "2017-08-12T20:43:21.291Z", "created_at": "2017-08-12T20:43:21.291Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.usersUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"parent_id": "54321", "username": "masterofcoin", "first_name": "Elon", "last_name": "Musk", "title": "CEO", "division": "Europe", "company_name": "SpaceX", "employee_number": "123456-AB", "description": "A description", "image": "https://logo.clearbit.com/spacex.com?s=128", "language": "EN", "status": "active", "password": "supersecretpassword", "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.usersDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "users", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.activitiesAll:
    "":
      parameters:
        query:
          filter: {"company_id": "1234", "owner_id": "1234", "contact_id": "1234", "updated_since": "2020-09-30T07:43:32.000Z", "type": "Task"}
          sort: {"by": "created_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "activities", "operation": "all", "data": [], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.activitiesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"activity_datetime": "2021-05-01T12:00:00.000Z", "duration_seconds": 1800, "user_id": "12345", "account_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "owner_id": "12345", "campaign_id": "12345", "case_id": "12345", "asset_id": "12345", "contract_id": "12345", "product_id": "12345", "solution_id": "12345", "custom_object_id": "12345", "type": "meeting", "title": "Meeting", "description": "More info about the meeting", "note": "An internal note about the meeting", "location": "Space", "location_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "all_day_event": false, "private": true, "group_event": true, "event_sub_type": "debrief", "group_event_type": "Proposed", "child": false, "archived": false, "deleted": false, "show_as": "busy", "done": false, "start_datetime": "2021-05-01T12:00:00.000Z", "end_datetime": "2021-05-01T12:30:00.000Z", "activity_date": "2021-05-01", "end_date": "2021-05-01", "recurrent": false, "reminder_datetime": "2021-05-01T17:00:00.000Z", "reminder_set": false, "video_conference_url": "https://us02web.zoom.us/j/88120759396", "video_conference_id": "zoom:88120759396", "custom_fields": [], "attendees": [{"name": "Elon Musk", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "email_address": "elon@musk.com", "is_organizer": true, "status": "accepted"}, {"name": "Elon Musk", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "email_address": "elon@musk.com", "is_organizer": true, "status": "accepted"}, {"name": "Elon Musk", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "email_address": "elon@musk.com", "is_organizer": true, "status": "accepted"}], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "activities", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.activitiesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "activities", "operation": "one", "data": {"id": "12345", "downstream_id": "12345", "activity_datetime": "2021-05-01T12:00:00.000Z", "duration_seconds": 1800, "user_id": "12345", "account_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "owner_id": "12345", "campaign_id": "12345", "case_id": "12345", "asset_id": "12345", "contract_id": "12345", "product_id": "12345", "solution_id": "12345", "custom_object_id": "12345", "type": "meeting", "title": "Meeting", "description": "More info about the meeting", "note": "An internal note about the meeting", "location": "Space", "location_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "all_day_event": false, "private": true, "group_event": true, "event_sub_type": "debrief", "group_event_type": "Proposed", "child": false, "archived": false, "deleted": false, "show_as": "busy", "done": false, "start_datetime": "2021-05-01T12:00:00.000Z", "end_datetime": "2021-05-01T12:30:00.000Z", "duration_minutes": 30, "activity_date": "2021-05-01", "end_date": "2021-05-01", "recurrent": false, "reminder_datetime": "2021-05-01T17:00:00.000Z", "reminder_set": false, "video_conference_url": "https://us02web.zoom.us/j/88120759396", "video_conference_id": "zoom:88120759396", "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}], "attendees": [{"id": "12345", "name": "Elon Musk", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "email_address": "elon@musk.com", "is_organizer": true, "status": "accepted", "user_id": "12345", "contact_id": "12345", "updated_at": "2017-08-12T20:43:21.291Z", "created_at": "2017-08-12T20:43:21.291Z"}], "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.activitiesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"activity_datetime": "2021-05-01T12:00:00.000Z", "duration_seconds": 1800, "user_id": "12345", "account_id": "12345", "contact_id": "12345", "company_id": "12345", "opportunity_id": "12345", "lead_id": "12345", "owner_id": "12345", "campaign_id": "12345", "case_id": "12345", "asset_id": "12345", "contract_id": "12345", "product_id": "12345", "solution_id": "12345", "custom_object_id": "12345", "type": "meeting", "title": "Meeting", "description": "More info about the meeting", "note": "An internal note about the meeting", "location": "Space", "location_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "all_day_event": false, "private": true, "group_event": true, "event_sub_type": "debrief", "group_event_type": "Proposed", "child": false, "archived": false, "deleted": false, "show_as": "busy", "done": false, "start_datetime": "2021-05-01T12:00:00.000Z", "end_datetime": "2021-05-01T12:30:00.000Z", "activity_date": "2021-05-01", "end_date": "2021-05-01", "recurrent": false, "reminder_datetime": "2021-05-01T17:00:00.000Z", "reminder_set": false, "video_conference_url": "https://us02web.zoom.us/j/88120759396", "video_conference_id": "zoom:88120759396", "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>", "<value>"]}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>"]}], "attendees": [{"name": "Elon Musk", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "email_address": "elon@musk.com", "is_organizer": true, "status": "accepted"}, {"name": "Elon Musk", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "email_address": "elon@musk.com", "is_organizer": true, "status": "accepted"}, {"name": "Elon Musk", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "prefix": "Mr.", "suffix": "PhD", "email_address": "elon@musk.com", "is_organizer": true, "status": "accepted"}], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "activities", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  crm.activitiesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "activities", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ecommerce.ordersAll:
    "":
      parameters:
        query:
          filter: {"email": "elon@musk.com", "customer_id": "123", "updated_since": "2020-09-30T07:43:32.000Z", "created_since": "2020-09-30T07:43:32.000Z"}
          sort: {"by": "created_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "shopify", "resource": "orders", "operation": "all", "data": [{"id": "12345", "order_number": "123456789", "currency": "USD", "discounts": [{"code": "SUMMER20", "amount": "5.99", "percentage": "0.1"}, {"code": "SUMMER20", "amount": "5.99", "percentage": "0.1"}, {"code": "SUMMER20", "amount": "5.99", "percentage": "0.1"}], "sub_total": "45.17", "shipping_cost": "5.17", "coupon_discount": "5.5", "total_discount": "5.5", "total_tax": "5.16", "total_amount": "50.17", "refunded_amount": "5.5", "status": "active", "payment_status": "paid", "fulfillment_status": "shipped", "payment_method": "credit_card", "customer": {"id": "12345", "name": "John Doe", "first_name": "John", "last_name": "Doe", "company_name": "Acme Inc.", "phone_numbers": [], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}]}, "billing_address": {"line1": "123 Main Street", "line2": "Apt 1", "company_name": "Acme Inc.", "city": "New York", "state": "NY", "postal_code": "10001", "country": "US"}, "shipping_address": {"line1": "123 Main Street", "line2": "Apt 1", "company_name": "Acme Inc.", "city": "New York", "state": "NY", "postal_code": "10001", "country": "US"}, "tracking": [{"provider": "UPS", "number": "1Z9999999999999999", "url": "https://www.ups.com/track?tracknum=1Z9999999999999999", "updated_at": "2020-09-30T07:43:32.000Z"}, {"provider": "UPS", "number": "1Z9999999999999999", "url": "https://www.ups.com/track?tracknum=1Z9999999999999999", "updated_at": "2020-09-30T07:43:32.000Z"}], "line_items": [{"id": "12345", "product_id": "def456", "variant_id": "ghi789", "sku": "MBP123-16GB-SILVER-13", "name": "Midnight 16inch MacBook Pro", "description": "Powerful and portable, the MacBook Pro is perfect for professionals and creatives.", "options": [{"id": "jkl012", "name": "Color", "value": "Silver"}, {"id": "jkl012", "name": "Color", "value": "Silver"}], "quantity": "2", "unit_price": "19.99", "tax_rate": "0.08", "tax_amount": "1.6", "is_refunded": false, "refunded_amount": "0", "refunded_quantity": "0", "sub_total": "43.18", "total_amount": "43.18", "discounts": [{"code": "SUMMER20", "amount": "5.99", "percentage": "0.1"}, {"code": "SUMMER20", "amount": "5.99", "percentage": "0.1"}, {"code": "SUMMER20", "amount": "5.99", "percentage": "0.1"}]}, {"id": "12345", "product_id": "def456", "variant_id": "ghi789", "sku": "MBP123-16GB-SILVER-13", "name": "Midnight 16inch MacBook Pro", "description": "Powerful and portable, the MacBook Pro is perfect for professionals and creatives.", "options": [], "quantity": "2", "unit_price": "19.99", "tax_rate": "0.08", "tax_amount": "1.6", "is_refunded": false, "refunded_amount": "0", "refunded_quantity": "0", "sub_total": "43.18", "total_amount": "43.18", "discounts": [{"code": "SUMMER20", "amount": "5.99", "percentage": "0.1"}]}, {"id": "12345", "product_id": "def456", "variant_id": "ghi789", "sku": "MBP123-16GB-SILVER-13", "name": "Midnight 16inch MacBook Pro", "description": "Powerful and portable, the MacBook Pro is perfect for professionals and creatives.", "options": [{"id": "jkl012", "name": "Color", "value": "Silver"}, {"id": "jkl012", "name": "Color", "value": "Silver"}], "quantity": "2", "unit_price": "19.99", "tax_rate": "0.08", "tax_amount": "1.6", "is_refunded": false, "refunded_amount": "0", "refunded_quantity": "0", "sub_total": "43.18", "total_amount": "43.18", "discounts": [{"code": "SUMMER20", "amount": "5.99", "percentage": "0.1"}]}], "note": "Special instructions for delivery", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ecommerce.ordersOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "shopify", "resource": "orders", "operation": "one", "data": {"id": "12345", "order_number": "123456789", "currency": "USD", "discounts": [{"code": "SUMMER20", "amount": "5.99", "percentage": "0.1"}, {"code": "SUMMER20", "amount": "5.99", "percentage": "0.1"}, {"code": "SUMMER20", "amount": "5.99", "percentage": "0.1"}], "sub_total": "45.17", "shipping_cost": "5.17", "coupon_discount": "5.5", "total_discount": "5.5", "total_tax": "5.16", "total_amount": "50.17", "refunded_amount": "5.5", "status": "active", "payment_status": "paid", "fulfillment_status": "shipped", "payment_method": "credit_card", "customer": {"id": "12345", "name": "John Doe", "first_name": "John", "last_name": "Doe", "company_name": "Acme Inc.", "phone_numbers": [], "emails": []}, "billing_address": {"line1": "123 Main Street", "line2": "Apt 1", "company_name": "Acme Inc.", "city": "New York", "state": "NY", "postal_code": "10001", "country": "US"}, "shipping_address": {"line1": "123 Main Street", "line2": "Apt 1", "company_name": "Acme Inc.", "city": "New York", "state": "NY", "postal_code": "10001", "country": "US"}, "tracking": [{"provider": "UPS", "number": "1Z9999999999999999", "url": "https://www.ups.com/track?tracknum=1Z9999999999999999", "updated_at": "2020-09-30T07:43:32.000Z"}], "line_items": [{"id": "12345", "product_id": "def456", "variant_id": "ghi789", "sku": "MBP123-16GB-SILVER-13", "name": "Midnight 16inch MacBook Pro", "description": "Powerful and portable, the MacBook Pro is perfect for professionals and creatives.", "options": [{"id": "jkl012", "name": "Color", "value": "Silver"}, {"id": "jkl012", "name": "Color", "value": "Silver"}], "quantity": "2", "unit_price": "19.99", "tax_rate": "0.08", "tax_amount": "1.6", "is_refunded": false, "refunded_amount": "0", "refunded_quantity": "0", "sub_total": "43.18", "total_amount": "43.18", "discounts": []}, {"id": "12345", "product_id": "def456", "variant_id": "ghi789", "sku": "MBP123-16GB-SILVER-13", "name": "Midnight 16inch MacBook Pro", "description": "Powerful and portable, the MacBook Pro is perfect for professionals and creatives.", "options": [{"id": "jkl012", "name": "Color", "value": "Silver"}, {"id": "jkl012", "name": "Color", "value": "Silver"}], "quantity": "2", "unit_price": "19.99", "tax_rate": "0.08", "tax_amount": "1.6", "is_refunded": false, "refunded_amount": "0", "refunded_quantity": "0", "sub_total": "43.18", "total_amount": "43.18", "discounts": [{"code": "SUMMER20", "amount": "5.99", "percentage": "0.1"}, {"code": "SUMMER20", "amount": "5.99", "percentage": "0.1"}, {"code": "SUMMER20", "amount": "5.99", "percentage": "0.1"}]}, {"id": "12345", "product_id": "def456", "variant_id": "ghi789", "sku": "MBP123-16GB-SILVER-13", "name": "Midnight 16inch MacBook Pro", "description": "Powerful and portable, the MacBook Pro is perfect for professionals and creatives.", "options": [{"id": "jkl012", "name": "Color", "value": "Silver"}, {"id": "jkl012", "name": "Color", "value": "Silver"}], "quantity": "2", "unit_price": "19.99", "tax_rate": "0.08", "tax_amount": "1.6", "is_refunded": false, "refunded_amount": "0", "refunded_quantity": "0", "sub_total": "43.18", "total_amount": "43.18", "discounts": [{"code": "SUMMER20", "amount": "5.99", "percentage": "0.1"}, {"code": "SUMMER20", "amount": "5.99", "percentage": "0.1"}, {"code": "SUMMER20", "amount": "5.99", "percentage": "0.1"}]}], "note": "Special instructions for delivery", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ecommerce.productsAll:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "shopify", "resource": "products", "operation": "all", "data": [], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ecommerce.productsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "shopify", "resource": "products", "operation": "one", "data": {"id": "12345", "name": "MacBook Pro", "description": "Powerful and portable, the MacBook Pro is perfect for professionals and creatives.", "status": "active", "price": "1999.99", "sku": "MBP123", "inventory_quantity": "10", "images": [{"id": "12345", "url": "https://example.com/macbook-pro.jpg"}, {"id": "12345", "url": "https://example.com/macbook-pro.jpg"}], "weight": "1.25", "weight_unit": "lb", "options": [{"id": "1", "name": "Color", "values": ["Red"]}], "variants": [{"id": "1", "name": "Midnight 16inch MacBook Pro", "price": "1999.99", "sku": "MBP123-16GB-SILVER-13", "inventory_quantity": "5", "weight": "1.25", "weight_unit": "lb", "options": [{"id": "1", "name": "Color", "value": "Silver"}], "images": []}], "tags": ["Apple"], "categories": [], "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ecommerce.customersAll:
    "":
      parameters:
        query:
          filter: {"email": "elon@musk.com", "phone_number": "111-111-1111"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "shopify", "resource": "customers", "operation": "all", "data": [{"id": "12345", "name": "John Doe", "first_name": "John", "last_name": "Doe", "company_name": "Acme Inc.", "status": "active", "currency": "USD", "emails": [], "phone_numbers": [], "addresses": [{"type": "billing", "id": "12345", "line1": "Main street", "line2": "apt #", "city": "Anytown", "state": "Ohio", "postal_code": "12345", "country": "US"}, {"type": "billing", "id": "12345", "line1": "Main street", "line2": "apt #", "city": "Anytown", "state": "Ohio", "postal_code": "12345", "country": "US"}], "orders": [{"id": "12345", "total": "199.99", "status": "active"}, {"id": "12345", "total": "199.99", "status": "active"}], "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}, {"id": "12345", "name": "John Doe", "first_name": "John", "last_name": "Doe", "company_name": "Acme Inc.", "status": "active", "currency": "USD", "emails": [], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "addresses": [], "orders": [], "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ecommerce.customersOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "shopify", "resource": "customers", "operation": "one", "data": {"id": "12345", "name": "John Doe", "first_name": "John", "last_name": "Doe", "company_name": "Acme Inc.", "status": "active", "currency": "USD", "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "addresses": [{"type": "billing", "id": "12345", "line1": "Main street", "line2": "apt #", "city": "Anytown", "state": "Ohio", "postal_code": "12345", "country": "US"}, {"type": "billing", "id": "12345", "line1": "Main street", "line2": "apt #", "city": "Anytown", "state": "Ohio", "postal_code": "12345", "country": "US"}], "orders": [{"id": "12345", "total": "199.99", "status": "active"}, {"id": "12345", "total": "199.99", "status": "active"}], "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  ecommerce.storesOne:
    "":
      parameters:
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "shopify", "resource": "stores", "operation": "one", "data": {"id": "12345", "name": "My Store", "store_url": "https://mybrand.com/shop", "admin_url": "https://mybrand.com/admin", "created_at": "2020-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.filesAll:
    "":
      parameters:
        query:
          filter: {"drive_id": "1234", "folder_id": "root", "shared": true}
          sort: {"by": "updated_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "google-drive", "resource": "files", "operation": "all", "data": [{"id": "12345", "downstream_id": "12345", "name": "sample.jpg", "description": "A sample image", "type": "file", "path": "/Documents/sample.jpg", "mime_type": "image/jpeg", "size": 1810673, "owner": {"id": "12345", "email": "hello@apideck.com", "name": "Elon Musk"}, "parent_folders": [], "export_formats": ["application/pdf", "application/vnd.oasis.opendocument.presentation", "text/plain"], "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}, {"id": "12345", "downstream_id": "12345", "name": "sample.jpg", "description": "A sample image", "type": "file", "path": "/Documents/sample.jpg", "mime_type": "image/jpeg", "size": 1810673, "owner": {"id": "12345", "email": "hello@apideck.com", "name": "Elon Musk"}, "parent_folders": [{"id": "12345", "name": "Personal"}, {"id": "12345", "name": "Personal"}], "export_formats": ["application/pdf", "application/vnd.oasis.opendocument.presentation", "text/plain"], "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.filesSearch:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
          filter: {"drive_id": "1234", "folder_id": "root", "shared": true}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"query": "logo jpg", "drive_id": "1234", "pass_through": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "google-drive", "resource": "files", "operation": "all", "data": [{"id": "12345", "downstream_id": "12345", "name": "sample.jpg", "description": "A sample image", "type": "file", "path": "/Documents/sample.jpg", "mime_type": "image/jpeg", "size": 1810673, "owner": {"id": "12345", "email": "hello@apideck.com", "name": "Elon Musk"}, "parent_folders": [], "export_formats": ["application/pdf", "application/vnd.oasis.opendocument.presentation", "text/plain"], "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}, {"id": "12345", "downstream_id": "12345", "name": "sample.jpg", "description": "A sample image", "type": "file", "path": "/Documents/sample.jpg", "mime_type": "image/jpeg", "size": 1810673, "owner": {"id": "12345", "email": "hello@apideck.com", "name": "Elon Musk"}, "parent_folders": [], "export_formats": ["application/pdf", "application/vnd.oasis.opendocument.presentation", "text/plain"], "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}, {"id": "12345", "downstream_id": "12345", "name": "sample.jpg", "description": "A sample image", "type": "file", "path": "/Documents/sample.jpg", "mime_type": "image/jpeg", "size": 1810673, "owner": {"id": "12345", "email": "hello@apideck.com", "name": "Elon Musk"}, "parent_folders": [{"id": "12345", "name": "Personal"}], "export_formats": ["application/pdf", "application/vnd.oasis.opendocument.presentation", "text/plain"], "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.filesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "google-drive", "resource": "files", "operation": "one", "data": {"id": "12345", "downstream_id": "12345", "name": "sample.jpg", "description": "A sample image", "type": "file", "path": "/Documents/sample.jpg", "mime_type": "image/jpeg", "size": 1810673, "owner": {"id": "12345", "email": "hello@apideck.com", "name": "Elon Musk"}, "parent_folders": [{"id": "12345", "name": "Personal"}], "export_formats": ["application/pdf", "application/vnd.oasis.opendocument.presentation", "text/plain"], "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.filesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "New Name.pdf", "description": "Renamed PDF Document", "parent_folder_id": "1234", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "google-drive", "resource": "files", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.filesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "google-drive", "resource": "files", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.filesDownload:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "200":
          '*/*': "x-file: example.file"
  fileStorage.filesExport:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
          format: "pdf"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "200":
          '*/*': "x-file: example.file"
  fileStorage.foldersAdd:
    "":
      parameters:
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Documents", "description": "My Personal Documents", "parent_folder_id": "1234", "drive_id": "1234", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Folders", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.foldersOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Folders", "operation": "one", "data": {"id": "12345", "name": "Documents", "description": "My Personal Documents", "path": "/Personal/Documents", "size": 1810673, "owner": {"id": "12345", "email": "hello@apideck.com", "name": "Elon Musk"}, "parent_folders": [{"id": "12345", "name": "Personal"}, {"id": "12345", "name": "Personal"}], "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.foldersUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Documents", "description": "My Personal Documents", "parent_folder_id": "1234", "pass_through": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Folders", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.foldersDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Folders", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.foldersCopy:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Documents", "parent_folder_id": "1234", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Folders", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.sharedLinksAll:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "dropbox", "resource": "Shared Links", "operation": "all", "data": [], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.sharedLinksAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"download_url": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg", "target_id": "<id>", "scope": "company", "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "dropbox", "resource": "Shared Links", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.sharedLinksOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "dropbox", "resource": "Shared Links", "operation": "one", "data": {"url": "https://www.box.com/s/vspke7y05sb214wjokpk", "download_url": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg", "target": {"id": "12345", "name": "sample.jpg", "type": "file"}, "scope": "company", "expires_at": "2022-09-30T07:43:32.000Z", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.sharedLinksUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"download_url": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg", "target_id": "<id>", "scope": "company", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "dropbox", "resource": "Shared Links", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.sharedLinksDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "dropbox", "resource": "Shared Links", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.uploadSessionsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Documents", "parent_folder_id": "1234", "drive_id": "1234", "size": 1810673, "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "dropbox", "resource": "UploadSessions", "operation": "one", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.uploadSessionsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "dropbox", "resource": "UploadSessions", "operation": "one", "data": {"id": "12345", "success": true, "part_size": 1000000, "parallel_upload_supported": true, "uploaded_byte_range": "0-42", "expires_at": "2022-09-30T07:43:32.000Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.uploadSessionsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "dropbox", "resource": "UploadSessions", "operation": "one", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.uploadSessionsFinish:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          digest: "sha=fpRyg5eVQletdZqEKaFlqwBXJzM="
          x-apideck-service-id: "salesforce"
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "google-drive", "resource": "files", "operation": "one", "data": {"id": "12345", "downstream_id": "12345", "name": "sample.jpg", "description": "A sample image", "type": "file", "path": "/Documents/sample.jpg", "mime_type": "image/jpeg", "size": 1810673, "owner": {"id": "12345", "email": "hello@apideck.com", "name": "Elon Musk"}, "parent_folders": [], "export_formats": ["application/pdf", "application/vnd.oasis.opendocument.presentation", "text/plain"], "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.drivesAll:
    "":
      parameters:
        query:
          filter: {"group_id": "1234"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "google-drive", "resource": "Drives", "operation": "all", "data": [{"id": "12345", "name": "Project Resources", "description": "A description", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.drivesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Project Resources", "description": "A description", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "google-drive", "resource": "Drives", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.drivesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "google-drive", "resource": "Drives", "operation": "one", "data": {"id": "12345", "name": "Project Resources", "description": "A description", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.drivesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Project Resources", "description": "A description", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "google-drive", "resource": "Drives", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.drivesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "google-drive", "resource": "Drives", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.driveGroupsAll:
    "":
      parameters:
        query:
          filter: {"parent_group_id": "1234"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "google-drive", "resource": "DriveGroups", "operation": "all", "data": [], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.driveGroupsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "accounting", "display_name": "accounting", "description": "A description", "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "google-drive", "resource": "DriveGroups", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.driveGroupsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "google-drive", "resource": "DriveGroups", "operation": "one", "data": {"id": "12345", "name": "accounting", "display_name": "accounting", "description": "A description", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.driveGroupsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "accounting", "display_name": "accounting", "description": "A description", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "google-drive", "resource": "DriveGroups", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  fileStorage.driveGroupsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "google-drive", "resource": "DriveGroups", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.employeesAll:
    "":
      parameters:
        query:
          filter: {"company_id": "1234", "email": "elon@tesla.com", "first_name": "Elon", "title": "Manager", "last_name": "Musk", "manager_id": "1234", "employment_status": "active", "employee_number": "123456-AB", "department_id": "1234"}
          sort: {"by": "created_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Employees", "operation": "all", "data": [{"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "display_name": "Technoking", "preferred_name": "Elon Musk", "initials": "EM", "salutation": "Mr", "title": "CEO", "marital_status": "married", "partner": {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "gender": "male", "initials": "EM", "birthday": "2000-08-12", "deceased_on": "2000-08-12"}, "division": "Europe", "division_id": "12345", "department_id": "12345", "department_name": "12345", "team": {"id": "1234", "name": "Full Stack Engineers"}, "company_id": "23456", "company_name": "SpaceX", "employment_start_date": "2021-10-26", "employment_end_date": "2028-10-26", "leaving_reason": "resigned", "employee_number": "123456-AB", "employment_status": "active", "ethnicity": "African American", "manager": {"id": "12345", "name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@musk.com", "employment_status": "active"}, "direct_reports": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "social_security_number": "123456789", "birthday": "2000-08-12", "deceased_on": "2000-08-12", "country_of_birth": "US", "description": "A description", "gender": "male", "pronouns": "she,her", "preferred_language": "EN", "languages": ["EN"], "nationalities": ["US"], "photo_url": "https://unavatar.io/elon-musk", "timezone": "Europe/London", "source": "lever", "source_id": "12345", "record_url": "https://app.intercom.io/contacts/12345", "jobs": [{"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, {"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, {"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}], "compensations": [{"id": "3404301363494309004", "job_id": "3490439050957906679", "rate": 50, "payment_unit": "hour", "currency": "USD", "flsa_status": "nonexempt", "effective_date": "2021-06-11", "payment_frequency": "monthly"}], "works_remote": true, "addresses": [], "phone_numbers": [], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>"]}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "tax_code": "1111", "tax_id": "234-32-0000", "dietary_preference": "Veggie", "food_allergies": ["No allergies"], "probation_period": {"start_date": "2021-10-01", "end_date": "2021-11-28"}, "tags": ["New"], "row_version": "1-12345", "deleted": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.employeesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "display_name": "Technoking", "preferred_name": "Elon Musk", "initials": "EM", "salutation": "Mr", "title": "CEO", "marital_status": "married", "partner": {"first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "gender": "male", "initials": "EM", "birthday": "2000-08-12", "deceased_on": "2000-08-12"}, "division": "Europe", "division_id": "12345", "department_id": "12345", "department_name": "12345", "team": {"id": "1234", "name": "Full Stack Engineers"}, "company_id": "23456", "company_name": "SpaceX", "employment_start_date": "2021-10-26", "employment_end_date": "2028-10-26", "leaving_reason": "resigned", "employee_number": "123456-AB", "employment_status": "active", "ethnicity": "African American", "manager": {"id": "12345", "name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@musk.com", "employment_status": "active"}, "direct_reports": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "social_security_number": "123456789", "birthday": "2000-08-12", "deceased_on": "2000-08-12", "country_of_birth": "US", "description": "A description", "gender": "male", "pronouns": "she,her", "preferred_language": "EN", "languages": ["EN"], "nationalities": ["US"], "photo_url": "https://unavatar.io/elon-musk", "timezone": "Europe/London", "source": "lever", "source_id": "12345", "record_url": "https://app.intercom.io/contacts/12345", "jobs": [], "compensations": [{"rate": 50, "payment_unit": "hour", "currency": "USD", "flsa_status": "nonexempt", "effective_date": "2021-06-11", "payment_frequency": "monthly"}], "works_remote": true, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}, {"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "tax_code": "1111", "tax_id": "234-32-0000", "dietary_preference": "Veggie", "food_allergies": ["No allergies"], "probation_period": {"start_date": "2021-10-01", "end_date": "2021-11-28"}, "tags": ["New"], "row_version": "1-12345", "deleted": true, "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Employees", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.employeesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
          filter: {"company_id": "1234"}
          pass_through: {"search": "San Francisco"}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Employees", "operation": "one", "data": {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "display_name": "Technoking", "preferred_name": "Elon Musk", "initials": "EM", "salutation": "Mr", "title": "CEO", "marital_status": "married", "partner": {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "gender": "male", "initials": "EM", "birthday": "2000-08-12", "deceased_on": "2000-08-12"}, "division": "Europe", "division_id": "12345", "department_id": "12345", "department_name": "12345", "team": {"id": "1234", "name": "Full Stack Engineers"}, "company_id": "23456", "company_name": "SpaceX", "employment_start_date": "2021-10-26", "employment_end_date": "2028-10-26", "leaving_reason": "resigned", "employee_number": "123456-AB", "employment_status": "active", "ethnicity": "African American", "manager": {"id": "12345", "name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@musk.com", "employment_status": "active"}, "direct_reports": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "social_security_number": "123456789", "birthday": "2000-08-12", "deceased_on": "2000-08-12", "country_of_birth": "US", "description": "A description", "gender": "male", "pronouns": "she,her", "preferred_language": "EN", "languages": ["EN"], "nationalities": ["US"], "photo_url": "https://unavatar.io/elon-musk", "timezone": "Europe/London", "source": "lever", "source_id": "12345", "record_url": "https://app.intercom.io/contacts/12345", "jobs": [{"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, {"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}], "compensations": [{"id": "3404301363494309004", "job_id": "3490439050957906679", "rate": 50, "payment_unit": "hour", "currency": "USD", "flsa_status": "nonexempt", "effective_date": "2021-06-11", "payment_frequency": "pro-rata"}], "works_remote": true, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "bank_accounts": [], "tax_code": "1111", "tax_id": "234-32-0000", "dietary_preference": "Veggie", "food_allergies": ["No allergies"], "probation_period": {"start_date": "2021-10-01", "end_date": "2021-11-28"}, "tags": ["New"], "row_version": "1-12345", "deleted": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.employeesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "display_name": "Technoking", "preferred_name": "Elon Musk", "initials": "EM", "salutation": "Mr", "title": "CEO", "marital_status": "married", "partner": {"first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "gender": "male", "initials": "EM", "birthday": "2000-08-12", "deceased_on": "2000-08-12"}, "division": "Europe", "division_id": "12345", "department_id": "12345", "department_name": "12345", "team": {"id": "1234", "name": "Full Stack Engineers"}, "company_id": "23456", "company_name": "SpaceX", "employment_start_date": "2021-10-26", "employment_end_date": "2028-10-26", "leaving_reason": "resigned", "employee_number": "123456-AB", "employment_status": "active", "ethnicity": "African American", "manager": {"id": "12345", "name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@musk.com", "employment_status": "active"}, "direct_reports": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "social_security_number": "123456789", "birthday": "2000-08-12", "deceased_on": "2000-08-12", "country_of_birth": "US", "description": "A description", "gender": "male", "pronouns": "she,her", "preferred_language": "EN", "languages": ["EN"], "nationalities": ["US"], "photo_url": "https://unavatar.io/elon-musk", "timezone": "Europe/London", "source": "lever", "source_id": "12345", "record_url": "https://app.intercom.io/contacts/12345", "jobs": [], "compensations": [{"rate": 50, "payment_unit": "hour", "currency": "USD", "flsa_status": "nonexempt", "effective_date": "2021-06-11", "payment_frequency": "other"}], "works_remote": true, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "bank_accounts": [], "tax_code": "1111", "tax_id": "234-32-0000", "dietary_preference": "Veggie", "food_allergies": ["No allergies"], "probation_period": {"start_date": "2021-10-01", "end_date": "2021-11-28"}, "tags": ["New"], "row_version": "1-12345", "deleted": true, "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Employees", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.employeesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Employees", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.companiesAll:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Companies", "operation": "all", "data": [{"id": "12345", "legal_name": "SpaceX", "display_name": "SpaceX", "subdomain": "company", "status": "active", "company_number": "123456-AB", "currency": "USD", "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}], "debtor_id": "12345", "deleted": false, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.companiesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"legal_name": "SpaceX", "display_name": "SpaceX", "subdomain": "company", "status": "active", "company_number": "123456-AB", "currency": "USD", "addresses": [], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}], "debtor_id": "12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Companies", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.companiesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Companies", "operation": "one", "data": {"id": "12345", "legal_name": "SpaceX", "display_name": "SpaceX", "subdomain": "company", "status": "active", "company_number": "123456-AB", "currency": "USD", "addresses": [], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}], "debtor_id": "12345", "deleted": false, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.companiesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"legal_name": "SpaceX", "display_name": "SpaceX", "subdomain": "company", "status": "active", "company_number": "123456-AB", "currency": "USD", "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [], "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "debtor_id": "12345", "pass_through": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Companies", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.companiesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Companies", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.departmentsAll:
    "":
      parameters:
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "workday", "resource": "Departments", "operation": "all", "data": [], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.departmentsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "R&D", "code": "2", "description": "R&D", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "workday", "resource": "Departments", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.departmentsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "workday", "resource": "Departments", "operation": "one", "data": {"id": "12345", "parent_id": "22345", "name": "R&D", "code": "2", "description": "R&D", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.departmentsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "R&D", "code": "2", "description": "R&D", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "workday", "resource": "Departments", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.departmentsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "workday", "resource": "Departments", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.payrollsAll:
    "":
      parameters:
        query:
          filter: {"start_date": "2022-04-08", "end_date": "2022-04-21"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Employees", "operation": "all", "data": [{"id": "12345", "company_id": "23456", "processed": false, "processed_date": "2022-04-08", "check_date": "2022-04-08", "start_date": "2022-04-08", "end_date": "2022-04-21", "totals": {"company_debit": 27992.49, "tax_debit": 8655.32, "check_amount": 27966.23, "net_pay": 19337.17, "gross_pay": 27966.23, "employer_taxes": 2038.93, "employee_taxes": 6616.39, "employer_benefit_contributions": 0, "employee_benefit_deductions": 0}, "compensations": [{"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [{"name": "CA State Income Tax", "employer": false, "amount": 1.97}], "deductions": [{"name": "Company Car", "amount": 10.97}], "benefits": [{"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}, {"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}, {"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}]}]}]}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.payrollsOne:
    "":
      parameters:
        path:
          payroll_id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Companies", "operation": "one", "data": {"id": "12345", "company_id": "23456", "processed": false, "processed_date": "2022-04-08", "check_date": "2022-04-08", "start_date": "2022-04-08", "end_date": "2022-04-21", "totals": {"company_debit": 27992.49, "tax_debit": 8655.32, "check_amount": 27966.23, "net_pay": 19337.17, "gross_pay": 27966.23, "employer_taxes": 2038.93, "employee_taxes": 6616.39, "employer_benefit_contributions": 0, "employee_benefit_deductions": 0}, "compensations": []}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.employeePayrollsAll:
    "":
      parameters:
        path:
          employee_id: "<id>"
        query:
          filter: {"start_date": "2022-04-08", "end_date": "2022-04-21"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Employees", "operation": "all", "data": [{"id": "12345", "employee_id": "12345", "company_id": "23456", "processed": false, "processed_date": "2022-04-08", "check_date": "2022-04-08", "start_date": "2022-04-08", "end_date": "2022-04-21", "totals": {"company_debit": 27992.49, "tax_debit": 8655.32, "check_amount": 27966.23, "net_pay": 19337.17, "gross_pay": 27966.23, "employer_taxes": 2038.93, "employee_taxes": 6616.39, "employer_benefit_contributions": 0, "employee_benefit_deductions": 0}, "compensations": [{"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [{"name": "CA State Income Tax", "employer": false, "amount": 1.97}, {"name": "CA State Income Tax", "employer": false, "amount": 1.97}], "deductions": [{"name": "Company Car", "amount": 10.97}], "benefits": [{"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}, {"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}]}, {"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [{"name": "CA State Income Tax", "employer": false, "amount": 1.97}, {"name": "CA State Income Tax", "employer": false, "amount": 1.97}, {"name": "CA State Income Tax", "employer": false, "amount": 1.97}], "deductions": [{"name": "Company Car", "amount": 10.97}, {"name": "Company Car", "amount": 10.97}], "benefits": [{"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}]}, {"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [], "deductions": [{"name": "Company Car", "amount": 10.97}, {"name": "Company Car", "amount": 10.97}], "benefits": [{"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}]}]}]}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.employeePayrollsOne:
    "":
      parameters:
        path:
          payroll_id: "<id>"
          employee_id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "undefined", "resource": "Companies", "operation": "one", "data": {"id": "12345", "employee_id": "12345", "company_id": "23456", "processed": false, "processed_date": "2022-04-08", "check_date": "2022-04-08", "start_date": "2022-04-08", "end_date": "2022-04-21", "totals": {"company_debit": 27992.49, "tax_debit": 8655.32, "check_amount": 27966.23, "net_pay": 19337.17, "gross_pay": 27966.23, "employer_taxes": 2038.93, "employee_taxes": 6616.39, "employer_benefit_contributions": 0, "employee_benefit_deductions": 0}, "compensations": [{"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [{"name": "CA State Income Tax", "employer": false, "amount": 1.97}], "deductions": [{"name": "Company Car", "amount": 10.97}, {"name": "Company Car", "amount": 10.97}, {"name": "Company Car", "amount": 10.97}], "benefits": [{"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}, {"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}, {"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}]}, {"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [{"name": "CA State Income Tax", "employer": false, "amount": 1.97}], "deductions": [], "benefits": [{"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}]}, {"employee_id": "12345", "net_pay": 2199.93, "gross_pay": 3000, "taxes": [{"name": "CA State Income Tax", "employer": false, "amount": 1.97}], "deductions": [], "benefits": [{"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}, {"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}, {"name": "Health Insurance", "employee_deduction": 142.94, "employer_contribution": 141.14}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.employeeSchedulesAll:
    "":
      parameters:
        path:
          employee_id: "<id>"
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Employees", "operation": "all", "data": {"employee": {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "display_name": "Technoking", "preferred_name": "Elon Musk", "initials": "EM", "salutation": "Mr", "title": "CEO", "marital_status": "married", "partner": {"id": "12345", "first_name": "Elon", "last_name": "Musk", "middle_name": "D.", "gender": "male", "initials": "EM", "birthday": "2000-08-12", "deceased_on": "2000-08-12"}, "division": "Europe", "division_id": "12345", "department_id": "12345", "department_name": "12345", "team": {"id": "1234", "name": "Full Stack Engineers"}, "company_id": "23456", "company_name": "SpaceX", "employment_start_date": "2021-10-26", "employment_end_date": "2028-10-26", "leaving_reason": "resigned", "employee_number": "123456-AB", "employment_status": "active", "ethnicity": "African American", "manager": {"id": "12345", "name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@musk.com", "employment_status": "active"}, "direct_reports": ["a0d636c6-43b3-4bde-8c70-85b707d992f4", "a98lfd96-43b3-4bde-8c70-85b707d992e6"], "social_security_number": "123456789", "birthday": "2000-08-12", "deceased_on": "2000-08-12", "country_of_birth": "US", "description": "A description", "gender": "male", "pronouns": "she,her", "preferred_language": "EN", "languages": ["EN"], "nationalities": ["US"], "photo_url": "https://unavatar.io/elon-musk", "timezone": "Europe/London", "source": "lever", "source_id": "12345", "record_url": "https://app.intercom.io/contacts/12345", "jobs": [{"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, {"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}, {"id": "12345", "employee_id": "12345", "title": "CEO", "role": "Sales", "start_date": "2020-08-12", "end_date": "2020-08-12", "compensation_rate": 72000, "currency": "USD", "payment_unit": "year", "hired_at": "2020-08-12", "is_primary": true, "is_manager": true, "status": "active", "location": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}}], "compensations": [{"id": "3404301363494309004", "job_id": "3490439050957906679", "rate": 50, "payment_unit": "hour", "currency": "USD", "flsa_status": "nonexempt", "effective_date": "2021-06-11", "payment_frequency": "weekly"}], "works_remote": true, "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "phone_numbers": [], "emails": [], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": {}}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "social_links": [], "bank_accounts": [{"bank_name": "Monzo", "account_number": "123465", "account_name": "SPACEX LLC", "account_type": "credit_card", "iban": "CH2989144532982975332", "bic": "AUDSCHGGXXX", "routing_number": "012345678", "bsb_number": "062-001", "branch_identifier": "001", "bank_code": "BNH", "currency": "USD"}], "tax_code": "1111", "tax_id": "234-32-0000", "dietary_preference": "Veggie", "food_allergies": ["No allergies"], "probation_period": {"start_date": "2021-10-01", "end_date": "2021-11-28"}, "tags": ["New"], "row_version": "1-12345", "deleted": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}, "schedules": [{"id": "12345", "start_date": "2022-04-08", "end_date": "2022-04-21", "work_pattern": {"odd_weeks": {"hours_monday": 8, "hours_tuesday": 8, "hours_wednesday": 4, "hours_thursday": 7.5, "hours_friday": 4, "hours_saturday": 0, "hours_sunday": 0}, "even_weeks": {"hours_monday": 8, "hours_tuesday": 8, "hours_wednesday": 4, "hours_thursday": 7.5, "hours_friday": 4, "hours_saturday": 0, "hours_sunday": 0}}}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.timeOffRequestsAll:
    "":
      parameters:
        query:
          filter: {"start_date": "2022-04-08", "end_date": "2022-04-21", "updated_since": "2020-09-30T07:43:32.000Z", "employee_id": "1234", "time_off_request_status": "approved", "company_id": "1234"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "bamboohr", "resource": "time-off-requests", "operation": "all", "data": [{"id": "12345", "employee_id": "12345", "policy_id": "12345", "status": "approved", "description": "Enjoying some sun.", "start_date": "2022-04-01", "end_date": "2022-04-01", "request_date": "2022-03-21", "request_type": "vacation", "approval_date": "2022-03-21", "units": "hours", "amount": 3.5, "day_part": "morning", "notes": {"employee": "Relaxing on the beach for a few hours.", "manager": "Enjoy!"}, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [], "policy_type": "sick"}, {"id": "12345", "employee_id": "12345", "policy_id": "12345", "status": "approved", "description": "Enjoying some sun.", "start_date": "2022-04-01", "end_date": "2022-04-01", "request_date": "2022-03-21", "request_type": "vacation", "approval_date": "2022-03-21", "units": "hours", "amount": 3.5, "day_part": "morning", "notes": {"employee": "Relaxing on the beach for a few hours.", "manager": "Enjoy!"}, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [], "policy_type": "sick"}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.timeOffRequestsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"employee_id": "12345", "policy_id": "12345", "status": "approved", "description": "Enjoying some sun.", "start_date": "2022-04-01", "end_date": "2022-04-01", "request_date": "2022-03-21", "request_type": "vacation", "approval_date": "2022-03-21", "units": "hours", "amount": 3.5, "day_part": "morning", "notes": {"employee": "Relaxing on the beach for a few hours.", "manager": "Enjoy!"}, "pass_through": [], "policy_type": "sick"}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "bamboohr", "resource": "time-off-requests", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.timeOffRequestsOne:
    "":
      parameters:
        path:
          id: "<id>"
          employee_id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "bamboohr", "resource": "time-off-requests", "operation": "one", "data": {"id": "12345", "employee_id": "12345", "policy_id": "12345", "status": "approved", "description": "Enjoying some sun.", "start_date": "2022-04-01", "end_date": "2022-04-01", "request_date": "2022-03-21", "request_type": "vacation", "approval_date": "2022-03-21", "units": "hours", "amount": 3.5, "day_part": "morning", "notes": {"employee": "Relaxing on the beach for a few hours.", "manager": "Enjoy!"}, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}], "policy_type": "sick"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.timeOffRequestsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
          employee_id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"employee_id": "12345", "policy_id": "12345", "status": "approved", "description": "Enjoying some sun.", "start_date": "2022-04-01", "end_date": "2022-04-01", "request_date": "2022-03-21", "request_type": "vacation", "approval_date": "2022-03-21", "units": "hours", "amount": 3.5, "day_part": "morning", "notes": {"employee": "Relaxing on the beach for a few hours.", "manager": "Enjoy!"}, "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}], "policy_type": "sick"}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "bamboohr", "resource": "time-off-requests", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  hris.timeOffRequestsDelete:
    "":
      parameters:
        path:
          id: "<id>"
          employee_id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "bamboohr", "resource": "time-off-requests", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  lead.leadsAll:
    "":
      parameters:
        query:
          filter: {"name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@tesla.com", "phone_number": "1234567890"}
          sort: {"by": "created_at", "direction": "desc"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "all", "data": [{"id": "12345", "name": "Elon Musk", "company_name": "Spacex", "owner_id": "54321", "owner_name": "John Doe", "company_id": "2", "lead_id": "2", "lead_source": "Cold Call", "first_name": "Elon", "last_name": "Musk", "description": "A thinker", "prefix": "Sir", "title": "CEO", "language": "EN", "status": "New", "monetary_amount": 75000, "currency": "USD", "fax": "+12129876543", "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "tags": ["New"], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  lead.leadsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Elon Musk", "company_name": "Spacex", "owner_id": "54321", "owner_name": "John Doe", "company_id": "2", "lead_id": "2", "lead_source": "Cold Call", "first_name": "Elon", "last_name": "Musk", "description": "A thinker", "prefix": "Sir", "title": "CEO", "language": "EN", "status": "New", "monetary_amount": 75000, "currency": "USD", "fax": "+12129876543", "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}, {"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}], "tags": ["New"], "pass_through": [{"service_id": "<id>", "extend_paths": []}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  lead.leadsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "one", "data": {"id": "12345", "name": "Elon Musk", "company_name": "Spacex", "owner_id": "54321", "owner_name": "John Doe", "company_id": "2", "lead_id": "2", "lead_source": "Cold Call", "first_name": "Elon", "last_name": "Musk", "description": "A thinker", "prefix": "Sir", "title": "CEO", "language": "EN", "status": "New", "monetary_amount": 75000, "currency": "USD", "fax": "+12129876543", "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}, {"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": "Uses Salesforce and Marketo"}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>"]}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": 10}], "tags": ["New"], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  lead.leadsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Elon Musk", "company_name": "Spacex", "owner_id": "54321", "owner_name": "John Doe", "company_id": "2", "lead_id": "2", "lead_source": "Cold Call", "first_name": "Elon", "last_name": "Musk", "description": "A thinker", "prefix": "Sir", "title": "CEO", "language": "EN", "status": "New", "monetary_amount": 75000, "currency": "USD", "fax": "+12129876543", "websites": [{"id": "12345", "url": "http://example.com", "type": "primary"}], "addresses": [{"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}], "social_links": [{"id": "12345", "url": "https://www.twitter.com/apideck", "type": "twitter"}], "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}], "custom_fields": [{"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": ["<value>", "<value>", "<value>"]}, {"id": "2389328923893298", "name": "employee_level", "description": "Employee Level", "value": true}], "tags": ["New"], "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": []}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  lead.leadsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "zoho-crm", "resource": "companies", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.ordersAll:
    "":
      parameters:
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "clover", "resource": "orders", "operation": "all", "data": [], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.ordersAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"idempotency_key": "random_string", "order_number": "1F", "order_date": "2022-08-12", "closed_date": "2022-08-13", "reference_id": "my-order-001", "status": "open", "payment_status": "open", "currency": "USD", "merchant_id": "12345", "customer_id": "12345", "employee_id": "12345", "location_id": "12345", "order_type_id": "12345", "table": "1F", "seat": "23F", "total_amount": 275, "total_tip": 700, "total_tax": 275, "total_discount": 300, "total_refund": 0, "total_service_charge": 0, "refunded": false, "customers": [{"id": "12345", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}]}], "fulfillments": [{"id": "12345", "type": "shipment", "pickup_details": {"auto_complete_duration": "P1W3D", "cancel_reason": "Not hungry", "expires_at": "2016-09-04T23:59:33.123Z", "pickup_at": "2016-09-04T23:59:33.123Z", "pickup_window_duration": "P1W3D", "prep_time_duration": "P1W3D", "note": "Pickup in the back.", "placed_at": "2016-09-04T23:59:33.123Z", "rejected_at": "2016-09-04T23:59:33.123Z", "ready_at": "2016-09-04T23:59:33.123Z", "expired_at": "2016-09-04T23:59:33.123Z", "picked_up_at": "2016-09-04T23:59:33.123Z", "canceled_at": "2016-09-04T23:59:33.123Z", "curbside_pickup_details": {"buyer_arrived_at": "2016-09-04T23:59:33.123Z"}, "recipient": {"customer_id": "12345", "display_name": "Elon Musk", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "phone_number": {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, "email": {"id": "123", "email": "elon@musk.com", "type": "primary"}}}}, {"id": "12345", "type": "shipment", "pickup_details": {"auto_complete_duration": "P1W3D", "cancel_reason": "Not hungry", "expires_at": "2016-09-04T23:59:33.123Z", "pickup_at": "2016-09-04T23:59:33.123Z", "pickup_window_duration": "P1W3D", "prep_time_duration": "P1W3D", "note": "Pickup in the back.", "placed_at": "2016-09-04T23:59:33.123Z", "rejected_at": "2016-09-04T23:59:33.123Z", "ready_at": "2016-09-04T23:59:33.123Z", "expired_at": "2016-09-04T23:59:33.123Z", "picked_up_at": "2016-09-04T23:59:33.123Z", "canceled_at": "2016-09-04T23:59:33.123Z", "curbside_pickup_details": {"buyer_arrived_at": "2016-09-04T23:59:33.123Z"}, "recipient": {"customer_id": "12345", "display_name": "Elon Musk", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "phone_number": {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, "email": {"id": "123", "email": "elon@musk.com", "type": "primary"}}}}, {"id": "12345", "type": "shipment", "pickup_details": {"auto_complete_duration": "P1W3D", "cancel_reason": "Not hungry", "expires_at": "2016-09-04T23:59:33.123Z", "pickup_at": "2016-09-04T23:59:33.123Z", "pickup_window_duration": "P1W3D", "prep_time_duration": "P1W3D", "note": "Pickup in the back.", "placed_at": "2016-09-04T23:59:33.123Z", "rejected_at": "2016-09-04T23:59:33.123Z", "ready_at": "2016-09-04T23:59:33.123Z", "expired_at": "2016-09-04T23:59:33.123Z", "picked_up_at": "2016-09-04T23:59:33.123Z", "canceled_at": "2016-09-04T23:59:33.123Z", "curbside_pickup_details": {"buyer_arrived_at": "2016-09-04T23:59:33.123Z"}, "recipient": {"customer_id": "12345", "display_name": "Elon Musk", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "phone_number": {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, "email": {"id": "123", "email": "elon@musk.com", "type": "primary"}}}}], "line_items": [], "payments": [{"amount": 27500, "currency": "USD"}, {"amount": 27500, "currency": "USD"}, {"amount": 27500, "currency": "USD"}], "service_charges": [{"name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}, {"name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}, {"name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}], "refunds": [], "taxes": [], "discounts": [{"name": "10% off", "type": "percentage", "amount": 27500, "currency": "USD", "scope": "order"}], "tenders": [{"name": "10% off", "type": "cash", "note": "An optional note associated with the tender at the time of payment.", "amount": 27500, "percentage": 10, "currency": "USD", "total_amount": 27.5, "total_tip": 7, "total_processing_fee": 0, "total_tax": 2.75, "total_discount": 3, "total_refund": 0, "total_service_charge": 0, "buyer_tendered_cash_amount": 27500, "change_back_cash_amount": 27500, "card": {"bin": "41111", "card_type": "credit", "prepaid_type": "prepaid", "cardholder_name": "John Doe", "customer_id": "12345", "merchant_id": "12345", "exp_month": 1, "exp_year": 2022, "fingerprint": " Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.", "last_4": "The last 4 digits of the card number.", "enabled": true, "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "reference_id": "card-001", "version": "230320320320"}, "card_status": "authorized", "card_entry_method": "swiped"}, {"name": "10% off", "type": "cash", "note": "An optional note associated with the tender at the time of payment.", "amount": 27500, "percentage": 10, "currency": "USD", "total_amount": 27.5, "total_tip": 7, "total_processing_fee": 0, "total_tax": 2.75, "total_discount": 3, "total_refund": 0, "total_service_charge": 0, "buyer_tendered_cash_amount": 27500, "change_back_cash_amount": 27500, "card": {"bin": "41111", "card_type": "credit", "prepaid_type": "prepaid", "cardholder_name": "John Doe", "customer_id": "12345", "merchant_id": "12345", "exp_month": 1, "exp_year": 2022, "fingerprint": " Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.", "last_4": "The last 4 digits of the card number.", "enabled": true, "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "reference_id": "card-001", "version": "230320320320"}, "card_status": "authorized", "card_entry_method": "swiped"}, {"name": "10% off", "type": "cash", "note": "An optional note associated with the tender at the time of payment.", "amount": 27500, "percentage": 10, "currency": "USD", "total_amount": 27.5, "total_tip": 7, "total_processing_fee": 0, "total_tax": 2.75, "total_discount": 3, "total_refund": 0, "total_service_charge": 0, "buyer_tendered_cash_amount": 27500, "change_back_cash_amount": 27500, "card": {"bin": "41111", "card_type": "credit", "prepaid_type": "prepaid", "cardholder_name": "John Doe", "customer_id": "12345", "merchant_id": "12345", "exp_month": 1, "exp_year": 2022, "fingerprint": " Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.", "last_4": "The last 4 digits of the card number.", "enabled": true, "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "reference_id": "card-001", "version": "230320320320"}, "card_status": "authorized", "card_entry_method": "swiped"}], "voided": false, "version": "230320320320", "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "clover", "resource": "orders", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.ordersOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "clover", "resource": "orders", "operation": "one", "data": {"id": "12345", "idempotency_key": "random_string", "order_number": "1F", "order_date": "2022-08-12", "closed_date": "2022-08-13", "reference_id": "my-order-001", "status": "open", "payment_status": "open", "currency": "USD", "merchant_id": "12345", "customer_id": "12345", "employee_id": "12345", "location_id": "12345", "order_type_id": "12345", "table": "1F", "seat": "23F", "total_amount": 275, "total_tip": 700, "total_tax": 275, "total_discount": 300, "total_refund": 0, "total_service_charge": 0, "refunded": false, "customers": [{"id": "12345", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}]}, {"id": "12345", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}]}], "fulfillments": [{"id": "12345", "type": "shipment", "pickup_details": {"accepted_at": "2020-09-30T07:43:32.000Z", "auto_complete_duration": "P1W3D", "cancel_reason": "Not hungry", "expires_at": "2016-09-04T23:59:33.123Z", "pickup_at": "2016-09-04T23:59:33.123Z", "pickup_window_duration": "P1W3D", "prep_time_duration": "P1W3D", "note": "Pickup in the back.", "placed_at": "2016-09-04T23:59:33.123Z", "rejected_at": "2016-09-04T23:59:33.123Z", "ready_at": "2016-09-04T23:59:33.123Z", "expired_at": "2016-09-04T23:59:33.123Z", "picked_up_at": "2016-09-04T23:59:33.123Z", "canceled_at": "2016-09-04T23:59:33.123Z", "curbside_pickup_details": {"buyer_arrived_at": "2016-09-04T23:59:33.123Z"}, "recipient": {"customer_id": "12345", "display_name": "Elon Musk", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "phone_number": {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, "email": {"id": "123", "email": "elon@musk.com", "type": "primary"}}}}, {"id": "12345", "type": "shipment", "pickup_details": {"accepted_at": "2020-09-30T07:43:32.000Z", "auto_complete_duration": "P1W3D", "cancel_reason": "Not hungry", "expires_at": "2016-09-04T23:59:33.123Z", "pickup_at": "2016-09-04T23:59:33.123Z", "pickup_window_duration": "P1W3D", "prep_time_duration": "P1W3D", "note": "Pickup in the back.", "placed_at": "2016-09-04T23:59:33.123Z", "rejected_at": "2016-09-04T23:59:33.123Z", "ready_at": "2016-09-04T23:59:33.123Z", "expired_at": "2016-09-04T23:59:33.123Z", "picked_up_at": "2016-09-04T23:59:33.123Z", "canceled_at": "2016-09-04T23:59:33.123Z", "curbside_pickup_details": {"buyer_arrived_at": "2016-09-04T23:59:33.123Z"}, "recipient": {"customer_id": "12345", "display_name": "Elon Musk", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "phone_number": {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, "email": {"id": "123", "email": "elon@musk.com", "type": "primary"}}}}, {"id": "12345", "type": "shipment", "pickup_details": {"accepted_at": "2020-09-30T07:43:32.000Z", "auto_complete_duration": "P1W3D", "cancel_reason": "Not hungry", "expires_at": "2016-09-04T23:59:33.123Z", "pickup_at": "2016-09-04T23:59:33.123Z", "pickup_window_duration": "P1W3D", "prep_time_duration": "P1W3D", "note": "Pickup in the back.", "placed_at": "2016-09-04T23:59:33.123Z", "rejected_at": "2016-09-04T23:59:33.123Z", "ready_at": "2016-09-04T23:59:33.123Z", "expired_at": "2016-09-04T23:59:33.123Z", "picked_up_at": "2016-09-04T23:59:33.123Z", "canceled_at": "2016-09-04T23:59:33.123Z", "curbside_pickup_details": {"buyer_arrived_at": "2016-09-04T23:59:33.123Z"}, "recipient": {"customer_id": "12345", "display_name": "Elon Musk", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "phone_number": {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, "email": {"id": "123", "email": "elon@musk.com", "type": "primary"}}}}], "line_items": [{"id": "12345", "name": "New York Strip Steak", "item": {"id": "12345"}, "total_tax": 2000, "total_discount": 3000, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "applied_taxes": [{"id": "12345", "tax_id": "sales-tax", "amount": 27500, "currency": "USD"}, {"id": "12345", "tax_id": "sales-tax", "amount": 27500, "currency": "USD"}], "applied_discounts": [{"id": "12345", "discount_id": "12345", "amount": 27500, "currency": "USD"}, {"id": "12345", "discount_id": "12345", "amount": 27500, "currency": "USD"}, {"id": "12345", "discount_id": "12345", "amount": 27500, "currency": "USD"}], "modifiers": []}], "payments": [{"id": "12345", "amount": 27500, "currency": "USD"}], "service_charges": [{"id": "12345", "name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}, {"id": "12345", "name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}, {"id": "12345", "name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}], "refunds": [{"id": "12345", "location_id": "12345", "amount": 27500, "currency": "USD", "reason": "The reason for the refund being issued.", "tender_id": "12345", "transaction_id": "12345"}], "taxes": [], "discounts": [{"id": "12345", "product_id": "12345", "name": "10% off", "type": "percentage", "amount": 27500, "currency": "USD", "scope": "order"}, {"id": "12345", "product_id": "12345", "name": "10% off", "type": "percentage", "amount": 27500, "currency": "USD", "scope": "order"}], "tenders": [{"id": "12345", "name": "10% off", "type": "cash", "note": "An optional note associated with the tender at the time of payment.", "amount": 27500, "percentage": 10, "currency": "USD", "total_amount": 27.5, "total_tip": 7, "total_processing_fee": 0, "total_tax": 2.75, "total_discount": 3, "total_refund": 0, "total_service_charge": 0, "buyer_tendered_cash_amount": 27500, "change_back_cash_amount": 27500, "card": {"id": "12345", "bin": "41111", "card_type": "credit", "prepaid_type": "prepaid", "cardholder_name": "John Doe", "customer_id": "12345", "merchant_id": "12345", "exp_month": 1, "exp_year": 2022, "fingerprint": " Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.", "last_4": "The last 4 digits of the card number.", "enabled": true, "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "reference_id": "card-001", "version": "230320320320"}, "card_status": "authorized", "card_entry_method": "swiped", "payment_id": "12345", "location_id": "12345", "transaction_id": "12345"}], "source": "api", "voided": false, "voided_at": "2020-09-30T07:43:32.000Z", "version": "230320320320", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.ordersUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"idempotency_key": "random_string", "order_number": "1F", "order_date": "2022-08-12", "closed_date": "2022-08-13", "reference_id": "my-order-001", "status": "open", "payment_status": "open", "currency": "USD", "merchant_id": "12345", "customer_id": "12345", "employee_id": "12345", "location_id": "12345", "order_type_id": "12345", "table": "1F", "seat": "23F", "total_amount": 275, "total_tip": 700, "total_tax": 275, "total_discount": 300, "total_refund": 0, "total_service_charge": 0, "refunded": false, "customers": [{"id": "12345", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}]}], "fulfillments": [{"id": "12345", "type": "shipment", "pickup_details": {"auto_complete_duration": "P1W3D", "cancel_reason": "Not hungry", "expires_at": "2016-09-04T23:59:33.123Z", "pickup_at": "2016-09-04T23:59:33.123Z", "pickup_window_duration": "P1W3D", "prep_time_duration": "P1W3D", "note": "Pickup in the back.", "placed_at": "2016-09-04T23:59:33.123Z", "rejected_at": "2016-09-04T23:59:33.123Z", "ready_at": "2016-09-04T23:59:33.123Z", "expired_at": "2016-09-04T23:59:33.123Z", "picked_up_at": "2016-09-04T23:59:33.123Z", "canceled_at": "2016-09-04T23:59:33.123Z", "curbside_pickup_details": {"buyer_arrived_at": "2016-09-04T23:59:33.123Z"}, "recipient": {"customer_id": "12345", "display_name": "Elon Musk", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "phone_number": {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, "email": {"id": "123", "email": "elon@musk.com", "type": "primary"}}}}], "line_items": [{"name": "New York Strip Steak", "total_tax": 2000, "total_discount": 3000, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "applied_taxes": [], "applied_discounts": [{"discount_id": "12345", "amount": 27500, "currency": "USD"}, {"discount_id": "12345", "amount": 27500, "currency": "USD"}], "modifiers": [{"id": "12345", "name": "New York Strip Steak - no cheese", "amount": 27500, "currency": "USD", "alternate_name": "Modifier New", "modifier_group_id": "123"}]}], "payments": [{"amount": 27500, "currency": "USD"}, {"amount": 27500, "currency": "USD"}], "service_charges": [], "refunds": [{"amount": 27500, "currency": "USD", "reason": "The reason for the refund being issued."}], "taxes": [{"id": "state-sales-tax", "name": "State Sales Tax", "amount": 27500, "currency": "USD", "percentage": 15, "auto_applied": true}], "discounts": [], "tenders": [{"name": "10% off", "type": "cash", "note": "An optional note associated with the tender at the time of payment.", "amount": 27500, "percentage": 10, "currency": "USD", "total_amount": 27.5, "total_tip": 7, "total_processing_fee": 0, "total_tax": 2.75, "total_discount": 3, "total_refund": 0, "total_service_charge": 0, "buyer_tendered_cash_amount": 27500, "change_back_cash_amount": 27500, "card": {"bin": "41111", "card_type": "credit", "prepaid_type": "prepaid", "cardholder_name": "John Doe", "customer_id": "12345", "merchant_id": "12345", "exp_month": 1, "exp_year": 2022, "fingerprint": " Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.", "last_4": "The last 4 digits of the card number.", "enabled": true, "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "reference_id": "card-001", "version": "230320320320"}, "card_status": "authorized", "card_entry_method": "swiped"}, {"name": "10% off", "type": "cash", "note": "An optional note associated with the tender at the time of payment.", "amount": 27500, "percentage": 10, "currency": "USD", "total_amount": 27.5, "total_tip": 7, "total_processing_fee": 0, "total_tax": 2.75, "total_discount": 3, "total_refund": 0, "total_service_charge": 0, "buyer_tendered_cash_amount": 27500, "change_back_cash_amount": 27500, "card": {"bin": "41111", "card_type": "credit", "prepaid_type": "prepaid", "cardholder_name": "John Doe", "customer_id": "12345", "merchant_id": "12345", "exp_month": 1, "exp_year": 2022, "fingerprint": " Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.", "last_4": "The last 4 digits of the card number.", "enabled": true, "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "reference_id": "card-001", "version": "230320320320"}, "card_status": "authorized", "card_entry_method": "swiped"}, {"name": "10% off", "type": "cash", "note": "An optional note associated with the tender at the time of payment.", "amount": 27500, "percentage": 10, "currency": "USD", "total_amount": 27.5, "total_tip": 7, "total_processing_fee": 0, "total_tax": 2.75, "total_discount": 3, "total_refund": 0, "total_service_charge": 0, "buyer_tendered_cash_amount": 27500, "change_back_cash_amount": 27500, "card": {"bin": "41111", "card_type": "credit", "prepaid_type": "prepaid", "cardholder_name": "John Doe", "customer_id": "12345", "merchant_id": "12345", "exp_month": 1, "exp_year": 2022, "fingerprint": " Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.", "last_4": "The last 4 digits of the card number.", "enabled": true, "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "reference_id": "card-001", "version": "230320320320"}, "card_status": "authorized", "card_entry_method": "swiped"}], "voided": false, "version": "230320320320", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "clover", "resource": "orders", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.ordersDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "clover", "resource": "orders", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.ordersPay:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"idempotency_key": "random_string", "order_number": "1F", "order_date": "2022-08-12", "closed_date": "2022-08-13", "reference_id": "my-order-001", "status": "open", "payment_status": "open", "currency": "USD", "merchant_id": "12345", "customer_id": "12345", "employee_id": "12345", "location_id": "12345", "order_type_id": "12345", "table": "1F", "seat": "23F", "total_amount": 275, "total_tip": 700, "total_tax": 275, "total_discount": 300, "total_refund": 0, "total_service_charge": 0, "refunded": false, "customers": [{"id": "12345", "first_name": "Elon", "middle_name": "D.", "last_name": "Musk", "phone_numbers": [{"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}], "emails": [{"id": "123", "email": "elon@musk.com", "type": "primary"}, {"id": "123", "email": "elon@musk.com", "type": "primary"}]}], "fulfillments": [{"id": "12345", "type": "shipment", "pickup_details": {"auto_complete_duration": "P1W3D", "cancel_reason": "Not hungry", "expires_at": "2016-09-04T23:59:33.123Z", "pickup_at": "2016-09-04T23:59:33.123Z", "pickup_window_duration": "P1W3D", "prep_time_duration": "P1W3D", "note": "Pickup in the back.", "placed_at": "2016-09-04T23:59:33.123Z", "rejected_at": "2016-09-04T23:59:33.123Z", "ready_at": "2016-09-04T23:59:33.123Z", "expired_at": "2016-09-04T23:59:33.123Z", "picked_up_at": "2016-09-04T23:59:33.123Z", "canceled_at": "2016-09-04T23:59:33.123Z", "curbside_pickup_details": {"buyer_arrived_at": "2016-09-04T23:59:33.123Z"}, "recipient": {"customer_id": "12345", "display_name": "Elon Musk", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "phone_number": {"id": "12345", "country_code": "1", "area_code": "323", "number": "111-111-1111", "extension": "105", "type": "primary"}, "email": {"id": "123", "email": "elon@musk.com", "type": "primary"}}}}], "line_items": [{"name": "New York Strip Steak", "total_tax": 2000, "total_discount": 3000, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "applied_taxes": [], "applied_discounts": [{"discount_id": "12345", "amount": 27500, "currency": "USD"}, {"discount_id": "12345", "amount": 27500, "currency": "USD"}, {"discount_id": "12345", "amount": 27500, "currency": "USD"}], "modifiers": [{"id": "12345", "name": "New York Strip Steak - no cheese", "amount": 27500, "currency": "USD", "alternate_name": "Modifier New", "modifier_group_id": "123"}, {"id": "12345", "name": "New York Strip Steak - no cheese", "amount": 27500, "currency": "USD", "alternate_name": "Modifier New", "modifier_group_id": "123"}, {"id": "12345", "name": "New York Strip Steak - no cheese", "amount": 27500, "currency": "USD", "alternate_name": "Modifier New", "modifier_group_id": "123"}]}, {"name": "New York Strip Steak", "total_tax": 2000, "total_discount": 3000, "total_amount": 27500, "quantity": 1, "unit_price": 27500.5, "applied_taxes": [], "applied_discounts": [], "modifiers": [{"id": "12345", "name": "New York Strip Steak - no cheese", "amount": 27500, "currency": "USD", "alternate_name": "Modifier New", "modifier_group_id": "123"}]}], "payments": [{"amount": 27500, "currency": "USD"}], "service_charges": [{"name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}], "refunds": [{"amount": 27500, "currency": "USD", "reason": "The reason for the refund being issued."}], "taxes": [{"id": "state-sales-tax", "name": "State Sales Tax", "amount": 27500, "currency": "USD", "percentage": 15, "auto_applied": true}], "discounts": [], "tenders": [], "voided": false, "version": "230320320320", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "clover", "resource": "orders", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.paymentsAll:
    "":
      parameters:
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "PosPayments", "operation": "all", "data": [{"id": "12345", "source_id": "12345", "order_id": "12345", "merchant_id": "12345", "customer_id": "12345", "employee_id": "12345", "location_id": "12345", "device_id": "12345", "tender_id": "12345", "external_payment_id": "12345", "idempotency_key": "random_string", "amount": 27.5, "currency": "USD", "tip": 7, "tax": 20, "total": 37.5, "app_fee": 3, "change_back_cash_amount": 20, "approved": 37.5, "refunded": 37.5, "processing_fees": [{"amount": 1.05, "effective_at": "2020-09-30T07:43:32.000Z", "processing_type": "initial"}], "source": "external", "status": "approved", "card_details": {"card": {"id": "12345", "bin": "41111", "card_type": "credit", "prepaid_type": "prepaid", "cardholder_name": "John Doe", "customer_id": "12345", "merchant_id": "12345", "exp_month": 1, "exp_year": 2022, "fingerprint": " Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.", "last_4": "The last 4 digits of the card number.", "enabled": true, "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "reference_id": "card-001", "version": "230320320320"}}, "bank_account": {"country": "US"}, "external_details": {"type": "other", "source": "<value>", "source_fee_amount": 2.5}, "service_charges": [{"id": "12345", "name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}, {"id": "12345", "name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}], "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.paymentsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"source_id": "12345", "order_id": "12345", "merchant_id": "12345", "customer_id": "12345", "employee_id": "12345", "location_id": "12345", "device_id": "12345", "tender_id": "12345", "external_payment_id": "12345", "idempotency_key": "random_string", "amount": 27.5, "currency": "USD", "tip": 7, "tax": 20, "total": 37.5, "app_fee": 3, "change_back_cash_amount": 20, "approved": 37.5, "refunded": 37.5, "processing_fees": [{"amount": 1.05, "effective_at": "2020-09-30T07:43:32.000Z", "processing_type": "initial"}], "source": "external", "status": "approved", "card_details": {"card": {"bin": "41111", "card_type": "credit", "prepaid_type": "prepaid", "cardholder_name": "John Doe", "customer_id": "12345", "merchant_id": "12345", "exp_month": 1, "exp_year": 2022, "fingerprint": " Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.", "last_4": "The last 4 digits of the card number.", "enabled": true, "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "reference_id": "card-001", "version": "230320320320"}}, "bank_account": {"country": "US"}, "external_details": {"type": "bank_transfer", "source": "<value>", "source_fee_amount": 2.5}, "service_charges": [{"name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "PosPayments", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.paymentsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "PosPayments", "operation": "one", "data": {"id": "12345", "source_id": "12345", "order_id": "12345", "merchant_id": "12345", "customer_id": "12345", "employee_id": "12345", "location_id": "12345", "device_id": "12345", "tender_id": "12345", "external_payment_id": "12345", "idempotency_key": "random_string", "amount": 27.5, "currency": "USD", "tip": 7, "tax": 20, "total": 37.5, "app_fee": 3, "change_back_cash_amount": 20, "approved": 37.5, "refunded": 37.5, "processing_fees": [{"amount": 1.05, "effective_at": "2020-09-30T07:43:32.000Z", "processing_type": "initial"}], "source": "external", "status": "approved", "card_details": {"card": {"id": "12345", "bin": "41111", "card_type": "credit", "prepaid_type": "prepaid", "cardholder_name": "John Doe", "customer_id": "12345", "merchant_id": "12345", "exp_month": 1, "exp_year": 2022, "fingerprint": " Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.", "last_4": "The last 4 digits of the card number.", "enabled": true, "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "reference_id": "card-001", "version": "230320320320"}}, "bank_account": {"country": "US"}, "external_details": {"type": "emoney", "source": "<value>", "source_fee_amount": 2.5}, "service_charges": [{"id": "12345", "name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}, {"id": "12345", "name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}], "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.paymentsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"source_id": "12345", "order_id": "12345", "merchant_id": "12345", "customer_id": "12345", "employee_id": "12345", "location_id": "12345", "device_id": "12345", "tender_id": "12345", "external_payment_id": "12345", "idempotency_key": "random_string", "amount": 27.5, "currency": "USD", "tip": 7, "tax": 20, "total": 37.5, "app_fee": 3, "change_back_cash_amount": 20, "approved": 37.5, "refunded": 37.5, "processing_fees": [{"amount": 1.05, "effective_at": "2020-09-30T07:43:32.000Z", "processing_type": "initial"}], "source": "external", "status": "approved", "card_details": {"card": {"bin": "41111", "card_type": "credit", "prepaid_type": "prepaid", "cardholder_name": "John Doe", "customer_id": "12345", "merchant_id": "12345", "exp_month": 1, "exp_year": 2022, "fingerprint": " Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.", "last_4": "The last 4 digits of the card number.", "enabled": true, "billing_address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "reference_id": "card-001", "version": "230320320320"}}, "bank_account": {"country": "US"}, "external_details": {"type": "stored_balance", "source": "<value>", "source_fee_amount": 2.5}, "service_charges": [{"name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}], "pass_through": [{"service_id": "<id>", "extend_paths": []}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "PosPayments", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.paymentsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "PosPayments", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.merchantsAll:
    "":
      parameters:
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Merchants", "operation": "all", "data": [{"id": "12345", "name": "Dunkin Donuts", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "owner_id": "12345", "main_location_id": "12345", "status": "active", "service_charges": [{"id": "12345", "name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}, {"id": "12345", "name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}, {"id": "12345", "name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}], "language": "EN", "currency": "USD", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.merchantsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Dunkin Donuts", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "owner_id": "12345", "main_location_id": "12345", "status": "active", "service_charges": [{"name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}, {"name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}], "language": "EN", "currency": "USD", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Merchants", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.merchantsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Merchants", "operation": "one", "data": {"id": "12345", "name": "Dunkin Donuts", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "owner_id": "12345", "main_location_id": "12345", "status": "active", "service_charges": [{"id": "12345", "name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}, {"id": "12345", "name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}, {"id": "12345", "name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}], "language": "EN", "currency": "USD", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.merchantsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Dunkin Donuts", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "owner_id": "12345", "main_location_id": "12345", "status": "active", "service_charges": [{"name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}, {"name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}, {"name": "Charge for delivery", "amount": 27500, "percentage": 12.5, "currency": "USD", "active": true}], "language": "EN", "currency": "USD", "pass_through": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Merchants", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.merchantsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Merchants", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.locationsAll:
    "":
      parameters:
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Locations", "operation": "all", "data": [{"id": "12345", "name": "Dunkin Donuts", "business_name": "Dunkin Donuts LLC", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "status": "active", "merchant_id": "12345", "currency": "USD", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "name": "Dunkin Donuts", "business_name": "Dunkin Donuts LLC", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "status": "active", "merchant_id": "12345", "currency": "USD", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.locationsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Dunkin Donuts", "business_name": "Dunkin Donuts LLC", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "status": "active", "merchant_id": "12345", "currency": "USD", "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Locations", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.locationsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Locations", "operation": "one", "data": {"id": "12345", "name": "Dunkin Donuts", "business_name": "Dunkin Donuts LLC", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "status": "active", "merchant_id": "12345", "currency": "USD", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.locationsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Dunkin Donuts", "business_name": "Dunkin Donuts LLC", "address": {"id": "123", "type": "primary", "string": "25 Spring Street, Blackburn, VIC 3130", "name": "HQ US", "line1": "Main street", "line2": "apt #", "line3": "Suite #", "line4": "delivery instructions", "street_number": "25", "city": "San Francisco", "state": "CA", "postal_code": "94104", "country": "US", "latitude": "40.759211", "longitude": "-73.984638", "county": "Santa Clara", "contact_name": "Elon Musk", "salutation": "Mr", "phone_number": "111-111-1111", "fax": "122-111-1111", "email": "elon@musk.com", "website": "https://elonmusk.com", "notes": "Address notes or delivery instructions.", "row_version": "1-12345"}, "status": "active", "merchant_id": "12345", "currency": "USD", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Locations", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.locationsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Locations", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.itemsAll:
    "":
      parameters:
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Items", "operation": "all", "data": [{"id": "#cocoa", "idempotency_key": "random_string", "name": "Cocoa", "description": "Hot Chocolate", "abbreviation": "Ch", "product_type": "regular", "price_amount": 10, "pricing_type": "fixed", "price_currency": "USD", "cost": 2, "tax_ids": ["12345", "67890"], "is_revenue": false, "use_default_tax_rates": false, "absent_at_location_ids": ["12345", "67890"], "present_at_all_locations": false, "available_for_pickup": false, "available_online": false, "sku": "11910345", "code": "11910345", "categories": [{"id": "12345", "name": "Food", "image_ids": ["12345", "67890"]}], "options": [{"id": "12345", "name": "Option 1", "attribute_id": "12345"}, {"id": "12345", "name": "Option 1", "attribute_id": "12345"}, {"id": "12345", "name": "Option 1", "attribute_id": "12345"}], "variations": [{"id": "12345", "name": "Food", "sku": "11910345", "item_id": "12345", "sequence": 0, "pricing_type": "fixed", "price_amount": 10, "price_currency": "USD", "stockable": false, "present_at_all_locations": false, "version": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}], "modifier_groups": [{"id": "12345"}], "available": true, "hidden": true, "version": "12345", "deleted": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}, {"id": "#cocoa", "idempotency_key": "random_string", "name": "Cocoa", "description": "Hot Chocolate", "abbreviation": "Ch", "product_type": "regular", "price_amount": 10, "pricing_type": "fixed", "price_currency": "USD", "cost": 2, "tax_ids": ["12345", "67890"], "is_revenue": false, "use_default_tax_rates": false, "absent_at_location_ids": ["12345", "67890"], "present_at_all_locations": false, "available_for_pickup": false, "available_online": false, "sku": "11910345", "code": "11910345", "categories": [{"id": "12345", "name": "Food", "image_ids": ["12345", "67890"]}], "options": [{"id": "12345", "name": "Option 1", "attribute_id": "12345"}], "variations": [{"id": "12345", "name": "Food", "sku": "11910345", "item_id": "12345", "sequence": 0, "pricing_type": "fixed", "price_amount": 10, "price_currency": "USD", "stockable": false, "present_at_all_locations": false, "version": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}], "modifier_groups": [{"id": "12345"}], "available": true, "hidden": true, "version": "12345", "deleted": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.itemsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"id": "#cocoa", "idempotency_key": "random_string", "name": "Cocoa", "description": "Hot Chocolate", "abbreviation": "Ch", "product_type": "regular", "price_amount": 10, "pricing_type": "fixed", "price_currency": "USD", "cost": 2, "tax_ids": ["12345", "67890"], "is_revenue": false, "use_default_tax_rates": false, "absent_at_location_ids": ["12345", "67890"], "present_at_all_locations": false, "available_for_pickup": false, "available_online": false, "sku": "11910345", "code": "11910345", "categories": [{"name": "Food", "image_ids": ["12345", "67890"]}], "options": [{"id": "12345", "name": "Option 1", "attribute_id": "12345"}], "variations": [{"name": "Food", "sku": "11910345", "sequence": 0, "pricing_type": "fixed", "price_amount": 10, "price_currency": "USD", "stockable": false, "present_at_all_locations": false}], "available": true, "hidden": true, "deleted": true, "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Items", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.itemsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Items", "operation": "one", "data": {"id": "#cocoa", "idempotency_key": "random_string", "name": "Cocoa", "description": "Hot Chocolate", "abbreviation": "Ch", "product_type": "regular", "price_amount": 10, "pricing_type": "fixed", "price_currency": "USD", "cost": 2, "tax_ids": ["12345", "67890"], "is_revenue": false, "use_default_tax_rates": false, "absent_at_location_ids": ["12345", "67890"], "present_at_all_locations": false, "available_for_pickup": false, "available_online": false, "sku": "11910345", "code": "11910345", "categories": [{"id": "12345", "name": "Food", "image_ids": ["12345", "67890"]}], "options": [{"id": "12345", "name": "Option 1", "attribute_id": "12345"}], "variations": [{"id": "12345", "name": "Food", "sku": "11910345", "item_id": "12345", "sequence": 0, "pricing_type": "fixed", "price_amount": 10, "price_currency": "USD", "stockable": false, "present_at_all_locations": false, "version": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}], "modifier_groups": [{"id": "12345"}], "available": true, "hidden": true, "version": "12345", "deleted": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.itemsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"id": "#cocoa", "idempotency_key": "random_string", "name": "Cocoa", "description": "Hot Chocolate", "abbreviation": "Ch", "product_type": "regular", "price_amount": 10, "pricing_type": "fixed", "price_currency": "USD", "cost": 2, "tax_ids": ["12345", "67890"], "is_revenue": false, "use_default_tax_rates": false, "absent_at_location_ids": ["12345", "67890"], "present_at_all_locations": false, "available_for_pickup": false, "available_online": false, "sku": "11910345", "code": "11910345", "categories": [{"name": "Food", "image_ids": ["12345", "67890"]}], "options": [{"id": "12345", "name": "Option 1", "attribute_id": "12345"}], "variations": [{"name": "Food", "sku": "11910345", "sequence": 0, "pricing_type": "fixed", "price_amount": 10, "price_currency": "USD", "stockable": false, "present_at_all_locations": false}], "available": true, "hidden": true, "deleted": true, "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Items", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.itemsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Items", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.modifiersAll:
    "":
      parameters:
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Modifiers", "operation": "all", "data": [{"id": "12345", "idempotency_key": "random_string", "name": "Modifier", "alternate_name": "Modifier New", "price_amount": 10, "currency": "USD", "modifier_group_id": "123", "available": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.modifiersAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"idempotency_key": "random_string", "name": "Modifier", "alternate_name": "Modifier New", "price_amount": 10, "currency": "USD", "modifier_group_id": "123", "available": true, "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Modifiers", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.modifiersOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          filter: {"modifier_group_id": "1234"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Modifiers", "operation": "one", "data": {"id": "12345", "idempotency_key": "random_string", "name": "Modifier", "alternate_name": "Modifier New", "price_amount": 10, "currency": "USD", "modifier_group_id": "123", "available": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.modifiersUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"idempotency_key": "random_string", "name": "Modifier", "alternate_name": "Modifier New", "price_amount": 10, "currency": "USD", "modifier_group_id": "123", "available": true, "pass_through": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Modifiers", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.modifiersDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          filter: {"modifier_group_id": "1234"}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "Modifiers", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.modifierGroupsAll:
    "":
      parameters:
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "ModifierGroups", "operation": "all", "data": [{"id": "12345", "name": "Modifier", "alternate_name": "Modifier New", "minimum_required": 1, "maximum_allowed": 5, "selection_type": "single", "present_at_all_locations": false, "modifiers": [], "deleted": true, "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "name": "Modifier", "alternate_name": "Modifier New", "minimum_required": 1, "maximum_allowed": 5, "selection_type": "single", "present_at_all_locations": false, "modifiers": [{"id": "12345", "name": "Modifier", "alternate_name": "Modifier New", "price_amount": 10, "currency": "USD", "available": true}, {"id": "12345", "name": "Modifier", "alternate_name": "Modifier New", "price_amount": 10, "currency": "USD", "available": true}], "deleted": true, "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}, {"id": "12345", "name": "Modifier", "alternate_name": "Modifier New", "minimum_required": 1, "maximum_allowed": 5, "selection_type": "single", "present_at_all_locations": false, "modifiers": [{"id": "12345", "name": "Modifier", "alternate_name": "Modifier New", "price_amount": 10, "currency": "USD", "available": true}], "deleted": true, "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.modifierGroupsAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Modifier", "alternate_name": "Modifier New", "minimum_required": 1, "maximum_allowed": 5, "selection_type": "single", "present_at_all_locations": false, "modifiers": [], "deleted": true, "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "ModifierGroups", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.modifierGroupsOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "ModifierGroups", "operation": "one", "data": {"id": "12345", "name": "Modifier", "alternate_name": "Modifier New", "minimum_required": 1, "maximum_allowed": 5, "selection_type": "single", "present_at_all_locations": false, "modifiers": [{"id": "12345", "name": "Modifier", "alternate_name": "Modifier New", "price_amount": 10, "currency": "USD", "available": true}, {"id": "12345", "name": "Modifier", "alternate_name": "Modifier New", "price_amount": 10, "currency": "USD", "available": true}, {"id": "12345", "name": "Modifier", "alternate_name": "Modifier New", "price_amount": 10, "currency": "USD", "available": true}], "deleted": true, "row_version": "1-12345", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.modifierGroupsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Modifier", "alternate_name": "Modifier New", "minimum_required": 1, "maximum_allowed": 5, "selection_type": "single", "present_at_all_locations": false, "modifiers": [{"id": "12345", "name": "Modifier", "alternate_name": "Modifier New", "price_amount": 10, "currency": "USD", "available": true}], "deleted": true, "row_version": "1-12345", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "ModifierGroups", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.modifierGroupsDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "square", "resource": "ModifierGroups", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.orderTypesAll:
    "":
      parameters:
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "clover", "resource": "OrderTypes", "operation": "all", "data": [{"id": "12345", "name": "Default order type", "default": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}, {"id": "12345", "name": "Default order type", "default": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}, {"id": "12345", "name": "Default order type", "default": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.orderTypesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Default order type", "default": true, "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "clover", "resource": "OrderTypes", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.orderTypesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "clover", "resource": "OrderTypes", "operation": "one", "data": {"id": "12345", "name": "Default order type", "default": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.orderTypesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"name": "Default order type", "default": true, "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "clover", "resource": "OrderTypes", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.orderTypesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "clover", "resource": "OrderTypes", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.tendersAll:
    "":
      parameters:
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "clover", "resource": "Tenders", "operation": "all", "data": [], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.tendersAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"key": "com.clover.tender.cash", "label": "Cash", "active": true, "hidden": true, "editable": true, "pass_through": []}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "clover", "resource": "Tenders", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.tendersOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "clover", "resource": "Tenders", "operation": "one", "data": {"id": "12345", "key": "com.clover.tender.cash", "label": "Cash", "active": true, "hidden": true, "editable": true, "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.tendersUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"key": "com.clover.tender.cash", "label": "Cash", "active": true, "hidden": true, "editable": true, "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "clover", "resource": "Tenders", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  pos.tendersDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "clover", "resource": "Tenders", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  sms.messagesAll:
    "":
      parameters:
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "twilio", "resource": "Messages", "operation": "all", "data": [{"id": "12345", "from": "+15017122661", "to": "+15017122662", "subject": "Picture", "body": "Hi! How are you doing?", "type": "sms", "number_of_units": 1, "number_of_media_files": 1, "direction": "outbound-api", "status": "sent", "scheduled_at": "2020-09-30T07:43:32.000Z", "sent_at": "2020-09-30T07:43:32.000Z", "webhook_url": "https://unify.apideck.com/webhook/webhooks/eyz329dkffdl4949/x/sms", "reference": "CUST001", "price": {"per_unit": "0.01", "total_amount": "0.01", "currency": "USD"}, "error": {"code": "X1", "message": "Something went wrong"}, "messaging_service_id": "123456", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "from": "+15017122661", "to": "+15017122662", "subject": "Picture", "body": "Hi! How are you doing?", "type": "sms", "number_of_units": 1, "number_of_media_files": 1, "direction": "outbound-api", "status": "sent", "scheduled_at": "2020-09-30T07:43:32.000Z", "sent_at": "2020-09-30T07:43:32.000Z", "webhook_url": "https://unify.apideck.com/webhook/webhooks/eyz329dkffdl4949/x/sms", "reference": "CUST001", "price": {"per_unit": "0.01", "total_amount": "0.01", "currency": "USD"}, "error": {"code": "X1", "message": "Something went wrong"}, "messaging_service_id": "123456", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": []}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  sms.messagesAdd:
    "":
      parameters:
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"from": "+15017122661", "to": "+15017122662", "subject": "Picture", "body": "Hi! How are you doing?", "type": "sms", "scheduled_at": "2020-09-30T07:43:32.000Z", "webhook_url": "https://unify.apideck.com/webhook/webhooks/eyz329dkffdl4949/x/sms", "reference": "CUST001", "messaging_service_id": "123456", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "twilio", "resource": "Messages", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  sms.messagesOne:
    "":
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "twilio", "resource": "Messages", "operation": "one", "data": {"id": "12345", "from": "+15017122661", "to": "+15017122662", "subject": "Picture", "body": "Hi! How are you doing?", "type": "sms", "number_of_units": 1, "number_of_media_files": 1, "direction": "outbound-api", "status": "sent", "scheduled_at": "2020-09-30T07:43:32.000Z", "sent_at": "2020-09-30T07:43:32.000Z", "webhook_url": "https://unify.apideck.com/webhook/webhooks/eyz329dkffdl4949/x/sms", "reference": "CUST001", "price": {"per_unit": "0.01", "total_amount": "0.01", "currency": "USD"}, "error": {"code": "X1", "message": "Something went wrong"}, "messaging_service_id": "123456", "updated_by": "12345", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  sms.messagesUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"from": "+15017122661", "to": "+15017122662", "subject": "Picture", "body": "Hi! How are you doing?", "type": "sms", "scheduled_at": "2020-09-30T07:43:32.000Z", "webhook_url": "https://unify.apideck.com/webhook/webhooks/eyz329dkffdl4949/x/sms", "reference": "CUST001", "messaging_service_id": "123456", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "twilio", "resource": "Messages", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  sms.messagesDelete:
    "":
      parameters:
        path:
          id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "twilio", "resource": "Messages", "operation": "delete", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  issueTracking.collectionsAll:
    "":
      parameters:
        query:
          sort: {"by": "name", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "jira", "resource": "Tickets", "operation": "all", "data": [{"id": "12345", "parent_id": "12345", "type": "Technical", "name": "Main IT Issues", "description": "IT Issues", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}, {"id": "12345", "parent_id": "12345", "type": "Technical", "name": "Main IT Issues", "description": "IT Issues", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}, {"id": "12345", "parent_id": "12345", "type": "Technical", "name": "Main IT Issues", "description": "IT Issues", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  issueTracking.collectionsOne:
    "":
      parameters:
        path:
          collection_id: "apideck-io"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "jira", "resource": "Tickets", "operation": "one", "data": {"id": "12345", "parent_id": "12345", "type": "Technical", "name": "Main IT Issues", "description": "IT Issues", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  issueTracking.collectionTicketsAll:
    "":
      parameters:
        path:
          collection_id: "apideck-io"
        query:
          sort: {"by": "created_at", "direction": "desc"}
          filter: {"status": ["open"], "since": "2020-09-30T07:43:32.000Z", "assignee_id": "2332bd9c2eaaa5dcfa14721c"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "jira", "resource": "Tickets", "operation": "all", "data": [{"id": "12345", "parent_id": "12345", "collection_id": "12345", "type": "Technical", "subject": "Technical Support Request", "description": "I am facing issues with my internet connection", "status": "open", "priority": "high", "assignees": [{"id": "12345", "username": "Cocoa"}, {"id": "12345", "username": "Cocoa"}], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "created_by": "12345", "due_date": "2020-09-30T07:43:32.000Z", "completed_at": "2020-09-30T07:43:32.000Z", "tags": [{"id": "12345", "name": "User Experience"}, {"id": "12345", "name": "User Experience"}, {"id": "12345", "name": "User Experience"}], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "parent_id": "12345", "collection_id": "12345", "type": "Technical", "subject": "Technical Support Request", "description": "I am facing issues with my internet connection", "status": "open", "priority": "high", "assignees": [], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "created_by": "12345", "due_date": "2020-09-30T07:43:32.000Z", "completed_at": "2020-09-30T07:43:32.000Z", "tags": [{"id": "12345", "name": "User Experience"}], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}, {"id": "12345", "parent_id": "12345", "collection_id": "12345", "type": "Technical", "subject": "Technical Support Request", "description": "I am facing issues with my internet connection", "status": "open", "priority": "high", "assignees": [{"id": "12345", "username": "Cocoa"}, {"id": "12345", "username": "Cocoa"}, {"id": "12345", "username": "Cocoa"}], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "created_by": "12345", "due_date": "2020-09-30T07:43:32.000Z", "completed_at": "2020-09-30T07:43:32.000Z", "tags": [], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  issueTracking.collectionTicketsAdd:
    "":
      parameters:
        path:
          collection_id: "apideck-io"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"parent_id": "12345", "type": "Technical", "subject": "Technical Support Request", "description": "I am facing issues with my internet connection", "status": "open", "priority": "high", "assignees": [{"id": "12345"}], "due_date": "2020-09-30T07:43:32.000Z", "tags": [{"id": "12345"}, {"id": "12345"}], "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": []}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "jira", "resource": "Tickets", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  issueTracking.collectionTicketsOne:
    "":
      parameters:
        path:
          ticket_id: "<id>"
          collection_id: "apideck-io"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Tickets", "operation": "one", "data": {"id": "12345", "parent_id": "12345", "collection_id": "12345", "type": "Technical", "subject": "Technical Support Request", "description": "I am facing issues with my internet connection", "status": "open", "priority": "high", "assignees": [], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "created_by": "12345", "due_date": "2020-09-30T07:43:32.000Z", "completed_at": "2020-09-30T07:43:32.000Z", "tags": [{"id": "12345", "name": "User Experience"}], "pass_through": []}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  issueTracking.collectionTicketsUpdate:
    "":
      parameters:
        path:
          ticket_id: "<id>"
          collection_id: "apideck-io"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"parent_id": "12345", "type": "Technical", "subject": "Technical Support Request", "description": "I am facing issues with my internet connection", "status": "open", "priority": "high", "assignees": [], "due_date": "2020-09-30T07:43:32.000Z", "tags": [{"id": "12345"}, {"id": "12345"}, {"id": "12345"}], "pass_through": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "github", "resource": "Tickets", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  issueTracking.collectionTicketsDelete:
    "":
      parameters:
        path:
          ticket_id: "<id>"
          collection_id: "apideck-io"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "jira", "resource": "Tickets", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  issueTracking.collectionTicketCommentsAll:
    "":
      parameters:
        path:
          collection_id: "apideck-io"
          ticket_id: "<id>"
        query:
          sort: {"by": "created_at", "direction": "desc"}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "jira", "resource": "Tickets", "operation": "all", "data": [{"id": "12345", "body": "What internet provider do you use?", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  issueTracking.collectionTicketCommentsAdd:
    "":
      parameters:
        path:
          collection_id: "apideck-io"
          ticket_id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"body": "What internet provider do you use?", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "service": "jira", "resource": "Tickets", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  issueTracking.collectionTicketCommentsOne:
    "":
      parameters:
        path:
          id: "<id>"
          collection_id: "apideck-io"
          ticket_id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "sage-hr", "resource": "Tickets", "operation": "one", "data": {"id": "12345", "body": "What internet provider do you use?", "created_by": "12345", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z", "pass_through": [{"service_id": "<id>", "extend_paths": []}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  issueTracking.collectionTicketCommentsUpdate:
    "":
      parameters:
        path:
          id: "<id>"
          collection_id: "apideck-io"
          ticket_id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      requestBody:
        application/json: {"body": "What internet provider do you use?", "pass_through": [{"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}, {"service_id": "<id>", "extend_paths": [{"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}, {"path": "$.nested.property", "value": {"TaxClassificationRef": {"value": "EUC-99990201-V1-00020000"}}}]}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "github", "resource": "Tickets", "operation": "update", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  issueTracking.collectionTicketCommentsDelete:
    "":
      parameters:
        path:
          id: "<id>"
          collection_id: "apideck-io"
          ticket_id: "<id>"
        query: {}
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "jira", "resource": "Tickets", "operation": "add", "data": {"id": "12345"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  issueTracking.collectionUsersAll:
    "":
      parameters:
        path:
          collection_id: "apideck-io"
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "jira", "resource": "Tickets", "operation": "all", "data": [], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  issueTracking.collectionUsersOne:
    "":
      parameters:
        path:
          collection_id: "apideck-io"
          id: "<id>"
        query:
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "jira", "resource": "Tickets", "operation": "one", "data": {"id": "12345", "name": "Elon Musk", "first_name": "Elon", "last_name": "Musk", "email": "elon@musk.com", "photo_url": "https://unavatar.io/elon-musk", "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  issueTracking.collectionTagsAll:
    "":
      parameters:
        path:
          collection_id: "apideck-io"
        query:
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "jira", "resource": "Tickets", "operation": "all", "data": [{"id": "12345", "name": "User Experience"}, {"id": "12345", "name": "User Experience"}, {"id": "12345", "name": "User Experience"}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  connector.connectorsAll:
    "":
      parameters:
        query:
          filter: {"unified_api": "file-storage"}
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": [{"id": "crm+salesforce", "name": "Salesforce", "description": "A description", "icon_url": "https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png", "logo_url": "https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg", "website_url": "https://www.salesforce.com", "signup_url": "https://www.salesforce.com/signup", "partner_signup_url": "https://www.salesforce.com/partners", "auth_type": "oauth2", "auth_only": true, "blind_mapped": true, "oauth_grant_type": "authorization_code", "oauth_credentials_source": "integration", "oauth_scopes": [], "custom_scopes": true, "has_sandbox_credentials": true, "settings": [], "service_id": "close", "unified_apis": [], "supported_resources": [{"id": "companies", "name": "Companies", "downstream_id": "accounts", "downstream_name": "Accounts"}, {"id": "companies", "name": "Companies", "downstream_id": "accounts", "downstream_name": "Accounts"}, {"id": "companies", "name": "Companies", "downstream_id": "accounts", "downstream_name": "Accounts"}], "configurable_resources": ["leads", "companies"], "supported_events": [{"event_type": "employee.created", "event_source": "native", "downstream_event_type": "person_created", "resources": ["companies"], "entity_type": "employee"}, {"event_type": "employee.created", "event_source": "native", "downstream_event_type": "person_created", "resources": ["companies"], "entity_type": "employee"}], "webhook_support": {"mode": "native", "subscription_level": "integration", "managed_via": "api"}, "schema_support": {"supported": true}, "docs": [{"id": "12345", "name": "connection", "url": "https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection"}]}, {"id": "crm+salesforce", "name": "Salesforce", "description": "A description", "icon_url": "https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png", "logo_url": "https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg", "website_url": "https://www.salesforce.com", "signup_url": "https://www.salesforce.com/signup", "partner_signup_url": "https://www.salesforce.com/partners", "auth_type": "oauth2", "auth_only": true, "blind_mapped": true, "oauth_grant_type": "authorization_code", "oauth_credentials_source": "integration", "oauth_scopes": [], "custom_scopes": true, "has_sandbox_credentials": true, "settings": [{"id": "pipeline_id", "label": "Pipeline", "type": "select"}, {"id": "pipeline_id", "label": "Pipeline", "type": "select"}], "service_id": "close", "unified_apis": [{"id": "crm", "name": "File Storage API", "auth_only": true, "oauth_scopes": [{"id": "contacts:all", "label": "Read/write on the Contacts resource"}], "supported_resources": [], "downstream_unsupported_resources": ["companies"], "supported_events": [{"event_type": "employee.created", "event_source": "native", "downstream_event_type": "person_created", "resources": ["companies"], "entity_type": "employee"}, {"event_type": "employee.created", "event_source": "native", "downstream_event_type": "person_created", "resources": ["companies"], "entity_type": "employee"}]}], "supported_resources": [{"id": "companies", "name": "Companies", "downstream_id": "accounts", "downstream_name": "Accounts"}], "configurable_resources": ["leads", "companies"], "supported_events": [], "webhook_support": {"mode": "native", "subscription_level": "integration", "managed_via": "api"}, "schema_support": {"supported": true}, "docs": [{"id": "12345", "name": "connection", "url": "https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection"}, {"id": "12345", "name": "connection", "url": "https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection"}, {"id": "12345", "name": "connection", "url": "https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection"}]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  connector.connectorsOne:
    "":
      parameters:
        path:
          id: "<id>"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"id": "crm+salesforce", "name": "Salesforce", "description": "A description", "icon_url": "https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png", "logo_url": "https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg", "website_url": "https://www.salesforce.com", "signup_url": "https://www.salesforce.com/signup", "partner_signup_url": "https://www.salesforce.com/partners", "auth_type": "oauth2", "auth_only": true, "blind_mapped": true, "oauth_grant_type": "authorization_code", "oauth_credentials_source": "integration", "oauth_scopes": [{"id": "contacts:all", "label": "Read/write on the Contacts resource", "default_apis": ["crm"]}, {"id": "contacts:all", "label": "Read/write on the Contacts resource", "default_apis": ["crm"]}], "custom_scopes": true, "has_sandbox_credentials": true, "settings": [{"id": "pipeline_id", "label": "Pipeline", "type": "select"}], "service_id": "close", "unified_apis": [{"id": "crm", "name": "File Storage API", "auth_only": true, "oauth_scopes": [{"id": "contacts:all", "label": "Read/write on the Contacts resource"}], "supported_resources": [{"id": "companies", "name": "Companies", "downstream_id": "accounts", "downstream_name": "Accounts"}, {"id": "companies", "name": "Companies", "downstream_id": "accounts", "downstream_name": "Accounts"}, {"id": "companies", "name": "Companies", "downstream_id": "accounts", "downstream_name": "Accounts"}], "downstream_unsupported_resources": ["companies"], "supported_events": [{"event_type": "employee.created", "event_source": "native", "downstream_event_type": "person_created", "resources": ["companies"], "entity_type": "employee"}, {"event_type": "employee.created", "event_source": "native", "downstream_event_type": "person_created", "resources": ["companies"], "entity_type": "employee"}]}, {"id": "crm", "name": "File Storage API", "auth_only": true, "oauth_scopes": [{"id": "contacts:all", "label": "Read/write on the Contacts resource"}], "supported_resources": [{"id": "companies", "name": "Companies", "downstream_id": "accounts", "downstream_name": "Accounts"}, {"id": "companies", "name": "Companies", "downstream_id": "accounts", "downstream_name": "Accounts"}, {"id": "companies", "name": "Companies", "downstream_id": "accounts", "downstream_name": "Accounts"}], "downstream_unsupported_resources": ["companies"], "supported_events": [{"event_type": "employee.created", "event_source": "native", "downstream_event_type": "person_created", "resources": ["companies"], "entity_type": "employee"}, {"event_type": "employee.created", "event_source": "native", "downstream_event_type": "person_created", "resources": ["companies"], "entity_type": "employee"}]}], "supported_resources": [{"id": "companies", "name": "Companies", "downstream_id": "accounts", "downstream_name": "Accounts"}, {"id": "companies", "name": "Companies", "downstream_id": "accounts", "downstream_name": "Accounts"}, {"id": "companies", "name": "Companies", "downstream_id": "accounts", "downstream_name": "Accounts"}], "configurable_resources": ["leads", "companies"], "supported_events": [], "webhook_support": {"mode": "native", "subscription_level": "integration", "managed_via": "api"}, "schema_support": {"supported": true}, "docs": []}, "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  connector.connectorDocsOne:
    "":
      parameters:
        path:
          id: "<id>"
          doc_id: "application_owner+oauth_credentials"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      responses:
        "200":
          text/markdown: "<value>"
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  connector.connectorResourcesOne:
    "":
      parameters:
        path:
          id: "<id>"
          resource_id: "<id>"
        query:
          unified_api: "crm"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"id": "companies", "name": "Companies", "downstream_id": "accounts", "downstream_name": "Accounts", "pagination": {"mode": "native"}, "supported_operations": ["all", "one", "add", "update", "delete"], "downstream_unsupported_operations": ["upload"], "supported_filters": ["name", "email"], "supported_sort_by": ["updated_at", "created_at", "name"], "supported_fields": [{"unified_property": "owner_id"}, {"unified_property": "owner_id", "child_properties": []}, {"unified_property": "owner_id", "child_properties": []}], "supported_list_fields": [{"unified_property": "owner_id", "child_properties": []}, {"unified_property": "owner_id", "child_properties": []}, {"unified_property": "owner_id", "child_properties": []}]}, "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  connector.apisAll:
    "":
      parameters:
        query:
          filter: {"status": "beta"}
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": [{"id": "file-storage", "name": "File Storage API", "description": "Manage API keys, access tokens, OAuth flows and integrations.", "spec_url": "https://specs.apideck.com/file-storage.yml", "api_reference_url": "https://developers.apideck.com/apis/file-storage/reference", "postman_collection_id": "1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f", "categories": ["files", "file-storage", "cloud-storage", "object-storage"], "resources": [], "events": ["crm.contact.updated", "accounting.invoice.created"]}, {"id": "file-storage", "name": "File Storage API", "description": "Manage API keys, access tokens, OAuth flows and integrations.", "spec_url": "https://specs.apideck.com/file-storage.yml", "api_reference_url": "https://developers.apideck.com/apis/file-storage/reference", "postman_collection_id": "1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f", "categories": ["files", "file-storage", "cloud-storage", "object-storage"], "resources": [{"id": "companies", "name": "Companies", "excluded_from_coverage": false}], "events": ["crm.contact.updated", "accounting.invoice.created"]}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  connector.apisOne:
    "":
      parameters:
        path:
          id: "<id>"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"id": "file-storage", "name": "File Storage API", "description": "Manage API keys, access tokens, OAuth flows and integrations.", "spec_url": "https://specs.apideck.com/file-storage.yml", "api_reference_url": "https://developers.apideck.com/apis/file-storage/reference", "postman_collection_id": "1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f", "categories": ["files", "file-storage", "cloud-storage", "object-storage"], "resources": [{"id": "companies", "name": "Companies", "excluded_from_coverage": false}], "events": ["crm.contact.updated", "accounting.invoice.created"]}, "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  connector.apiResourcesOne:
    "":
      parameters:
        path:
          id: "<id>"
          resource_id: "<id>"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"id": "companies", "name": "Companies", "linked_resources": []}, "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  connector.apiResourceCoverageOne:
    "":
      parameters:
        path:
          id: "<id>"
          resource_id: "<id>"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"id": "companies", "name": "Companies", "coverage": [{"downstream_id": "accounts", "downstream_name": "Accounts", "pagination": {"mode": "native"}, "supported_operations": ["all", "one", "add", "update", "delete"], "supported_filters": ["name", "email"], "supported_sort_by": ["updated_at", "created_at", "name"], "supported_fields": [{"unified_property": "owner_id", "child_properties": []}, {"unified_property": "owner_id", "child_properties": []}, {"unified_property": "owner_id", "child_properties": []}], "supported_list_fields": [{"unified_property": "owner_id", "child_properties": []}, {"unified_property": "owner_id", "child_properties": []}, {"unified_property": "owner_id", "child_properties": []}]}, {"downstream_id": "accounts", "downstream_name": "Accounts", "pagination": {"mode": "native"}, "supported_operations": ["all", "one", "add", "update", "delete"], "supported_filters": ["name", "email"], "supported_sort_by": ["updated_at", "created_at", "name"], "supported_fields": [{"unified_property": "owner_id", "child_properties": []}, {"unified_property": "owner_id", "child_properties": []}], "supported_list_fields": [{"unified_property": "owner_id", "child_properties": []}, {"unified_property": "owner_id", "child_properties": []}]}]}, "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.consumersAdd:
    "":
      parameters:
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      requestBody:
        application/json: {"consumer_id": "test_consumer_id", "metadata": {"account_name": "SpaceX", "user_name": "Elon Musk", "email": "elon@musk.com", "image": "https://www.spacex.com/static/images/share.jpg"}}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"consumer_id": "test_consumer_id", "application_id": "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX", "metadata": {"account_name": "SpaceX", "user_name": "Elon Musk", "email": "elon@musk.com", "image": "https://www.spacex.com/static/images/share.jpg"}, "connections": [], "services": ["salesforce", "stripe"], "aggregated_request_count": 101, "request_counts": {"unify": 100, "proxy": 10, "vault": 21}, "created": "2021-05-07T12:55:42.242Z", "modified": "2021-05-07T12:55:42.242Z", "request_count_updated": "2021-05-07T12:55:42.242Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.consumersAll:
    "":
      parameters:
        query: {}
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": [], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.consumersOne:
    "":
      parameters:
        path:
          consumer_id: "test_user_id"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"consumer_id": "test_consumer_id", "application_id": "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX", "metadata": {"account_name": "SpaceX", "user_name": "Elon Musk", "email": "elon@musk.com", "image": "https://www.spacex.com/static/images/share.jpg"}, "connections": [{"id": "1111+test_user_id", "name": "Salesforce", "icon": "https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png", "logo": "https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg", "website": "https://www.salesforce.com", "tag_line": "CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.", "service_id": "teamleader", "unified_api": "crm", "consumer_id": "test_user_id", "auth_type": "oauth2", "enabled": true, "metadata": {"account": {"name": "My Company", "id": "c01458a5-7276-41ce-bc19-639906b0450a"}, "plan": "enterprise"}, "created_at": "2020-09-19T12:18:37.071Z", "updated_at": "2020-09-19T12:18:37.071Z", "state": "authorized"}, {"id": "1111+test_user_id", "name": "Salesforce", "icon": "https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png", "logo": "https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg", "website": "https://www.salesforce.com", "tag_line": "CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.", "service_id": "teamleader", "unified_api": "crm", "consumer_id": "test_user_id", "auth_type": "oauth2", "enabled": true, "metadata": {"account": {"name": "My Company", "id": "c01458a5-7276-41ce-bc19-639906b0450a"}, "plan": "enterprise"}, "created_at": "2020-09-19T12:18:37.071Z", "updated_at": "2020-09-19T12:18:37.071Z", "state": "authorized"}], "services": ["salesforce", "stripe"], "aggregated_request_count": 101, "request_counts": {"unify": 100, "proxy": 10, "vault": 21}, "created": "2021-05-07T12:55:42.242Z", "modified": "2021-05-07T12:55:42.242Z", "request_count_updated": "2021-05-07T12:55:42.242Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.consumersUpdate:
    "":
      parameters:
        path:
          consumer_id: "test_user_id"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      requestBody:
        application/json: {"metadata": {"account_name": "SpaceX", "user_name": "Elon Musk", "email": "elon@musk.com", "image": "https://www.spacex.com/static/images/share.jpg"}}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"consumer_id": "test_consumer_id", "application_id": "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX", "metadata": {"account_name": "SpaceX", "user_name": "Elon Musk", "email": "elon@musk.com", "image": "https://www.spacex.com/static/images/share.jpg"}, "connections": [{"id": "1111+test_user_id", "name": "Salesforce", "icon": "https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png", "logo": "https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg", "website": "https://www.salesforce.com", "tag_line": "CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.", "service_id": "teamleader", "unified_api": "crm", "consumer_id": "test_user_id", "auth_type": "oauth2", "enabled": true, "metadata": {"account": {"name": "My Company", "id": "c01458a5-7276-41ce-bc19-639906b0450a"}, "plan": "enterprise"}, "created_at": "2020-09-19T12:18:37.071Z", "updated_at": "2020-09-19T12:18:37.071Z", "state": "authorized"}, {"id": "1111+test_user_id", "name": "Salesforce", "icon": "https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png", "logo": "https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg", "website": "https://www.salesforce.com", "tag_line": "CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.", "service_id": "teamleader", "unified_api": "crm", "consumer_id": "test_user_id", "auth_type": "oauth2", "enabled": true, "metadata": {"account": {"name": "My Company", "id": "c01458a5-7276-41ce-bc19-639906b0450a"}, "plan": "enterprise"}, "created_at": "2020-09-19T12:18:37.071Z", "updated_at": "2020-09-19T12:18:37.071Z", "state": "authorized"}, {"id": "1111+test_user_id", "name": "Salesforce", "icon": "https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png", "logo": "https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg", "website": "https://www.salesforce.com", "tag_line": "CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.", "service_id": "teamleader", "unified_api": "crm", "consumer_id": "test_user_id", "auth_type": "oauth2", "enabled": true, "metadata": {"account": {"name": "My Company", "id": "c01458a5-7276-41ce-bc19-639906b0450a"}, "plan": "enterprise"}, "created_at": "2020-09-19T12:18:37.071Z", "updated_at": "2020-09-19T12:18:37.071Z", "state": "authorized"}], "services": ["salesforce", "stripe"], "aggregated_request_count": 101, "request_counts": {"unify": 100, "proxy": 10, "vault": 21}, "created": "2021-05-07T12:55:42.242Z", "modified": "2021-05-07T12:55:42.242Z", "request_count_updated": "2021-05-07T12:55:42.242Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.consumersDelete:
    "":
      parameters:
        path:
          consumer_id: "test_user_id"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"consumer_id": "test_consumer_id"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.consumerRequestCountsAll:
    "":
      parameters:
        path:
          consumer_id: "test_user_id"
        query:
          start_datetime: "2021-05-01T12:00:00.000Z"
          end_datetime: "2021-05-30T12:00:00.000Z"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"application_id": "1111", "consumer_id": "test_user_id", "start_datetime": "2021-05-01T12:00:00.000Z", "end_datetime": "2021-05-10T12:00:00.000Z", "aggregated_request_count": 40, "request_counts": {"unify": 100, "proxy": 10, "vault": 21}}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.connectionsAll:
    "":
      parameters:
        query:
          api: "crm"
          configured: true
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-consumer-id: "test-consumer"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": []}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.connectionsOne:
    "":
      parameters:
        path:
          service_id: "pipedrive"
          unified_api: "crm"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-consumer-id: "test-consumer"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"id": "crm+salesforce", "service_id": "salesforce", "name": "Salesforce", "tag_line": "CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.", "unified_api": "crm", "state": "authorized", "integration_state": "configured", "auth_type": "oauth2", "oauth_grant_type": "authorization_code", "enabled": true, "website": "https://www.salesforce.com", "icon": "https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png", "logo": "https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg", "authorize_url": "https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>", "revoke_url": "https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>", "settings": {"instance_url": "https://eu28.salesforce.com", "api_key": "12345xxxxxx"}, "metadata": {"account": {"name": "My Company", "id": "c01458a5-7276-41ce-bc19-639906b0450a"}, "plan": "enterprise"}, "form_fields": [{"id": "instance_url", "label": "Instance url", "placeholder": "", "description": "Slack channel to push notification to", "type": "text", "required": true, "custom_field": false, "allow_custom_values": false, "disabled": false, "hidden": false, "deprecated": false, "sensitive": false, "prefix": "https://", "suffix": ".shopify.com", "options": [{"label": "General Channel", "value": "general"}]}, {"id": "api_key", "label": "API Key", "placeholder": "", "description": "Slack channel to push notification to", "type": "text", "required": true, "custom_field": false, "allow_custom_values": false, "disabled": false, "hidden": false, "deprecated": false, "sensitive": true, "prefix": "https://", "suffix": ".shopify.com", "options": [{"label": "General Channel", "value": "general"}]}], "configuration": [{"resource": "leads", "defaults": []}, {"resource": "leads", "defaults": []}], "configurable_resources": ["opportunities", "companies", "contacts", "leads"], "resource_schema_support": ["leads"], "resource_settings_support": ["leads"], "settings_required_for_authorization": ["client_id", "client_secret"], "subscriptions": [{"downstream_id": "5f5f5f5f5f5f5f5f5f5f5f5f", "unify_event_types": ["crm.contact.created"], "downstream_event_types": ["contacts.CREATED"], "execute_url": "https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}", "created_at": "2020-10-01T12:00:00.000Z"}, {"downstream_id": "5f5f5f5f5f5f5f5f5f5f5f5f", "unify_event_types": ["crm.contact.created"], "downstream_event_types": ["contacts.CREATED"], "execute_url": "https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}", "created_at": "2020-10-01T12:00:00.000Z"}, {"downstream_id": "5f5f5f5f5f5f5f5f5f5f5f5f", "unify_event_types": ["crm.contact.created"], "downstream_event_types": ["contacts.CREATED"], "execute_url": "https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}", "created_at": "2020-10-01T12:00:00.000Z"}], "has_guide": true, "created_at": 1615563533390, "custom_mappings": [{"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}, {"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}, {"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}], "updated_at": 1616662325753}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.connectionsUpdate:
    "":
      parameters:
        path:
          service_id: "pipedrive"
          unified_api: "crm"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-consumer-id: "test-consumer"
      requestBody:
        application/json: {"enabled": true, "settings": {"instance_url": "https://eu28.salesforce.com", "api_key": "12345xxxxxx"}, "metadata": {"account": {"name": "My Company", "id": "c01458a5-7276-41ce-bc19-639906b0450a"}, "plan": "enterprise"}, "configuration": [{"resource": "leads", "defaults": [{"id": "ProductInterest", "options": [], "value": 10.5}, {"id": "ProductInterest", "options": [{"id": "1234", "label": "General Channel", "options": [{"label": "General Channel", "value": 12.5}, {"label": "General Channel", "value": ["team", "general"]}, {"label": "General Channel", "value": true}]}, {"label": "General Channel", "value": 12.5}], "value": true}]}, {"resource": "leads", "defaults": [{"id": "ProductInterest", "options": [{"id": "1234", "label": "General Channel", "options": [{"label": "General Channel", "value": ["team", "general"]}, {"label": "General Channel", "value": true}]}], "value": "GC5000 series"}, {"id": "ProductInterest", "options": [{"label": "General Channel", "value": 12.5}], "value": 10}]}, {"resource": "leads", "defaults": [{"id": "ProductInterest", "options": [], "value": true}, {"id": "ProductInterest", "options": [{"id": "1234", "label": "General Channel", "options": [{"label": "General Channel", "value": "general"}, {"label": "General Channel", "value": "general"}]}, {"label": "General Channel", "value": ["team", "general"]}], "value": "GC5000 series"}, {"id": "ProductInterest", "options": [{"label": "General Channel", "value": "general"}, {"label": "General Channel", "value": "general"}], "value": 10.5}]}], "custom_mappings": [{"value": "$.root.training.first_aid"}, {"value": "$.root.training.first_aid"}]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"id": "crm+salesforce", "service_id": "salesforce", "name": "Salesforce", "tag_line": "CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.", "unified_api": "crm", "state": "authorized", "integration_state": "configured", "auth_type": "oauth2", "oauth_grant_type": "authorization_code", "enabled": true, "website": "https://www.salesforce.com", "icon": "https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png", "logo": "https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg", "authorize_url": "https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>", "revoke_url": "https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>", "settings": {"instance_url": "https://eu28.salesforce.com", "api_key": "12345xxxxxx"}, "metadata": {"account": {"name": "My Company", "id": "c01458a5-7276-41ce-bc19-639906b0450a"}, "plan": "enterprise"}, "form_fields": [{"id": "instance_url", "label": "Instance url", "placeholder": "", "description": "Slack channel to push notification to", "type": "text", "required": true, "custom_field": false, "allow_custom_values": false, "disabled": false, "hidden": false, "deprecated": false, "sensitive": false, "prefix": "https://", "suffix": ".shopify.com", "options": [{"label": "General Channel", "value": "general"}]}, {"id": "api_key", "label": "API Key", "placeholder": "", "description": "Slack channel to push notification to", "type": "text", "required": true, "custom_field": false, "allow_custom_values": false, "disabled": false, "hidden": false, "deprecated": false, "sensitive": true, "prefix": "https://", "suffix": ".shopify.com", "options": [{"label": "General Channel", "value": "general"}]}], "configuration": [{"resource": "leads", "defaults": []}], "configurable_resources": ["opportunities", "companies", "contacts", "leads"], "resource_schema_support": ["leads"], "resource_settings_support": ["leads"], "settings_required_for_authorization": ["client_id", "client_secret"], "subscriptions": [{"downstream_id": "5f5f5f5f5f5f5f5f5f5f5f5f", "unify_event_types": ["crm.contact.created"], "downstream_event_types": ["contacts.CREATED"], "execute_url": "https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}", "created_at": "2020-10-01T12:00:00.000Z"}], "has_guide": true, "created_at": 1615563533390, "custom_mappings": [{"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}, {"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}], "updated_at": 1616662325753}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.connectionsDelete:
    "":
      parameters:
        path:
          service_id: "pipedrive"
          unified_api: "crm"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-consumer-id: "test-consumer"
      responses:
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.connectionsImport:
    "":
      parameters:
        path:
          service_id: "pipedrive"
          unified_api: "crm"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-consumer-id: "test-consumer"
      requestBody:
        application/json: {"credentials": {"refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.cThIIoDvwdueQB468K5xDc5633seEFoqwxjF_xSJyQQ", "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c", "issued_at": "2020-01-01T00:00:00Z", "expires_in": 3600}, "metadata": {"account": {"name": "My Company", "id": "c01458a5-7276-41ce-bc19-639906b0450a"}, "plan": "enterprise"}}
      responses:
        "200":
          application/json: {"status_code": 201, "status": "OK", "data": {"id": "crm+salesforce", "service_id": "salesforce", "name": "Salesforce", "tag_line": "CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.", "unified_api": "crm", "state": "authorized", "integration_state": "configured", "auth_type": "oauth2", "oauth_grant_type": "authorization_code", "enabled": true, "website": "https://www.salesforce.com", "icon": "https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png", "logo": "https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg", "authorize_url": "https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>", "revoke_url": "https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>", "settings": {"instance_url": "https://eu28.salesforce.com", "api_key": "12345xxxxxx"}, "metadata": {"account": {"name": "My Company", "id": "c01458a5-7276-41ce-bc19-639906b0450a"}, "plan": "enterprise"}, "form_fields": [{"id": "instance_url", "label": "Instance url", "placeholder": "", "description": "Slack channel to push notification to", "type": "text", "required": true, "custom_field": false, "allow_custom_values": false, "disabled": false, "hidden": false, "deprecated": false, "sensitive": false, "prefix": "https://", "suffix": ".shopify.com", "options": [{"label": "General Channel", "value": "general"}]}, {"id": "api_key", "label": "API Key", "placeholder": "", "description": "Slack channel to push notification to", "type": "text", "required": true, "custom_field": false, "allow_custom_values": false, "disabled": false, "hidden": false, "deprecated": false, "sensitive": true, "prefix": "https://", "suffix": ".shopify.com", "options": [{"label": "General Channel", "value": "general"}]}], "configuration": [{"resource": "leads", "defaults": [{"target": "custom_fields", "id": "ProductInterest", "options": [{"id": "1234", "label": "General Channel", "options": []}, {"id": "1234", "label": "General Channel", "options": [{"label": "General Channel", "value": "general"}, {"label": "General Channel", "value": "general"}]}, {"label": "General Channel", "value": "general"}], "value": [10, 10.5, "GC6000 series"]}, {"target": "custom_fields", "id": "ProductInterest", "options": [{"label": "General Channel", "value": 123}, {"id": "1234", "label": "General Channel", "options": [{"label": "General Channel", "value": ["team", "general"]}]}, {"id": "1234", "label": "General Channel", "options": []}], "value": 10.5}]}, {"resource": "leads", "defaults": []}], "configurable_resources": ["opportunities", "companies", "contacts", "leads"], "resource_schema_support": ["leads"], "resource_settings_support": ["leads"], "settings_required_for_authorization": ["client_id", "client_secret"], "subscriptions": [{"downstream_id": "5f5f5f5f5f5f5f5f5f5f5f5f", "unify_event_types": ["crm.contact.created"], "downstream_event_types": ["contacts.CREATED"], "execute_url": "https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}", "created_at": "2020-10-01T12:00:00.000Z"}], "has_guide": true, "created_at": 1615563533390, "custom_mappings": [{"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}, {"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}, {"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}], "updated_at": 1616662325753}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.connectionsToken:
    "":
      parameters:
        path:
          service_id: "pipedrive"
          unified_api: "crm"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-consumer-id: "test-consumer"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"id": "crm+salesforce", "service_id": "salesforce", "name": "Salesforce", "tag_line": "CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.", "unified_api": "crm", "state": "authorized", "integration_state": "configured", "auth_type": "oauth2", "oauth_grant_type": "authorization_code", "enabled": true, "website": "https://www.salesforce.com", "icon": "https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png", "logo": "https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg", "authorize_url": "https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>", "revoke_url": "https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>", "settings": {"instance_url": "https://eu28.salesforce.com", "api_key": "12345xxxxxx"}, "metadata": {"account": {"name": "My Company", "id": "c01458a5-7276-41ce-bc19-639906b0450a"}, "plan": "enterprise"}, "form_fields": [{"id": "instance_url", "label": "Instance url", "placeholder": "", "description": "Slack channel to push notification to", "type": "text", "required": true, "custom_field": false, "allow_custom_values": false, "disabled": false, "hidden": false, "deprecated": false, "sensitive": false, "prefix": "https://", "suffix": ".shopify.com", "options": [{"label": "General Channel", "value": "general"}]}, {"id": "api_key", "label": "API Key", "placeholder": "", "description": "Slack channel to push notification to", "type": "text", "required": true, "custom_field": false, "allow_custom_values": false, "disabled": false, "hidden": false, "deprecated": false, "sensitive": true, "prefix": "https://", "suffix": ".shopify.com", "options": [{"label": "General Channel", "value": "general"}]}], "configuration": [{"resource": "leads", "defaults": [{"target": "custom_fields", "id": "ProductInterest", "options": [{"id": "1234", "label": "General Channel", "options": []}, {"label": "General Channel", "value": "general"}], "value": []}, {"target": "custom_fields", "id": "ProductInterest", "options": [{"label": "General Channel", "value": "general"}], "value": true}]}, {"resource": "leads", "defaults": [{"target": "custom_fields", "id": "ProductInterest", "options": [{"label": "General Channel", "value": true}, {"label": "General Channel", "value": ["team", "general"]}, {"id": "1234", "label": "General Channel", "options": [{"label": "General Channel", "value": true}]}], "value": 10}]}], "configurable_resources": ["opportunities", "companies", "contacts", "leads"], "resource_schema_support": ["leads"], "resource_settings_support": ["leads"], "settings_required_for_authorization": ["client_id", "client_secret"], "subscriptions": [], "has_guide": true, "created_at": 1615563533390, "custom_mappings": [{"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}, {"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}, {"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}], "updated_at": 1616662325753}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.validateConnectionState:
    "":
      parameters:
        path:
          service_id: "pipedrive"
          unified_api: "crm"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-consumer-id: "test-consumer"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"id": "crm+salesforce", "state": "authorized"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.connectionSettingsAll:
    "":
      parameters:
        path:
          unified_api: "crm"
          service_id: "pipedrive"
          resource: "leads"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-consumer-id: "test-consumer"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"id": "crm+salesforce", "service_id": "salesforce", "name": "Salesforce", "tag_line": "CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.", "unified_api": "crm", "state": "authorized", "integration_state": "configured", "auth_type": "oauth2", "oauth_grant_type": "authorization_code", "enabled": true, "website": "https://www.salesforce.com", "icon": "https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png", "logo": "https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg", "authorize_url": "https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>", "revoke_url": "https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>", "settings": {"instance_url": "https://eu28.salesforce.com", "api_key": "12345xxxxxx"}, "metadata": {"account": {"name": "My Company", "id": "c01458a5-7276-41ce-bc19-639906b0450a"}, "plan": "enterprise"}, "form_fields": [{"id": "instance_url", "label": "Instance url", "placeholder": "", "description": "Slack channel to push notification to", "type": "text", "required": true, "custom_field": false, "allow_custom_values": false, "disabled": false, "hidden": false, "deprecated": false, "sensitive": false, "prefix": "https://", "suffix": ".shopify.com", "options": [{"label": "General Channel", "value": "general"}]}, {"id": "api_key", "label": "API Key", "placeholder": "", "description": "Slack channel to push notification to", "type": "text", "required": true, "custom_field": false, "allow_custom_values": false, "disabled": false, "hidden": false, "deprecated": false, "sensitive": true, "prefix": "https://", "suffix": ".shopify.com", "options": [{"label": "General Channel", "value": "general"}]}], "configuration": [], "configurable_resources": ["opportunities", "companies", "contacts", "leads"], "resource_schema_support": ["leads"], "resource_settings_support": ["leads"], "settings_required_for_authorization": ["client_id", "client_secret"], "subscriptions": [{"downstream_id": "5f5f5f5f5f5f5f5f5f5f5f5f", "unify_event_types": ["crm.contact.created"], "downstream_event_types": ["contacts.CREATED"], "execute_url": "https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}", "created_at": "2020-10-01T12:00:00.000Z"}, {"downstream_id": "5f5f5f5f5f5f5f5f5f5f5f5f", "unify_event_types": ["crm.contact.created"], "downstream_event_types": ["contacts.CREATED"], "execute_url": "https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}", "created_at": "2020-10-01T12:00:00.000Z"}], "has_guide": true, "created_at": 1615563533390, "custom_mappings": [{"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}, {"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}, {"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}], "updated_at": 1616662325753}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.connectionSettingsUpdate:
    "":
      parameters:
        path:
          service_id: "pipedrive"
          unified_api: "crm"
          resource: "leads"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-consumer-id: "test-consumer"
      requestBody:
        application/json: {"enabled": true, "settings": {"instance_url": "https://eu28.salesforce.com", "api_key": "12345xxxxxx"}, "metadata": {"account": {"name": "My Company", "id": "c01458a5-7276-41ce-bc19-639906b0450a"}, "plan": "enterprise"}, "configuration": [{"resource": "leads", "defaults": []}], "custom_mappings": []}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"id": "crm+salesforce", "service_id": "salesforce", "name": "Salesforce", "tag_line": "CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.", "unified_api": "crm", "state": "authorized", "integration_state": "configured", "auth_type": "oauth2", "oauth_grant_type": "authorization_code", "enabled": true, "website": "https://www.salesforce.com", "icon": "https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png", "logo": "https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg", "authorize_url": "https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>", "revoke_url": "https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>", "settings": {"instance_url": "https://eu28.salesforce.com", "api_key": "12345xxxxxx"}, "metadata": {"account": {"name": "My Company", "id": "c01458a5-7276-41ce-bc19-639906b0450a"}, "plan": "enterprise"}, "form_fields": [{"id": "instance_url", "label": "Instance url", "placeholder": "", "description": "Slack channel to push notification to", "type": "text", "required": true, "custom_field": false, "allow_custom_values": false, "disabled": false, "hidden": false, "deprecated": false, "sensitive": false, "prefix": "https://", "suffix": ".shopify.com", "options": [{"label": "General Channel", "value": "general"}]}, {"id": "api_key", "label": "API Key", "placeholder": "", "description": "Slack channel to push notification to", "type": "text", "required": true, "custom_field": false, "allow_custom_values": false, "disabled": false, "hidden": false, "deprecated": false, "sensitive": true, "prefix": "https://", "suffix": ".shopify.com", "options": [{"label": "General Channel", "value": "general"}]}], "configuration": [], "configurable_resources": ["opportunities", "companies", "contacts", "leads"], "resource_schema_support": ["leads"], "resource_settings_support": ["leads"], "settings_required_for_authorization": ["client_id", "client_secret"], "subscriptions": [{"downstream_id": "5f5f5f5f5f5f5f5f5f5f5f5f", "unify_event_types": ["crm.contact.created"], "downstream_event_types": ["contacts.CREATED"], "execute_url": "https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}", "created_at": "2020-10-01T12:00:00.000Z"}, {"downstream_id": "5f5f5f5f5f5f5f5f5f5f5f5f", "unify_event_types": ["crm.contact.created"], "downstream_event_types": ["contacts.CREATED"], "execute_url": "https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}", "created_at": "2020-10-01T12:00:00.000Z"}], "has_guide": true, "created_at": 1615563533390, "custom_mappings": [{"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}], "updated_at": 1616662325753}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.customFieldsAll:
    "":
      parameters:
        path:
          unified_api: "crm"
          service_id: "pipedrive"
          resource: "leads"
        query:
          resource_id: "1234"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-consumer-id: "test-consumer"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": [{"id": "123456", "name": "SSN", "description": "Employee Level", "value": "495172776"}, {"id": "123456", "name": "SSN", "description": "Employee Level", "value": "495172776"}]}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.connectionCustomMappingsAll:
    "":
      parameters:
        path:
          unified_api: "crm"
          service_id: "pipedrive"
          resource: "leads"
        query:
          resource_id: "1234"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-consumer-id: "test-consumer"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": [{"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}]}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.customMappingsAll:
    "":
      parameters:
        path:
          unified_api: "crm"
          service_id: "pipedrive"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-consumer-id: "test-consumer"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": [{"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}, {"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}, {"id": "hris+employees+first_aid_training", "label": "First Aid Training", "description": "First Aid Training completed after 2019-01-01", "value": "$.root.training.first_aid", "key": "first_aid_training", "required": false, "custom_field": true, "consumer_id": "test_user_id", "example": "Some value"}]}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.sessionsCreate:
    "":
      parameters:
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-consumer-id: "test-consumer"
      requestBody:
        application/json: {"consumer_metadata": {"account_name": "SpaceX", "user_name": "Elon Musk", "email": "elon@musk.com", "image": "https://www.spacex.com/static/images/share.jpg"}, "redirect_uri": "https://mysaas.com/dashboard", "settings": {"unified_apis": ["crm"], "session_length": "30m"}, "theme": {"favicon": "https://res.cloudinary.com/apideck/icons/intercom", "logo": "https://res.cloudinary.com/apideck/icons/intercom", "primary_color": "#286efa", "sidepanel_background_color": "#286efa", "sidepanel_text_color": "#FFFFFF", "vault_name": "Intercom", "privacy_url": "https://compliance.apideck.com/privacy-policy", "terms_url": "https://www.termsfeed.com/terms-conditions/957c85c1b089ae9e3219c83eff65377e"}, "custom_consumer_settings": {"feature_flag_1": true, "tax_rates": [{"id": "6", "label": "6%"}, {"id": "21", "label": "21%"}]}}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"session_uri": "http://vault.apideck.com/session/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj", "session_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.logsAll:
    "":
      parameters:
        query:
          filter: {"connector_id": "crm+salesforce", "status_code": 201, "exclude_unified_apis": "vault,proxy"}
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-consumer-id: "test-consumer"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": [{"api_style": "REST", "base_url": "unify.apideck.com", "child_request": false, "consumer_id": "test-consumer", "duration": 2220.379304, "error_message": "Refresh token is invalid", "execution": 2248, "has_children": false, "http_method": "GET", "id": "0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f", "latency": 27.620695999999953, "operation": {"id": "connectionsAll", "name": "Get All Connections"}, "parent_id": "0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f", "path": "/vault/connections", "sandbox": false, "service": {"id": "apideck-vault", "name": "Apideck Vault"}, "source_ip": "94.227.131.238", "status_code": 200, "success": true, "timestamp": "2021-07-12T14:26:17.420Z", "unified_api": "vault"}], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  webhook.webhooksAll:
    "":
      parameters:
        query: {}
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": [], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  webhook.webhooksAdd:
    "":
      parameters:
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      requestBody:
        application/json: {"description": "A description", "unified_api": "crm", "status": "enabled", "delivery_url": "https://example.com/my/webhook/endpoint", "events": ["vault.connection.created", "vault.connection.updated"]}
      responses:
        "201":
          application/json: {"status_code": 200, "status": "OK", "data": {"id": "1234", "description": "A description", "unified_api": "crm", "status": "enabled", "disabled_reason": "retry_limit", "delivery_url": "https://example.com/my/webhook/endpoint", "execute_base_url": "https://unify.apideck.com/webhook/webhooks/1234/execute", "events": ["vault.connection.created", "vault.connection.updated"], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  webhook.webhooksOne:
    "":
      parameters:
        path:
          id: "<id>"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"id": "1234", "description": "A description", "unified_api": "crm", "status": "enabled", "disabled_reason": "retry_limit", "delivery_url": "https://example.com/my/webhook/endpoint", "execute_base_url": "https://unify.apideck.com/webhook/webhooks/1234/execute", "events": ["vault.connection.created", "vault.connection.updated"], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  webhook.webhooksUpdate:
    "":
      parameters:
        path:
          id: "<id>"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      requestBody:
        application/json: {"description": "A description", "status": "enabled", "delivery_url": "https://example.com/my/webhook/endpoint", "events": ["vault.connection.created", "vault.connection.updated"]}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"id": "1234", "description": "A description", "unified_api": "crm", "status": "enabled", "disabled_reason": "retry_limit", "delivery_url": "https://example.com/my/webhook/endpoint", "execute_base_url": "https://unify.apideck.com/webhook/webhooks/1234/execute", "events": ["vault.connection.created", "vault.connection.updated"], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  webhook.webhooksDelete:
    "":
      parameters:
        path:
          id: "<id>"
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"id": "1234", "description": "A description", "unified_api": "crm", "status": "enabled", "disabled_reason": "retry_limit", "delivery_url": "https://example.com/my/webhook/endpoint", "execute_base_url": "https://unify.apideck.com/webhook/webhooks/1234/execute", "events": ["vault.connection.created", "vault.connection.updated"], "updated_at": "2020-09-30T07:43:32.000Z", "created_at": "2020-09-30T07:43:32.000Z"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  webhook.eventLogsAll:
    "":
      parameters:
        query:
          filter: {"exclude_apis": "vault,proxy", "consumer_id": "test_user_id", "entity_type": "Connection", "event_type": "vault.connection.callable"}
        header:
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": [], "meta": {"items_on_page": 50, "cursors": {"previous": "em9oby1jcm06OnBhZ2U6OjE=", "current": "em9oby1jcm06OnBhZ2U6OjI=", "next": "em9oby1jcm06OnBhZ2U6OjM="}}, "links": {"previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D", "current": "https://unify.apideck.com/crm/companies", "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  vault.createCallbackState:
    "":
      parameters:
        path:
          service_id: "pipedrive"
          unified_api: "crm"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
      requestBody:
        application/json: {"redirect_uri": "https://example.com/callback"}
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "data": {"state": "123e4567-e89b-12d3-a456-426614174000"}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": "Missing property foobar", "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": "Could not find widget with id: '123'", "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.agedCreditorsOne:
    "":
      parameters:
        query:
          filter: {"customer_id": "123abc", "supplier_id": "123abc", "report_as_of_date": "2024-01-01", "period_count": 3, "period_length": 30}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "AgedCreditors", "operation": "one", "data": {"report_generated_at": "2024-11-14T12:00:00.000Z", "report_as_of_date": "2024-11-13", "period_count": 4, "period_length": 30, "outstanding_balances": [{"outstanding_balances_by_currency": [{"currency": "USD", "balances_by_period": [{"start_date": "2024-01-01", "end_date": "2024-01-30", "total_amount": 1500, "balances_by_transaction": [{"transaction_id": "INV-1001", "transaction_date": "2024-01-15", "transaction_type": "invoice", "due_date": "2024-02-15", "original_amount": 1000, "outstanding_balance": 800}, {"transaction_id": "INV-1001", "transaction_date": "2024-01-15", "transaction_type": "invoice", "due_date": "2024-02-15", "original_amount": 1000, "outstanding_balance": 800}]}, {"start_date": "2024-01-01", "end_date": "2024-01-30", "total_amount": 1500, "balances_by_transaction": [{"transaction_id": "INV-1001", "transaction_date": "2024-01-15", "transaction_type": "invoice", "due_date": "2024-02-15", "original_amount": 1000, "outstanding_balance": 800}, {"transaction_id": "INV-1001", "transaction_date": "2024-01-15", "transaction_type": "invoice", "due_date": "2024-02-15", "original_amount": 1000, "outstanding_balance": 800}, {"transaction_id": "INV-1001", "transaction_date": "2024-01-15", "transaction_type": "invoice", "due_date": "2024-02-15", "original_amount": 1000, "outstanding_balance": 800}]}]}, {"currency": "USD", "balances_by_period": [{"start_date": "2024-01-01", "end_date": "2024-01-30", "total_amount": 1500, "balances_by_transaction": [{"transaction_id": "INV-1001", "transaction_date": "2024-01-15", "transaction_type": "invoice", "due_date": "2024-02-15", "original_amount": 1000, "outstanding_balance": 800}]}]}]}, {"outstanding_balances_by_currency": [{"currency": "USD", "balances_by_period": []}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
  accounting.agedDebtorsOne:
    "":
      parameters:
        query:
          filter: {"customer_id": "123abc", "supplier_id": "123abc", "report_as_of_date": "2024-01-01", "period_count": 3, "period_length": 30}
          pass_through: {"search": "San Francisco"}
          fields: "id,updated_at"
        header:
          x-apideck-consumer-id: "test-consumer"
          x-apideck-app-id: "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX"
          x-apideck-service-id: "salesforce"
      responses:
        "200":
          application/json: {"status_code": 200, "status": "OK", "service": "quickbooks", "resource": "AgedDebtors", "operation": "one", "data": {"report_generated_at": "2024-11-14T12:00:00.000Z", "report_as_of_date": "2024-11-13", "period_count": 4, "period_length": 30, "outstanding_balances": [{"customer_id": "123", "customer_name": "Super Store", "outstanding_balances_by_currency": [{"currency": "USD", "balances_by_period": [{"start_date": "2024-01-01", "end_date": "2024-01-30", "total_amount": 1500, "balances_by_transaction": [{"transaction_id": "INV-1001", "transaction_date": "2024-01-15", "transaction_type": "invoice", "due_date": "2024-02-15", "original_amount": 1000, "outstanding_balance": 800}, {"transaction_id": "INV-1001", "transaction_date": "2024-01-15", "transaction_type": "invoice", "due_date": "2024-02-15", "original_amount": 1000, "outstanding_balance": 800}]}, {"start_date": "2024-01-01", "end_date": "2024-01-30", "total_amount": 1500, "balances_by_transaction": [{"transaction_id": "INV-1001", "transaction_date": "2024-01-15", "transaction_type": "invoice", "due_date": "2024-02-15", "original_amount": 1000, "outstanding_balance": 800}, {"transaction_id": "INV-1001", "transaction_date": "2024-01-15", "transaction_type": "invoice", "due_date": "2024-02-15", "original_amount": 1000, "outstanding_balance": 800}, {"transaction_id": "INV-1001", "transaction_date": "2024-01-15", "transaction_type": "invoice", "due_date": "2024-02-15", "original_amount": 1000, "outstanding_balance": 800}]}]}, {"currency": "USD", "balances_by_period": [{"start_date": "2024-01-01", "end_date": "2024-01-30", "total_amount": 1500, "balances_by_transaction": [{"transaction_id": "INV-1001", "transaction_date": "2024-01-15", "transaction_type": "invoice", "due_date": "2024-02-15", "original_amount": 1000, "outstanding_balance": 800}]}]}]}, {"customer_id": "123", "customer_name": "Super Store", "outstanding_balances_by_currency": [{"currency": "USD", "balances_by_period": []}]}]}}
        "400":
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestValidationError", "message": "Invalid Params", "detail": {"missing": [{"foobar": "required"}]}, "ref": "https://developers.apideck.com/errors#requestvalidationerror"}
        "401":
          application/json: {"status_code": 401, "error": "Unauthorized", "type_name": "UnauthorizedError", "message": "Unauthorized Request", "detail": "Missing authentication", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
        "402":
          application/json: {"status_code": 402, "error": "Payment Required", "type_name": "RequestLimitError", "message": "Request Limit Reached", "detail": "You have reached your limit of 2000", "ref": "https://developers.apideck.com/errors#requestlimiterror"}
        "404":
          application/json: {"status_code": 404, "error": "Not Found", "type_name": "EntityNotFoundError", "message": "Unknown Widget", "detail": {"not_found": {"entity": "widget", "id": "123"}}, "ref": "https://developers.apideck.com/errors#entitynotfounderror"}
        "422":
          application/json: {"status_code": 422, "error": "Unprocessable Entity", "type_name": "InvalidStateError", "message": "Invalid State", "detail": "Unprocessable request, please verify your request headers and body.", "ref": "https://developers.apideck.com/errors#invalidstateerror"}
        default:
          application/json: {"status_code": 400, "error": "Bad Request", "type_name": "RequestHeadersValidationError", "message": "Invalid Params", "detail": "Missing Header: x-apideck-consumer-id", "ref": "https://developers.apideck.com/errors#unauthorizederror"}
generatedTests: {}
